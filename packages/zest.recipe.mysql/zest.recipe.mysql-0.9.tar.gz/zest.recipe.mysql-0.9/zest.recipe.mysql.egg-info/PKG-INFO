Metadata-Version: 1.0
Name: zest.recipe.mysql
Version: 0.9
Summary: A Buildout recipe to setup a MySQL database.
Home-page: https://svn.zestsoftware.nl/svn/zest/zest.recipe.mysql/trunk
Author: Jean-Paul Ladage
Author-email: j.ladage@zestsoftware.nl
License: ZPL
Description: Recipe to install Mysql
        =======================
        
        Code repository: https://svn.zestsoftware.nl/svn/zest/zest.recipe.mysql
        
        Change history
        **************
        
        0.9 (2008-10-15)
        ================
        
        - Better conditional downloading/extracting of the zipfiles. [reinout]
        
        - Changing update method to check for existance of /parts/mysql. If you've
        removed that parts directory the full install will be run. Handy for
        updating old installs. [reinout]
        
        
        0.8 (2008-10-10)
        ================
        
        - Changed mysql-python egg handling: it no longer installs an egg in your
        global egg cache (which gives errors when you have two buildouts that use
        it). Instead it installs the egg locally as a development egg. This means
        you have to include it in your instance's egg list as ${mysql:eggs}.
        [reinout]
        
        - Added example parts to the buildout config so that it can be tested that
        way. There are no real other tests. [reinout]
        
        
        0.4.0 (2008-03-16)
        ==================
        
        - Created recipe with ZopeSkel [Jean-Paul Ladage].
        
        - Learned from the varnish recipe and wrote the build recipe which
        downloads, compiles and install MySQL and created wrapper scripts
        in the bin folder of the buildout.
        
        Detailed Documentation
        **********************
        
        Supported options
        =================
        
        The recipe supports the following options:
        
        .. Note to recipe author!
        ----------------------
        For each option the recipe uses you shoud include a description
        about the purpose of the option, the format and semantics of the
        values it accepts, whether it is mandatory or optional and what the
        default value is if it is omitted.
        
        option1
        Description for ``option1``...
        
        option2
        Description for ``option2``...
        
        
        Example usage
        =============
        
        .. Note to recipe author!
        ----------------------
        zc.buildout provides a nice testing environment which makes it
        relatively easy to write doctests that both demonstrate the use of
        the recipe and test it.
        You can find examples of recipe doctests from the PyPI, e.g.
        
        http://pypi.python.org/pypi/zc.recipe.egg
        
        The PyPI page for zc.buildout contains documentation about the test
        environment.
        
        http://pypi.python.org/pypi/zc.buildout#testing-support
        
        Below is a skeleton doctest that you can start with when building
        your own tests.
        
        We'll start by creating a buildout that uses the recipe::
        
        >>> write('buildout.cfg',
        ... """
        ... [buildout]
        ... parts = test1
        ...
        ... [test1]
        ... recipe = zest.recipe.mysql
        ... option1 = %(foo)s
        ... option2 = %(bar)s
        ... """ % { 'foo' : 'value1', 'bar' : 'value2'})
        
        Running the buildout gives us::
        
        >>> print system(buildout)
        Upgraded:
        ...
        Installing test1.
        Unused options for test1: 'option2' 'option1'.
        
        
        
        Contributors
        ************
        
        Jean-Paul Ladage, Author
        
        
        Download
        ********
        
Keywords: buildout recipe mysql
Platform: UNKNOWN
Classifier: Framework :: Buildout
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: Zope Public License
