<html metal:use-macro="here/prefs_main_template/macros/master" 
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="cssmanager">
<head>
  <tal:block metal:fill-slot="top_slot">
    <tal:block tal:define="dummy python:request.set('disable_border',1)" />
  </tal:block>
</head>

<body>
  

<div metal:fill-slot="prefs_configlet_main" 
  tal:define="pc here/CSSManager_css;
                   isCustomized context/CSSManager_css/isCustomized;
                   properties context/CSSManager_css/getSelectedProperties;
                   propertiesHelp context/CSSManager_css/parseHelpFile;
                   showChooser context/CSSManager_css/showChooser;
                   chooser request/form/chooser | string:base_properties">

<script type="text/javascript">
function update_preview(name, color)
{
    document.getElementById(name).style.backgroundColor = color;
}

function rgbStringToHex(rgbString)
{
    // Ripped off from http://www.linuxtopia.org/online_books/javascript_guides/javascript_faq/rgbtohex.htm
    function numToHex(n)
    {
         if (n == null) return "00";
         n = parseInt(n);
         if (n == 0 || isNaN(n)) return "00";
         n = Math.max(0, n); n = Math.min(n, 255); n = Math.round(n);
         return "0123456789ABCDEF".charAt((n - n % 16) / 16)
              + "0123456789ABCDEF".charAt(n % 16);
    }
    
    var hexString = "";
    var numericStrings = rgbString.slice(4, -1).split(', ');
    var curNumericString;
    while (curNumericString = numericStrings.shift())  // rgb(1, 2, 3) --> ["1", "2", "3"]
        hexString += numToHex(parseInt(curNumericString));
    return hexString;
}

// Return the hex color (e.g. "F0EFD7") displayed in the swatch for the given CSS property.
function get_picker_color(cssProperty)
{
    return rgbStringToHex(document.getElementById(cssProperty + '_pre').style.backgroundColor);
}
function get_picker_font()
{
    var str=document.css_edit_form.fontFamily.value;
    str = str.replace(/"/g,"'");
    return str;
}
</script>



  <h1>Theme Configuration Manager</h1>

  <a href=""
  	class="link-parent"
  	tal:attributes="href string: $portal_url/plone_control_panel"
  	i18n:domain="plone" i18n:translate="label_up_to_plone_setup">
  	Up to Plone Setup
  </a>

	<p>CSS Manager lets you change the colors, borders, site logo and other key visual characteristics of your site.</p>
	
	<fieldset tal:define="debugOn context/portal_css/getDebugMode;">
	
		<legend>Enable / disable CSS Debug Mode</legend>
		
		<form tal:attributes="action string:${here/absolute_url}/${template/id}" method="post">
		<input type="hidden" name="form.submitted" value="1" />
	
			<tal:debugOffCurrently tal:condition="not:debugOn">
		
				<p>CSS Debug Mode is currently <span style="font-weight: bold; color: red; text-transform: uppercase;">disabled</span>:
				<span class="discreet"> your site runs at its usual speed, but you can't see the effect of the customizations you make here.</span></p>
		
				<input style="border-color: green;" type="submit" id="form.button.enableDebug" name="form.button.enableDebug" value="Enable CSS Debug Mode" />
			
				<span class="discreet">&#8212; your customizations will take effect right away but your site will be slower.</span>
		
			</tal:debugOffCurrently>
			
			<tal:debugOnCurrently tal:condition="debugOn">
			
				<p>CSS Debug Mode is currently <span style="font-weight: bold; color: green; text-transform: uppercase;">enabled</span>:   
				<span class="discreet">your changes will take effect right away, but your site runs a little more slowly than usual.</span></p>
			
				<input style="border-color: red;" type="submit" id="form.button.disableDebug" name="form.button.disableDebug" value="Disable CSS debug mode" />
				
				<span class="discreet">to make your site run at its usual speed.</span>
				<br />
				<p><strong>Changing the look of a site that's already live?</strong> We recommend you disable CSS Debug Mode as soon as you finish making changes here.</p>
				
			</tal:debugOnCurrently>
	
		</form>
			
	</fieldset>

    <div tal:condition="context/CSSManager_css/showChooser">
        <fieldset>
          <legend>Choose the property sheet you want to change</legend>

        <form name="cselector" tal:attributes="action
        string:${here/absolute_url}/${template/id};" method="POST">
        <input type="hidden" name="form.submitted" value="1" />
        <select size=1 name="chooser" onChange="this.form.submit();">

        <option tal:repeat="obj here/CSSManager_css/getmapping"
                tal:attributes="value python:obj[0]; selected python:test(obj[0]==chooser,'selected',nothing)" 
                tal:content="python:obj[1]" />

        </select>
        </form>
        </fieldset>
    </div>

	<div tal:condition="not: isCustomized">
		<fieldset>
			<legend>Prepare for customization</legend>
			
			<form name="customizeProps" tal:attributes="action string:${here/absolute_url}/${template/id};">
				<input type="hidden" name="form.submitted" value="1" />
				<input type="hidden" name="chooser" tal:attributes="value chooser" />
				<input type="submit" value="Turn on Customization" name="form.button.customize" />
				<div class="discreet">
				    <strong>Technical note for site adminstrators</strong>:
				    clicking this button puts a copy of the current property sheet
				    in the portal_skins/custom folder.
				</div>
			</form>
			
		</fieldset>
	</div>


<fieldset>
  <legend>Things you can customize through this interface</legend>
  
  <p tal:condition="isCustomized" class="discreet">
      <strong>Technical note for site adminstrators</strong>:
      changing things here writes to the property sheet
      in the portal_skins/custom folder.
  </p>

  <dl tal:condition="not: isCustomized">
      <tal:list tal:repeat="prop propertiesHelp">
        <dt tal:content="python:context.CSSManager_css.getAttrib(prop, 'name')">[name]</dt>
        <dd tal:content="python:context.CSSManager_css.getText(prop)" class="discreet">[description]</dd>
      </tal:list>
  </dl>

  <form tal:condition="isCustomized" method="POST" tal:attributes="action string:${here/absolute_url}/${template/id};" name="css_edit_form" enctype="multipart/form-data">
    
    <table>
      <tbody>
        <tr tal:repeat="prop propertiesHelp">
          <tal:block tal:define="name python:context.CSSManager_css.getAttrib(prop, 'name');
                                              id python:context.CSSManager_css.getAttrib(prop, 'id');
                                              text python:context.CSSManager_css.getText(prop);
                                              widget python:context.CSSManager_css.getAttrib(prop, 'widget');
                                              value python: dict(properties.propertyItems())[id];"
                                              >
            <td colspan="2">
              <p><b tal:content="name" >[name]</b><br/><span tal:content="text" class="discreet">[description]</span></p>
            </td>
            <td tal:condition="python: widget == 'cssmanager_widget_nochange'" tal:content="value" />
              <td tal:condition="python: widget != 'cssmanager_widget_nochange'">
              <span metal:use-macro="python: path('context/%s/macros/widget' % widget)">[Get the widget]</span>
            </td>
          </tal:block>
        </tr>
        <tr>
          <td colspan="2">
            <input type="hidden" name="form.submitted" value="1" />
            <input type="hidden" name="chooser" tal:attributes="value chooser" />
            <input type="submit" name="form.button.saveProps" value="Update theme now" />
          </td>
        </tr>
      </tbody>
    </table>
  
  </form>
</fieldset>

<!-- Start pickers here -->
<div metal:use-macro="context/cssmanager_widget_textTransform/macros/global-stuff" />
<div metal:use-macro="context/cssmanager_widget_fontFamily/macros/global-stuff" />
<div metal:use-macro="context/cssmanager_widget_borderStyle/macros/global-stuff" />
 
<script type="text/javascript" src="pickers.js"></script>
<!-- End pickers here -->


</div>
</body>
</html>


