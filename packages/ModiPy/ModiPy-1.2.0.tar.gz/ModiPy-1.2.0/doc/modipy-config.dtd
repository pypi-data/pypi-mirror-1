<?xml version="1.0" encoding="UTF-8" ?>
<!-- $Id$ -->
<!-- Document Type Definition for ModiPy <config/> -->

<!--
    This DTD is not complete, because it doesn't include the
    ZAPI DTD as a child element of <zapicommand/>. This means
    that if you attempt to validate your configuration against
    this DTD using something like xmllint, any custom elements
    of your own (such as extra device settings) and the contents
    of the <zapicommand/> element will fail validation.

    This is annoying, but I haven't figured out a good way of
    making the DTD syntax allow for third party enhancements in
    a neat way.

    So, this DTD is here for reference of the core configuration
    syntax, rather than for computerised verification.

    If you've got any ideas about how I should fix this, let me
    know via email to justin@eigenmagic.com.
-->

<!ELEMENT config (device* | provisioner* |
	  change* | changetemplate* | iterator*)* >

  <!ELEMENT device ANY>
    <!ATTLIST device name ID #REQUIRED>
    <!ELEMENT ipaddress (#PCDATA) >
    <!ELEMENT fqdn (#PCDATA) >

  <!ELEMENT provisioner ANY>
    <!ATTLIST provisioner name ID #REQUIRED
	      module CDATA #REQUIRED
	      type CDATA #REQUIRED>

    <!ELEMENT command_timeout (#PCDATA)>

  <!ELEMENT change (target?, preimpl?, impl?, postimpl?,
	    prebackout?, backout?, postbackout?)>

    <!ATTLIST change name ID #REQUIRED
	      module CDATA #IMPLIED
	      type CDATA #IMPLIED
	      changetemplate IDREF #IMPLIED
	      iterator IDREF #IMPLIED>
    <!ELEMENT target EMPTY>
      <!ATTLIST target name IDREF #REQUIRED>

  <!ELEMENT changetemplate (preimpl?, impl?, postimpl?,
	    prebackout?, backout?, postbackout?) >

  <!ELEMENT preimpl (condition*, command*, zapicommand*)*>
  <!ELEMENT impl (condition*, command*, zapicommand*)*>
  <!ELEMENT postimpl (condition*, command*, zapicommand*)*>
  <!ELEMENT prebackout (condition*, command*, zapicommand*)*>
  <!ELEMENT backout (condition*, command*, zapicommand*)*>
  <!ELEMENT postbackout (condition*, command*, zapicommand*)*>

  <!ELEMENT condition (#PCDATA)>  
  <!ELEMENT command ANY>
  <!ELEMENT zapicommand ANY>

  <!ELEMENT iterator ( dict* )>
    <!ATTLIST iterator name ID #REQUIRED
	               type CDATA #IMPLIED
	               file CDATA #IMPLIED
	               api CDATA #IMPLIED
	               sql CDATA #IMPLIED>

    <!ELEMENT dict (entry*)>

      <!ELEMENT entry (#PCDATA)>
        <!ATTLIST entry name CDATA #REQUIRED>
      
