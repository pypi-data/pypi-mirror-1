NOTE: You want to look at docs/HISTORY
This file is here only for historical reasons

0.9.5 (2008/11/04)

  - Saner default for the LabeledUrlWidget when there
    is no URL given (not linking anywhere now). [raphael]

  - Changed 'toPortalTime' to 'toLocalizedTime' in the datatime
    widget (how did that survive?). [raphael]

  - Renamed the old Extensions/Install to Extensions/plone2Install
    From now on the profile should be used.
    People in need of the old behavior can revert the renaming.
    [raphael]

0.9.4

  - Added the LabeledUrlField/Widget combo.
    This is an example of a record field holding a 'label'
    and a 'url' key where in view mode the 'lable' is used
    as text for the anchor to url. [raphael] 

0.9.3 (2008/05/20)

  - Egg-i-fy [aclark]

after 0.8

 - Made the combo_widget more configurable.
   Thanks to Per Erik Strandberg for the patch. [raphael]

 - Made the demarshalling of records fields more robust.
   Thanks to Lucie Lejard for spotting this and for the patch.
   [raphael]

 - Fixed the CommentWidget to not be inline-editable in Plone 3.0.
   [hannosch]

 - Added two extension profiles: one called 'default' with everything except
   the demo types and another one called 'demotypes' for nothing but the
   demo types.

 - Added the SmartEmailField/Widget from Johannes Wille.
   See the doc string in widget.smartemail.SmartEmailWidget
   for more. Thanks Johannes!

 - reenabled the demo types but now controlled by a flag in the config file

 - made the insane 'email' masking a bit less insane

 - introduced a flag 'add_select' in 'getDisplyList' to control the addition
   of the null entry ('Select'). Defaults to True 

 - bugfix in the new i18n support (missing domain in widget)

from 0.7.2 to 0.8

 - improved i18n support [Mike Gabriel]

 - added 'comment' field (lets you include formattable narrative 
   in edit forms)

 - first draft of a 'remotetext' field (not yet working)
   (the idea is to have a field pull its text from a remote source 
   but also to be able to customize the text if needed)

from 0.7.1 to 0.7.2

 - fixed bug when deleting more than one entry from a list of records
   using the records widget (thanks to Mike Gabriel for spotting the
   bug and to Frank Bennett for the fix)

from 0.7 to 0.7.1

 - fixed references to deprecated calendar_slot [David Siedband]

 - extended Record.getVocabularyFor to accept the use of DisplayLists
   as subfield_vocabulary entries and to raise errors if a valid
   DisplayLists was not returned from an expression. [DWM]

from 0.6 to 0.7

 - add the 'formattable name(s)' data types, fields, and widgets

from 0.5 to 0.6

 - rearranged almost everything to be inline with AT-1.4's
   architecture

 - made it backwards compatible with AT-1.2 again
   (hopefully)

 - added postprocessing to the URL widget to supply http as
   default protocol if no-one is supplied.

from 0.4 to 0.5

 - added ComboWidget and combo_widget.pt to create combo boxes
   where users can select a value or specify one freely
   it they select 'other'.

 - added a 'delete' flag to each record in RecordsWidget's
   edit macro.

 - added an optional 'maxlenth' attribute for subfields

 - added subfield validation; from now on AT 1.3 is required
   (I think)

 - updated the demo type (WorkingGroup) to use subfield validation
   for the 'homepage' subfield in e-contact

from 0.3 to 0.4:

 - added a 'delete all entries' checkbox to the records widget

 - added 'minimalSize' and 'maximalSize' to the RecordsField's 
   properties to enable better control of the number of lines 
   offered in the edit form

 - do not override 'content_edit' anymore; configure the form 
   controller on install instead and add a custom 'more_edit'
   to be called when 'more' is pressed (only slight extension 
   to the original 'content_edit' but I couldn't get around 
   otherwise with the references - thanks to Roch√© Compaan
   for a valuable hint).

 - Record(s)Field should now work with schemata or portal_factory
   without the risc of data loss

 - adapted the demo content type ('WorkingGroup') to reflect the
   above changes and made it demonstrate how to enable the 
   date picker box for a DateTime subfield

 - added support for 'int', 'long' and 'float' as subfield types
   in RecordField and RecordsField.

from 0.2 to 0.3:

 - made compliant with the new security policy for archetypes 1.3:
   Registered the UrlField/Widget and replaced 'getRaw' in the
   Record(s)Widget by an appropriate indirect call to the edit 
   accessor.

from 0.1 to 0.2:

 - added a RecordsField and -Widget (records are a list of record objects)

 - improved the RecordWidget's view macro (empty subfields are not rendered)
