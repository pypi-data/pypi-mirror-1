#!/usr/bin/env python
# -*- coding:utf-8 -*-

## Copyright (c) 2006, Joerg Zinke, Jonas Weismueller (team@petunial.com)
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
##
##  * Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
##  * Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in
##    the documentation and/or other materials provided with the
##    distribution.
##  * Neither the name of the Petunial Team nor the names of its
##    contributors may be used to endorse or promote products derived
##    from this software without specific prior written permission.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
## LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
## FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
## COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
## INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
## BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
## LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
## CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
## LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
## ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
## POSSIBILITY OF SUCH DAMAGE.

"""

test - test/test

latua test script which run test suites to test all parts of latua

"""

__version__ = "$Revision: 302 $"
# $URL: http://www.petunial.de/svn/latua/tags/0.2/test/test $

## standard modules
import os
import sys
import optparse
import unittest

## get path of latua modules
latua_directory = os.path.join(os.path.dirname(__file__), os.pardir)
## modify python system path
sys.path.insert(0, os.path.realpath(latua_directory))

## latua modules
import latua

## latua test suites
import test.test_suite_latua
import test.test_suite_base
import test.test_suite_system
import test.test_suite_index

class Main(unittest.TestSuite):
    """Join and run all testsuites."""
    def __init__(self):
        unittest.TestSuite.__init__(self)
        self.__version = latua.Version()
        self.options = self.__options()
        self.addTest(test.test_suite_latua.LatuaTestSuite())
        self.addTest(test.test_suite_base.BaseTestSuite())
        self.addTest(test.test_suite_system.SystemTestSuite())
        self.addTest(test.test_suite_index.IndexTestSuite())

    def __options(self):
        """Parse comandline options."""
        ## create an command line option parser
        options_parser = optparse.OptionParser(version="test latua v%s\n%s" %
                                               (self.__version.latua_version,
                                                self.__version.copyright))
        ## set default options
        options_parser.set_defaults(verbose=2)
        ## run tests in quiet mode
        options_parser.add_option("-q",
                                  "--quiet",
                                  action="store_const",
                                  const=0,
                                  dest="verbose",
                                  help="show only the final test result")
        (options, arguments) = options_parser.parse_args()
        return options

## this test suite is executeable
## from the commandline prompt
if __name__ == "__main__":
    main = Main()
    testrunner = unittest.TextTestRunner(verbosity=main.options.verbose)
    result = testrunner.run(main)
