Selenium Remote Control 0.9.2 (September 20, 2007)

This release has been a long time coming; sorry about that. We expect to be able to turn around versions a little faster now. The previous release was 0.9.0; there was no 0.9.1.

New in this release:

    * New PHP driver lets you write Selenium RC tests in PHP
    * Fixed our long broken Firefox 2 browser launcher
    * We can now reliably launch/kill IE7 on Vista in Protected mode with UAC enabled
    * New "captureScreenshot" command lets you capture PNG screenshots and save them to disk
    * New "getXpathCount" command tells you how many elements match a given XPath expression
    * New "addLocationStrategy" command lets you define new ways to locate elements on the page
    * Vastly improved stability in proxy injection mode -- it will probably become the default in a future version of Selenium RC.
    * Totally revamped logging

This release also includes a few small changes to the API:

    * "windowMaximize" and "windowFocus" no longer take an argument; just "selectWindow" to the window you want to maximize/focus before you call them.
    * The "getLogMessages" accessor has been removed; it never really worked properly anyway, and we now support much more sophisticated logging.
    * "setContext" no longer takes a logging level; use "setBrowserLogLevel" instead

Selenium Remote Control 0.9.0 (November 14, 2006)

0.9.0 includes a bunch of new cool stuff, including frame support, multiWindow support (for testing apps that don't like to run in a subframe), a Konqueror browser launcher, new cookie-management actions, and support for Firefox 2.0 and IE7. It also includes experimental support for SSL directly in the Selenium proxy, and a new highly experimental "proxy injection" mode that gives us more control over the application under test by modifying it in the HTTP proxy.

Selenium Remote Control 0.8.1 (June 5, 2006)

Don't be fooled by the version number; 0.8.1 is the next major release of Selenium Remote Control.

0.8.1 is identical to 0.8.0 but with a fix for the broken -port and -timeout command flag handling.

Selenium Remote Control 0.8.0 (June 2, 2006)

0.8.0 includes numerous significant bug fixes and enhancements. New features include a Perl RC Client Driver, a translator from Selenium Core Selenese HTML test tables into Java JUnit tests and Opera 8.54 support.

We've also added experimental support for new browser launchers, "*chrome" and "*iehta" which, we hope, will one day eliminate the need for the Selenium Server proxy altogether, by running the Selenium JavaScript with elevated security privileges. They're "experimental" because we're not 100% sure that they work, but many users have been enjoying them in the nightly snapshots for a while now, so you might want to give them a try.

Additionally, the API for Selenium RC 0.8.0 has changed slightly; Selenium 0.8.0 is not 100% backwards compatible with tests written in Selenium 0.7.x. The changes should be minor; the most notable change is that the API no longer includes assertion commands. Instead of running assertTextPresent, now you'll run an "isTextPresent" command which will return true/false, allowing you to run your own assertion code in the language/test framework with which you're most comfortable.

We do not anticipate having to break backwards compatibility again in the future; we waited a while for 0.8.0 to make sure we'd explored any additional changes we needed to make.
Selenium Remote Control 0.7.1 (April 6, 2006)
0.7.1 is bug fix release to improve Firefox support on non-Windows browsers and improve Internet Explorer support on various versions of Windows. The support matrix has also been updated to be a bit more realistic; it was copied straight from Selenium Core, but we are now more explicit about what is and isn't supported.
Selenium Remote Control 0.7.0 (March 31, 2006)

Selenium Remote Control 0.7.0 was the first official release of SRC as a separate project. Previously, SRC was just a separate mode of the "Selenium" project; at that time it was called "Driven" mode. SRC 0.7.0 has added the notion of a Selenium Server to act as both a client-configured proxy for the browser (to resolve same-origin issues) and to stand between Client Drivers and the browser, to substantially simplify the process of writing Client Drivers in many languages. 

