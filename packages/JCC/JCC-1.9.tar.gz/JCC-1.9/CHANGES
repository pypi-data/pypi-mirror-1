
For bug <NUM>, see http://bugzilla.osafoundation.org/show_bug.cgi?id=<NUM>

Version 1.8 -> 1.9
------------------
 - fixed code generation for clone() broken by finalization proxy work
 - added 'union' to the list of reserved words
 - fixed castCheck() to work with finalization proxies
 - --compile no longer installs by default
 - fixed bug in __init__.cpp #include statements for package-less classes
 - fixed line ending bug on Windows
 - fixed multiple JCC-built extensions in same process problem
 - removed env argument from initVM() as it's redundant with the libjcc.dylib
 - reimplemented env->setClassPath() in terms of system URLClassLoader hack
 - added support for --include option
 - added 'NULL' to list of reserved words
 - added support for building shared libjcc library on Mac OS X and Linux
 - fixed bug with generating wrappers for abstract Enumeration implementations
 - added support for --install-dir and --use-distutils options
 - copy jcc runtime sources into extension source tree before compiling
 - added detection of invalid command line args
 - fixed double-free bug when passing in vmargs
 - added defines to enable building with MinGW (Bill Janssen)
 - added support for --bdist
 - added support for --compiler
 - fixed crasher on Windows with virtual JObject.weaken$()
 - fixed bug not checking return value from initVM()
 - fixed bug with findClass() not catching C++ exception when class not found
 - added missing code in parseArgs() to handle double[], float[] and long[]

Version 1.7 -> 1.8
------------------

 - fixed bug using the wrong field modifiers for setter (Bill Janssen)
 - added missing calls for generating wrappers for ancestors of Exception
 - added missing call for generating wrappers for String
 - added note about --classpath to README

Version 1.6 -> 1.7
------------------
 - fixed memory leak when calling inherited methods via callSuper()
 - added support for building on Solaris with Sun Studio C++ (Solaris 11)
 - fixed leak of local refs of jstring when converting to an array of String
 - automated finalization of extensions via proxy for breaking ref cycle
 - added Py_CLEAR and Py_VISIT macros for Python 2.3.5 compilation

Earlier versions (changes included in PyLucene versions < 2.3)
--------------------------------------------------------------
 - see http://svn.osafoundation.org/pylucene/trunk/jcc/CHANGES
