#!/usr/bin/env python
# Copyright (c) 2009 Eric Evans <eevans@sym-link.com>

from common import JiraClient, formatted_attachment_list, parse_patch_ids
import getpass, subprocess as sp

def apply_patches(attachments, ids, level=0):
    for index in ids:
        f = attachments[int(index)-1].get_attached_file()
        cmd = ['patch', '-p%d' % level]
        p = sp.Popen(cmd, stdin=sp.PIPE, stdout=sp.PIPE)
        p.stdin.write(f.read())
        (stdout, _) = p.communicate()
        if p.returncode != 0:
            raise sp.CalledProcessError(p.returncode, cmd)
    return [line for line in stdout.split("\n")]

def main(issue, username, passwd, level=0):
    client = JiraClient(username, passwd)
    attachments = client.get_attachments(issue)
    
    formatted_attachment_list(attachments)
    print "Attachment ID(s) to apply? ",
    response = raw_input()
    output = apply_patches(attachments, parse_patch_ids(response), level)
    print '\n'.join(output)

if __name__ == '__main__':
    from sys import argv, stderr, exit
    from optparse import OptionParser

    parser = OptionParser(usage="Usage: %prog [options] <jira_issue>")
    parser.add_option("-u", "--username", default=None,
            help="Jira username (if different from login name).")
    parser.add_option("-p", "--strip", type="int", default=0,
            help="Specifies the strip level, see patch(1). Note: This " \
            "argument has no effect when supplied in conjunction with -m")

    (options, arguments) = parser.parse_args()

    if len(arguments) != 1:
        parser.print_help()
        exit(1)

    username = options.username

    if not username:
        username = getpass.getuser('JIRA Username: ')
    passwd = getpass.getpass('JIRA Password: ')

    main(arguments[0], username, passwd, options.strip)

# vi:ai sw=4 ts=4 tw=0 et
