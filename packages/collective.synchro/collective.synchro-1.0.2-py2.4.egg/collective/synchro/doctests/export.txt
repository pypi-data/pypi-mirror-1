-----------------------------
export content in file system
-----------------------------

    >>> self.portal
    <PloneSite ...
    >>> self.loginAsPortalOwner()
    >>> from Testing import makerequest
    >>> self.portal = makerequest.makerequest(self.portal)

Install collective.synchro in portal::

    >>> context = self.portal
    >>> self.install_portal_synchronisation()
    True

create an simple document to be exported::

    >>> self.portal.invokeFactory('Document','tobexported', title='To be Exported')
    'tobexported'
    >>> from transaction import commit
    >>> commit()


Verify plugins available::

    >>> self.portal.portal_synchronisation.getPlugins()
    [<class collective.synchro.plugins.zexp.ZexpExporter...

And now we create an synchroData::

    >>> from collective.synchro.data import SynchroData
    >>> data = SynchroData(self.portal.tobexported)
    >>> data.datas
    [<collective.synchro.data.ZexpPluginData...
    >>> data.getImportPath()
    ''
    >>> self.portal.portal_synchronisation.exportContent(data)

Reimport data in zodb::

    >>> data(self.portal)

Test an delete content::

    >>> from collective.synchro.events import SynchroDeletedEvent
    >>> data = SynchroData(self.portal.tobexported, SynchroDeletedEvent(self.portal.tobexported))
    >>> data.datas
    [<collective.synchro.data.DeletePluginData...
    >>> data(self.portal)
    >>> 'tobexported' in self.portal.objectIds()
    False


Delete all things created in the doctests::

    >>> self.uninstall_portal_synchronisation()
    True


