Metadata-Version: 1.0
Name: collective.synchro
Version: 1.0.1
Summary: synchronize content between plone instance
Home-page: https://svn.plone.org/svn/collective/collective.synchro
Author: Ingeniweb
Author-email: support@ingeniweb.com
License: GPL
Description: A tool for synchronize content beetwen plone instance
        =====================================================
        
        How to install ?
        ----------------
        
        o In plone3 go to portal_quickinstaller and install collective.synchro
        
        o In plone2.5 go to portal_setup , in properties select collective synchro as
        active configuration and in import click to **Import all steps**
        
        How it work ?
        -------------
        
        This tool import content via plugin. By default there is three plugins : fss, zexp and delete
        You can add and write new plugin (see PLUGIN.txt) for your use case
        
        It store exported data in file system in order to be reimported in an
        another instance (or multiple instance). An external program must copy data to an import queue.
        This egg provide a scripts for ssh transport.
        Add in your buildout (example of buildout are available in collective/synchro/buildout directory) this part to configure scripts::
        
        [synchro]
        recipe = zc.recipe.egg
        eggs =
        collective.synchro
        
        extra-paths=
        ${instance:location}
        ${zope2:location}/lib/python
        
        This create in your bin of buildout three scripts :
        
        o bin/create_queue  -d PATH, --directory=PATH , create a queue structure
        
        o bin/synchronize_queue  -s SOURCE -d DEST , synchronize queue by ssh (via ssh key) (-h for other options)
        
        o bin/import_queue -p PATH , import data from queue (-h for other options)
        
        Important, the import_queue **must be** run with an zeoclient instance::
        
        >>> bin/instance run bin/import_queue ...
        
        
        The synchronization is fire by the zope3 event system. There is a generic method
        call by all events : collective.synchro.events.synchro.
        
        Plugin are choice by event (plugin list for ObjectModified and  ObjectRemovedEvent are different).
        This registry is managed by the synchronization_tool
        
        The localisation of import is done by queyring a multiadapter that decide where the content
        is reimported. You can change by zca, the localisation of your import content.
        
        The structure of a queue looks like as this::
        
        ./IMPORT
        ./IMPORT/TO_PROCESS -> all files in order to process
        ./IMPORT/DONE -> file that are synchronized with an EXPORT queue
        ./IMPORT/ERROR -> data in error
        ./IMPORT/PROCESSING -> files are synchronizing with an EXPORT queue
        ./EXPORT
        ./EXPORT/TO_PROCESS -> files that are scheduled to export
        ./EXPORT/DONE -> files that are imported in the instance
        ./EXPORT/ERROR -> files in error
        ./EXPORT/PROCESSING -> files are importing from queue
        
        
        How to configure the export ?
        -----------------------------
        
        Go to zmi, in portal_synchronisation configure::
        
        o queues : filesystem path (create if don't exits, one queue for one instance)
        
        o expressions : a tal expression that must be true to synchronized content
        
        
        Compatibility
        -------------
        
        This package is tested in plone2.5 and plone3.1
        
        TODO
        ----
        
        o interface to register/unregister plugins in zmi
        
        o callback for imported content
        
        
        
        
        
        Changelog
        =========
        
        1.0.1 - Initial
        ---------------
        
        * Add script to synchronized and import content
        * Fix bug in delete plugin (see export.txt)
        
        1.0.0 - Unreleased
        ------------------
        
        * Initial release
        
        
        
Keywords: synchronisation export import plone
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
