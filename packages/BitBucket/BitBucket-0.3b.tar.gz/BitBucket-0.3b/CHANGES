Changes from Version 0.1b to 0.2a
------------------------------------------------------------------------

Added INSTALL doc.  Changed buffer size in bitbucket.py.

Included the updated S3 example files from Amazon.

BitBucket object no longer tries to list all objects when it is created.  If you want to actually create Bits objects to represent all S3 objects in a bucket you can still do so using the new fetch_all_keys method.  Be careful, though.  This will be expensive for buckets with large numbers of objects.

When getting all keys for a bucket (e.g. a GET on a bucket) the code now correctly handles the paging of results for large numbers of objects.

Added a new, efficient generator function to allow you to iterate over the objects in a bucket without incurring the cost of keeping all of the objects in the cache.  Basically, if bucket is a BitBucket object just do "for bits in bucket:" and a generator object will be automatically created behind the scenes.  A new attribute has been added to the BitBucket object (page_size) which controls the number of objects requested from S3 with each request.  This attribute can also be specified in the bitbucket.cfg file (see bitbucket_example.cfg).

Doing a has_key on the BitBucket object will first check if the key is in the cache and then checks in S3.

Added get_url and delete_url methods to the Bits object.  These methods return urls with query string authentication that allow a particular Bits object to be retrieved or deleted.  Both take an optional expires_in parameter that can be used to time limit the URL.

Added a new entry, BucketNamePrefix, to the config file.  The value of this string will prepended to any bucket names passed to the BitBucket constructor.  This allows you to carve out your own bucket namespace but still deal with short bucket names in your code.  This was actually happening implicitely in the previous versions of BitBucket where it used your Amazon access key as a bucket name prefix.  This change makes that process explicit and controllable by users of the BitBucket system.

