mainloop provides the canonical game loop as a distinct object which can be
used by game like applications.

>>> import time
>>> from mainloop import Loop
>>> loop = Loop(time.time, time.sleep, tick_callback, render_callback, event_callback)
>>> loop.start()

The tick_callback argument is a function which is called at regular intervals in 
order to update your simulation. It passes the amount of milliseconds passed
since the last call.

The render_callback argument is a function which, when called should draw your 
simulation. It passes one argument, which is the percentage of time between
game ticks.

The event_callback argument is a function which when called should handle all gui 
events from the event queue.


Copyright (c) 2007 Simon Wittber

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

