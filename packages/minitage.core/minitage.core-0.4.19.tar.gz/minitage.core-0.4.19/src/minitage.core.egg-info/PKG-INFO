Metadata-Version: 1.0
Name: minitage.core
Version: 0.4.19
Summary: A meta package-manager to install projects on UNIX Systemes.
Home-page: http://cheeseshop.python.org/pypi/minitage.core
Author: Mathieu Pasquet
Author-email: kiorky@cryptelium.net
License: GPL
Description: minitage
        
        Installation instructions
        ***************************
        
        Python
        =======
        You need a python with setuptools, zlib, bz2 and ssl support.
        
        Try that in your interpretery::
        
        >>> import tarfile
        >>> import zipfile
        >>> import bz2
        >>> import _ssl
        >>> import zlib
        >>> import setuptools
        >>>
        
        If you do not have that, you can give a try to my pyboostrapper that bootstrap
        a python somewhere::
        
        wget http://hg.minitage.org/hg/minitage/shell/raw-file/tip/PyBootstrapper.sh
        chmod +x PyBootstrapper.sh
        ./PyBootstrapper.sh /path/to/pythonPrefix
        
        
        Using virtualenv
        =================
        You 'd better to use `virtualenv <http://pypi.python.org/pypi/virtualenv/1.1>`_ ,
        minitage fits well with it.
        
        virtualenv is a tool that allow you to create isolated Python
        environments.
        
        
        Here is how to set up an environment with it:
        
        - Install virtualenv::
        
        easy_install virtualenv #(maybe use sudo ;))
        
        - Install minitage prefix::
        
        virtualenv --no-site-packages  ~/minitage
        
        - activate it::
        
        source ~/minitage/bin/activate
        
        
        KEEP IN MIND THAT YOU MUST ACTIVATE VIRTUALENV AT ANY TIME YOU USE IT.
        
        
        Installing minitage
        ====================
        
        A stable version
        -----------------
        
        Minitage is a classical python egg, you can get it throught easy_install.
        
        To install minitage in a stable version, follow those steps:
        
        - Install minitage::
        
        easy_install -U mercurial minitage.core
        
        - Sync its packages (all its minilays in minitage terminology).::
        
        minimerge -s
        
        
        A develop version:
        ------------------
        If you want to be bleeding edge and not lhave a 3 years old debianised
        minitage, you can give a try to the egg in developement mode?
        
        If you need to, fire your virtualenv::
        
        source ~/minitage/bin/activate
        
        Get the sources::
        
        mkdir -p ~/repos/minitage
        cd ~/repos/minitage
        hg clone http://hg.minitage.org/hg/minitage/eggs/minitage.core
        hg clone http://hg.minitage.org/hg/minitage/eggs/minitage.recipe
        
        Or update them::
        
        hg pull -u -R ~/repos/minitage/minitage.core
        hg pull -u -R ~/repos/minitage/minitage.recipe
        
        
        Install/Reinstall minitage in develop mode::
        
        cd ~/repos/minitage/minitage.core
        python setup.py develop
        cd ~/repos/minitage/minitage.recipe
        python setup.py develop
        
        
        
        Syncing packages
        =================
        
        To sync all your minilays
        
        If you need to, fire your virtualenv::
        
        source ~/minitage/bin/activate
        
        Sync::
        
        minimerge -s
        
        
        Changes
        ***********************************************
        0.4.8
        ===========
        - Maintenance release
        
        - testruner
        - buildoutified
        - some refactor and code cleanings
        - logging is now better handled and your minimerge sessions will be as
        quiet as possible.
        
        0.4.5
        ===========
        - Bug in fetchers (not critical ...)
        
        0.4.4
        ============
        - Add an option (-f)
        - when set : fetch all before build
        - when not set : fetch and build each package one after another
        
        0.4.2
        ============
        - Remove the category check
        
        0.4.2
        ============
        - Remove the backtrace from the launcher when minimerge fails
        
        0.4.1
        ============
        - Release version
        
        0.4_alpha12
        ============
        - Fix scm type validator
        
        0.4_alpha11
        ============
        - bzr DVCS integration
        
        0.4_alpha10
        ============
        - Add support for variables in minibuilds setted in minitage configuration
        file. Use $name in minibuilds and set it in the [minitage.variables]
        section.
        
        0.4_alpha9
        ===========
        - reinforce buildout code
        
        0.4_alpha8
        ===========
        - restore previous version scheme
        
        a0.4_alpha5
        ============
        - add mercurial explicit dependency
        
        0.4_alpha4
        ============
        - remove old minilay
        
        0.4_alpha1
        ============
        
        This is a pre release, minitage is working. But it is not empty from bugs.
        Feel free to give your feedback :)
        
        - Minimerge totally rewritten in python
        - Support for conditionnal dependencies toward python version
        - Support for eggs in addition of site-packages added to the PYTHONPATH
        - Support for conditionnal (OS) dependencies
        - Lot of improvments on error handling
        - Logging mode
        - Configuration via a file is now possible
        
        
        up to 0.3
        ==========
        
        - not public, nothing to see there.
        
        
        
        
        
Platform: UNKNOWN
Classifier: Framework :: Buildout
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
