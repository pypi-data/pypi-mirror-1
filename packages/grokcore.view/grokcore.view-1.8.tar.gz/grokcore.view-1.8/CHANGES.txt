Changes
=======

1.8 (2009-07-04)
----------------

- Add validator to templatedir directive to disallow path separator.

- Splitted CodeView out of View.  View only uses templates, CodeView only uses
  a render() method.  So views that have a render method must subclass from
  CodeView instead of View (that should be the only change needed).

- Add grok.View permissions to functional tests (requires grokcore.security 1.1)


1.7 (2009-05-19)
----------------

- Revert dependency from zope.container back to zope.app.container.


1.6 (2009-04-28)
----------------

- Simplify the DirectoryResource and DirectoryResourceFactory
  implementations by making better use of the hook points provided by
  zope.app.publisher.browser.directoryresource.

1.5 (2009-04-10)
----------------

- Don't register a 'static' resource directory if the 'static' directory does
  not exist.

- Make it possible to instantiate an ungrokked view by being slightly more
  defensive in __init__. This makes it easier to write unit tests.

1.4 (2009-04-08)
----------------

* Page template reloading now also works for macros. Fixes
  https://bugs.launchpad.net/grok/+bug/162261.

* Use zope.container instead of zope.app.container.

* Ignore '<tpl>.cache' files when looking up template files in a
  template dir. Fix bug https://bugs.launchpad.net/grok/+bug/332747

1.3 (2009-01-28)
----------------

* Adapt tests to work also from eggs not only source checkouts by
  avoiding `src` in directory comparisons.

* Fix the factory for subdirectories of the DirectoryResource implementation
  by using hooks in zope.app.publisher.browser.directoryresource.

* Update APIs interfaces to include the new ``path`` directive and
  new ``DirectoryResource`` component.

1.2 (2008-10-16)
----------------

* Expose the ``DirectoryResource`` class as a component for registering
  directories as resources. This is accompanied by the ``path`` directive that
  is used to point to the directory holding resources by way of an relative (to
  the module) or absolute path. ``DirectoryResource`` components can be
  differentiated by name and layer.

1.1 (2008-09-22)
----------------

* ``meta.py`` module containing the grokkers has been split in a
  package with separate modules for the view, template, skin and
  static resources grokkers. This allows applications to use only
  grokkers they need (and maybe redefine others).

1.0 (2006-08-07)
----------------

* Created ``grokcore.view`` in July 2008 by factoring security-related
  components, grokkers and directives out of Grok.
