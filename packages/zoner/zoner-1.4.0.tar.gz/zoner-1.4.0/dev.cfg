[global]
# This is where all of your settings go for your development environment
# Settings that are the same for both development and production
# (such as template engine, encodings, etc.) all go in 
# zoner/config/app.cfg

# ** Zoner Application Config **

# zoner.zonedir : path to a directory containing all the zone files.
#   zoner will read/write these files as changes are made.
#zoner.zonedir = '/Users/chris/tmp/dnszones'
zoner.zonedir = '/var/named/zones'

# zoner.rndc : path to the 'rndc' binary, which zoner uses to signal
#   named to refresh a zone.  Leave as 'rndc' if it can be found in the
#   normal PATH.
#   Comment this option out if you want to disable refreshing of
#   zones by zoner.  Zones would need to be refreshed manually
#   or by some other means in this case.
zoner.rndc = 'rndc'

# zoner.checkzone : path to the 'named-checkzone' binary, which zoner uses to
#   verify that zone files are formatted correctly.  Leave as 'named-checkzone'
#   if it can be found in the normal PATH.
#   Comment this option out if you want to disable zone file verifications.
zoner.checkzone = 'named-checkzone'

# zoner.archive_dir : directory to save old copies of zone files. These backup
#   files are accessible from the "change history" functionality of Zoner.
#   Comment this option out to disable saving backup copies.
zoner.archive_dir = '/var/tmp/zoner_archive'


# DATABASE

# driver://username:password@host:port/database

# pick the form for your database
# sqlalchemy.dburi="postgres://username@hostname/databasename"
# sqlalchemy.dburi="mysql://username:password@hostname:port/databasename"
# sqlalchemy.dburi="sqlite://%(current_dir_uri)s/devdata.sqlite"

# If you have sqlite, here's a simple default to get you started
# in development
sqlalchemy.dburi="sqlite:///devdata.sqlite"

# set to 1 to make SQLAlchemy echo SQL commands on the console
sqlalchemy.echo = 0

# SERVER

# Some server parameters that you may want to tweak
server.socket_port=9054

# Enable the debug output at the end on pages.
# log_debug_info_filter.on = False

server.environment="development"
autoreload.package="zoner"

# session_filter.on = True

# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
tg.strict_parameters = True

# LOGGING
# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in zoner/config/log.cfg
[logging]

[[loggers]]
[[[zoner]]]
level='DEBUG'
qualname='zoner'
handlers=['debug_out']

[[[allinfo]]]
level='INFO'
handlers=['debug_out']

[[[access]]]
level='INFO'
qualname='turbogears.access'
handlers=['access_out']
propagate=0
