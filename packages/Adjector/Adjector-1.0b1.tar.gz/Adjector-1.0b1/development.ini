#-------------------------------------------------------------------------
# Copyright 2009-2010 David Isaacson, Stou Sandalski, Information Capsid
# Pylons template Copyright (c) 2005-2009 Ben Bangert, James Gardner, Philip Jenvey and contributors.
#
# This file is part of the program Adjector.
#
# Adjector is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) version 3 of the License.
#
# Adjector is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Adjector. If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------------

#
# adjector - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#

[DEFAULT]
# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 5000

[app:main]
use = egg:adjector
full_stack = true
static_files = true
#table_prefix = adj_

# SQLAlchemy database URL
#sqlalchemy.url = sqlite:///%(here)s/development.db
sqlalchemy.url = postgres://siafoo@localhost/adjector_db

# Base URL.  Specify this if you want adjector to serve its admin interface, tracking, or rendering interface on a different url besides "/".
# Or, specify individually below.
#base_url = /ads

# More specific Base URLs.  Use only if you want to specify an alternate base for one of these 3 categories.  Each default to base_url (above).
# MAKE SURE to block anonymous users from accessing the admin stuff on a production site.  
#admin_base_url = /admin
#admin_base_url = /ads/admin
#render_base_url = /ads/render
#tracking_base_url = /ads/track

# Note that the cj_site_id is no longer required to be in cj.ini; it can also be in given per-location.  
# If in cj.ini, that site id will be assumed if no ancestor location of the current zone has a cj_site_id.
#cj_data = %(here)s/cj.ini

timezone = US/Pacific
# Should adjector track creative views?
enable_adjector_view_tracking = true 
# Should adjector track creative clicks (requires modifying of the html, this can be turned off per-creative if it is messing things up)
enable_adjector_click_tracking = true
# Should adjector allow third parties to track views and clicks? (CJ and Adsense supported)
enable_third_party_tracking = false
# Should adjector automatically change the site id on CJ creatives? (If not, your CJ creatives will each be restricted to a single site)
enable_cj_site_replacements = true
# Should adjector require the user to have javascript, or show ads to everybody? (including bots and scrapers -- this could mess up statistics)
require_javascript = true

cache_dir = %(here)s/data
beaker.session.key = adjector
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# Logging configuration
[loggers]
keys = root, routes, adjector, sqlalchemy

[handlers]
keys = console, chainsaw

[formatters]
keys = generic, xmllayout

[logger_root]
level = NOTSET
handlers = console, chainsaw

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_adjector]
level = NOTSET
handlers =
qualname = adjector

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_chainsaw]
class = xmllayout.RawSocketHandler
args = ('localhost', 4448)
level = NOTSET
formatter = xmllayout

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = WARNING
formatter = generic

[formatter_xmllayout]
class = xmllayout.XMLLayout

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
