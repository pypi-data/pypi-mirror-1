Metadata-Version: 1.0
Name: fez.djangoskel
Version: 0.2.0
Summary: Paster templates for creating Django applications as eggs
Home-page: http://www.fezconsulting.com
Author: Dan Fairs
Author-email: dan@fezconsulting.com
License: BSD
Description: Introduction
        ============
        
        fez.djangoskel provides paster templates for creating Django
        projects and applications as eggs. Four templates are currently
        provided.
        
        
        Usage
        =====
        
        Install fez.djangoskel using easy_install. This should also install
        paster as a dependency. You should then be able to see two new
        templates available:
        
        $ paster create --list-templates
        Available templates:
        basic_package:             A basic setuptools-enabled package
        django_app:                Template for a basic Django reusable application
        django_namespace_app:      Template for a namespaced Django reusable application
        django_namespace_project:  Template for a namespaced Django project
        django_project:            Template for a Django project
        paste_deploy:              A web application deployed through paste.deploy
        
        Create a Django project using the django_project template:
        
        paster create -t django_project
        
        Answer the questions that paster asks, and it will create a full
        Django project with a template settings file and urls.py.
        
        Applications are created in a similar way:
        
        paster create -t django_app
        
        Projects created with these templates do not have namespace packages: that is,
        you will find a directory created with the name of the package you specified
        which contains all the usual egg stuff, and the module will be under that
        directory.
        
        If you wish to create a namespaced package (similar, for example, to this
        package: fez.djangoskel) then you should use the django_namespace_app and
        django_namespace_project templates. Both work in the same way.
        
        When creating eggs based on django_namespace_app or django_namespace_project,
        paster will ask you for three pieces of information:
        
        - Project name
        - This should be the full dotted name of the package eg. foo.bar
        - Namespace package
        - This is the top-level namespace package, eg. foo
        - Package name
        - This is the name of the lower-level module, eg. bar
        
        This will give you a directory layout like this:
        
        ./foo.bar
        /foo
        /bar
        
        Your code will most likely be going under bar; this is where models.py, urls.py
        etc. will be created.
        
        
        Difference from Django's own templates
        ======================================
        
        Django provides its own 'template' app and project generation.
        Why use these templates?
        
        - The primary motivation is that the projects and apps generated
        by these templates are eggs. This means that they can be uploaded
        to PyPI, and other developers will be able to easy_install them.
        
        - These templates all provide skeleton documentation in the form
        of HISTORY.txt and README.txt files.
        
        - The application template also provides a lot more plumbing to get
        you started writing tests: a tests module, test settings (which can
        be invoked using python manage.py test --settings=project.settings)
        and test URLConfs and settings that the test client can use.
        
        
        Changelog
        =========
        
        0.2.0
        -----
        
        * Added templates for namespaced projects and applications
        
        0.1.2
        -----
        
        * Fixed egg build problem which omitted templates
        
        0.1.1
        -----
        
        * Corrected setup.cfg release tagging
        
        0.1
        ---
        
        * Initial work on django_app and django_project templates
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Plugins
Classifier: Framework :: Paste
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Framework :: Django
