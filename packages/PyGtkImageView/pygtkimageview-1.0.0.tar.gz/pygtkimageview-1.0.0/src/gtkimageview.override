%%
headers
#include <Python.h>
#include <gtkimageview/gtkanimview.h>
#include <gtkimageview/gtkimageview.h>
#include <gtkimageview/gtkimagescrollwin.h>
#include <gtkimageview/gtkimagetooldragger.h>
#include <gtkimageview/gtkimagetoolpainter.h>
#include <gtkimageview/gtkimagetoolselector.h>
#include <gtkimageview/gtkzooms.h>
#include "pygobject.h"
#include "enums-public.h"

/* This is apparently something you need to copy into every .override
   file because of the code codegen.py generates. Craptastic. */
gboolean
static pygdk_rectangle_from_pyobject (PyObject     *object,
                                      GdkRectangle *rectangle)
{
    g_return_val_if_fail (rectangle, FALSE);

    if (pyg_boxed_check (object, GDK_TYPE_RECTANGLE))
    {
	*rectangle = *pyg_boxed_get (object, GdkRectangle);
	return TRUE;
    }
    if (PyArg_ParseTuple (object, "iiii",
                          &rectangle->x, &rectangle->y,
                          &rectangle->width, &rectangle->height))
	return TRUE;
    
    PyErr_Clear ();
    PyErr_SetString (PyExc_TypeError, "could not convert to GdkRectangle");
    return FALSE;
}

%%
module gtkimageview
%%
import gobject.GObject as PyGObject_Type
import gtk.Widget as PyGtkWidget_Type
import gtk.Window as PyGtkWindow_Type
import gtk.Table as PyGtkTable_Type
import gtk.gdk.Pixbuf as PyGdkPixbuf_Type
import gtk.gdk.PixbufAnimation as PyGdkPixbufAnimation_Type
%%
ignore-glob
  *_get_type
%%
override gtk_image_view_get_check_colors noargs
static PyObject*
_wrap_gtk_image_view_get_check_colors (PyGObject *self)
{
    int col1, col2;
    gtk_image_view_get_check_colors (GTK_IMAGE_VIEW (self->obj), &col1, &col2);
    return Py_BuildValue ("(ii)", col1, col2);
}
%%
override gtk_image_view_get_viewport noargs
static PyObject*
_wrap_gtk_image_view_get_viewport (PyGObject *self)
{
    GdkRectangle rect;
    if (!gtk_image_view_get_viewport (GTK_IMAGE_VIEW (self->obj), &rect))
        return Py_None;
    return pyg_boxed_new (GDK_TYPE_RECTANGLE, &rect, TRUE, TRUE);
}
%%
override gtk_image_view_get_draw_rect noargs
static PyObject*
_wrap_gtk_image_view_get_draw_rect (PyGObject *self)
{
    GdkRectangle rect;
    if (!gtk_image_view_get_draw_rect (GTK_IMAGE_VIEW (self->obj), &rect))
        return Py_None;
    return pyg_boxed_new (GDK_TYPE_RECTANGLE, &rect, TRUE, TRUE);
}

