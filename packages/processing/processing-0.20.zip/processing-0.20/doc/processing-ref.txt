.. include:: header.txt

==============================
 Processing package reference 
==============================

The `processing` package mostly replicates the API of the
`threading` module.  

The package exports one class:

    **class** `Process(group=None, target=None, name=None, args=(), kwargs={})`
        An analogue of `threading.Thread`.

        See `Process objects`_.


The package also exports the following functions:

    `currentProcess()`
        Return the object corresponding to the current process.

    `Manager()`
        Return a `SyncManager` object which can be used to create
        objects which can be shared between processes.  The returned
        manager object has instance methods which create shared
        objects and return corresponding proxies.

        See `Manager objects`_ and `Proxy objects`_.

.. note::
   * The `processing.dummy` package replicates the API of `processing`
     but is no more than a wrapper around the `threading` module.

   * `processing` contains no analogues of `activeCount`,
     `enumerate`, `settrace`, `setprofile`, `Timer`, or
     `local` from the `threading` module.


Subsections
-----------

* `Process objects <process-objects.html>`_
* `Manager objects <manager-objects.html>`_
* `Proxy objects <proxy-objects.html>`_
* `connection sub-package <connection-ref.html>`_


.. _Prev: intro.html
.. _Up: index.html
.. _Next: process-objects.html

