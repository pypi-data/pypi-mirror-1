Arista Transcoder 0.9.3
=======================
A simple preset-based transcoder for the GNOME Desktop and a small script for 
terminal-based transcoding. Settings are chosen based on output device and 
quality preset.

    http://programmer-art.org/arista-transcoder

Dependencies
------------
python-dbus
python-cairo
python-gobject
python-gtk >=2.16
python-gconf
python-gstreamer
gstreamer-ffmpeg
gstreamer-plugins-base
gstreamer-plugins-good
gstreamer-plugins-bad
gstreamer-plugins-ugly

Installation
------------
Installation uses python distutils. After extracting the archive, run:

    python setup.py install

If you are using Ubuntu 9.04 (Jaunty) or later, make sure to install with:

    python setup.py install --install-layout=deb

Don't forget to use sudo if necessary. This will install the arista python 
module to your python site-packages or dist-packages path, install the arista 
programs into sys.prefix/bin and install all data files into 
sys.prefix/share/arista.

Usage
-----
There are two clients available, a graphical client using GTK+ and a terminal 
client. The graphical client is failry self-explanatory and can be launched 
with:

    arista-gtk

To use the terminal client please see:

    arista-transcode --help

An example of using the terminal client:

    arista-transcode --device=ipod --preset=low test.mp4 test-ipod.m4v

Other usefule terminal options:

    arista-transcode --info
    arista-transcode --info ipod

Generating a Test File
----------------------
Sometimes it may be useful to generate a test file:

    gst-launch-0.10 videotestsrc num-buffers=500 ! x264enc ! mp4mux ! filesink location=test.mp4

Creating New Device Presets
---------------------------
New device presets can be created by specifying information about yourself and 
the device you wish to support along with presets that describe how to create a
proper gstreamer pipeline to encode for the device in an xml file. Please see 
the xml files in the presets directory that ship with Arista for examples.

Contributing
------------
All development is managed through Launchpad.net, which provides source 
revision control, bug tracking, feature planning, string translation, and a 
forum-like question/answer area. Please report all bugs to the bug tracker 
there. Add new feature requests as blueprints. The main development site is:

    http://www.launchpad.net/arista

You may create a local branch of the latest code via:

    bzr branch lp:arista
    
To update your local branch to the latest code you can use `bzr merge`. If you 
choose to publish your branch you may request a merge to trunk, otherwise
you may just send patches that apply cleanly to the latest trunk.

