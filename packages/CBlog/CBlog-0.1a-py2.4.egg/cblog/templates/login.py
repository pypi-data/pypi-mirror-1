#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from cblog.templates.SiteTemplate import SiteTemplate

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc7'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 7)
__CHEETAH_genTime__ = 1165755331.8865831
__CHEETAH_genTimestamp__ = 'Sun Dec 10 13:55:31 2006'
__CHEETAH_src__ = 'cblog/templates/login.tmpl'
__CHEETAH_srcLastModified__ = 'Sun Dec 10 13:54:51 2006'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class login(SiteTemplate):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        SiteTemplate.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def pagetitle(self, **KWS):



        ## CHEETAH: generated from #def pagetitle at line 7, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('    <title>')
        _v = VFFSL(SL,"tg.blogtitle",False) # '${tg.blogtitle}' on line 8, col 12
        if _v is not None: write(_filter(_v, rawExpr='${tg.blogtitle}')) # from line 8, col 12.
        write(': Login</title>\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def extra_stylesheets(self, **KWS):



        ## CHEETAH: generated from #def extra_stylesheets at line 11, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('    ')
        _v = VFFSL(SL,"css_link",False)('login.css') # "$css_link('login.css')" on line 12, col 5
        if _v is not None: write(_filter(_v, rawExpr="$css_link('login.css')")) # from line 12, col 5.
        write('\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def pagecontent(self, **KWS):



        ## CHEETAH: generated from #def pagecontent at line 15, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('<div id="loginBox">\n    <h1>Login</h1>\n    <p class="message">')
        _v = VFFSL(SL,"message",False) # '${message}' on line 18, col 24
        if _v is not None: write(_filter(_v, rawExpr='${message}')) # from line 18, col 24.
        write('</p>\n    <form action="')
        _v = VFFSL(SL,"previous_url",False) # '${previous_url}' on line 19, col 19
        if _v is not None: write(_filter(_v, rawExpr='${previous_url}')) # from line 19, col 19.
        write('''" method="POST">
        <table>
            <tr>
                <td class="label">
                    <label for="user_name">User Name:</label>
                </td>
                <td class="field">
                    <input type="text" id="user_name" name="user_name"/>
                </td>
            </tr>
            <tr>
                <td class="label">
                    <label for="password">Password:</label>
                </td>
                <td class="field">
                    <input type="password" id="password" name="password"/>
                </td>
            </tr>
            <tr>
                <td colspan="2" class="buttons">
                    <input type="submit" name="login" value="Login"/>
                </td>
            </tr>
        </table>

''')
        if VFFSL(SL,"forward_url",False): # generated from line 44, col 9
            write('        <input type="hidden" name="forward_url" value="')
            _v = VFFSL(SL,"forward_url",False) # '${forward_url}' on line 45, col 56
            if _v is not None: write(_filter(_v, rawExpr='${forward_url}')) # from line 45, col 56.
            write('"/>\n')
        write('\n')
        for name, value in VFN(VFFSL(SL,"original_parameters",False),"items",False)(): # generated from line 48, col 9
            write('        <input type="hidden" name="')
            _v = VFFSL(SL,"name",False) # '${name}' on line 49, col 36
            if _v is not None: write(_filter(_v, rawExpr='${name}')) # from line 49, col 36.
            write('" value="')
            _v = VFFSL(SL,"value",False) # '${value}' on line 49, col 52
            if _v is not None: write(_filter(_v, rawExpr='${value}')) # from line 49, col 52.
            write('"/>\n')
        write('''    </form>
<p class="note">Self registration is currently not available. Please note that you don't need to log on in order to post a comment.<p>

</div>

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''



''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_login= 'writeBody'

## END CLASS DEFINITION

if not hasattr(login, '_initCheetahAttributes'):
    templateAPIClass = getattr(login, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(login)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=login()).run()


