#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from SiteBase import SiteBase
import time
from cblog import fflash
from cblog.widgets import sitewide
from pprint import pformat

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc7'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 7)
__CHEETAH_genTime__ = 1165587834.8557119
__CHEETAH_genTimestamp__ = 'Fri Dec  8 15:23:54 2006'
__CHEETAH_src__ = 'SiteTemplate.tmpl'
__CHEETAH_srcLastModified__ = 'Fri Dec  8 15:23:54 2006'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class SiteTemplate(SiteBase):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        SiteBase.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def headtop(self, **KWS):



        ## CHEETAH: generated from #block headtop at line 14, col 3.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def extra_header_data(self, **KWS):



        ## CHEETAH: generated from #block extra_header_data at line 17, col 3.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('  <!-- insert extra header lines (links etc.) here -->\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def extra_stylesheets(self, **KWS):



        ## CHEETAH: generated from #block extra_stylesheets at line 29, col 3.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('  <!-- insert extra stylesheet links here -->\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def pagetitle(self, **KWS):



        ## CHEETAH: generated from #block pagetitle at line 40, col 3.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('  <title></title>\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def pagecontent(self, **KWS):



        ## CHEETAH: generated from #block pagecontent at line 82, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('<p class="placeholder">Here comes the page content...</p>\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">

<html>
<head>
''')
        self.headtop(trans=trans)
        self.extra_header_data(trans=trans)
        write('\n')
        # silent $fflash.init($searchList())
        # silent $sitewide.init($searchList())
        for css in VFFSL(SL,"tg_css",False): # generated from line 23, col 3
            write('  ')
            _v = VFFSL(SL,"css",False)() # '$css()' on line 24, col 3
            if _v is not None: write(_filter(_v, rawExpr='$css()')) # from line 24, col 3.
            write('\n')
        write('\n')
        #  include your own external CSS stylesheet links here, e.g.
        write('  ')
        _v = VFFSL(SL,"css_link",False)('cblog.css') # "$css_link('cblog.css')" on line 28, col 3
        if _v is not None: write(_filter(_v, rawExpr="$css_link('cblog.css')")) # from line 28, col 3.
        write('\n')
        self.extra_stylesheets(trans=trans)
        write('\n')
        #  include your own external JS files links here, e.g.
        # $js_link('events.js')
        write('\n')
        for js in VFFSL(SL,"tg_js_head",False): # generated from line 36, col 3
            write('  ')
            _v = VFFSL(SL,"js",False)() # '$js()' on line 37, col 3
            if _v is not None: write(_filter(_v, rawExpr='$js()')) # from line 37, col 3.
            write('\n')
        write('\n')
        self.pagetitle(trans=trans)
        write('''</head>

<body>
''')
        for js in VFFSL(SL,"tg_js_bodytop",False): # generated from line 46, col 1
            _v = VFFSL(SL,"js",False)() # '$js()' on line 47, col 1
            if _v is not None: write(_filter(_v, rawExpr='$js()')) # from line 47, col 1.
            write('\n')
        write('''
<!-- Header -->
<div id="header">
  <h1 id="blogtitle"><a href="''')
        _v = VFN(VFFSL(SL,"tg",False),"url",False)('/') # "${tg.url('/')}" on line 52, col 31
        if _v is not None: write(_filter(_v, rawExpr="${tg.url('/')}")) # from line 52, col 31.
        write('">')
        _v = VFFSL(SL,"tg.blogtitle",False) # '${tg.blogtitle}' on line 52, col 47
        if _v is not None: write(_filter(_v, rawExpr='${tg.blogtitle}')) # from line 52, col 47.
        write('''</a></h1>

  <ul id="navbar">
    <li><a href="''')
        _v = VFN(VFFSL(SL,"tg",False),"url",False)('/') # "$tg.url('/')" on line 55, col 18
        if _v is not None: write(_filter(_v, rawExpr="$tg.url('/')")) # from line 55, col 18.
        write('">Home</a></li>\n\n    <li><a href="')
        _v = VFN(VFFSL(SL,"tg",False),"url",False)('/archive') # "$tg.url('/archive')" on line 57, col 18
        if _v is not None: write(_filter(_v, rawExpr="$tg.url('/archive')")) # from line 57, col 18.
        write('">Archive</a></li>\n\n    <li><a href="')
        _v = VFN(VFFSL(SL,"tg",False),"url",False)('/featured') # "$tg.url('/featured')" on line 59, col 18
        if _v is not None: write(_filter(_v, rawExpr="$tg.url('/featured')")) # from line 59, col 18.
        write('">Featured</a></li>\n\n')
        if VFN(VFFSL(SL,"tg",False),"config",False)('identity.on', False): # generated from line 61, col 5
            if VFFSL(SL,"tg.identity.anonymous",False): # generated from line 62, col 5
                if 'loggin_in' not in locals(): # generated from line 63, col 5
                    write('    <li><a href="')
                    _v = VFN(VFFSL(SL,"tg",False),"url",False)('/login') # "$tg.url('/login')" on line 64, col 18
                    if _v is not None: write(_filter(_v, rawExpr="$tg.url('/login')")) # from line 64, col 18.
                    write('">Login</a></li>\n')
            else: # generated from line 66, col 5
                write('    <li><a href="')
                _v = VFN(VFFSL(SL,"tg",False),"url",False)('/logout') # "$tg.url('/logout')" on line 67, col 18
                if _v is not None: write(_filter(_v, rawExpr="$tg.url('/logout')")) # from line 67, col 18.
                write('">Logout</a></li>\n')
        write('  </ul>\n\n  <h2 id="description">')
        _v = VFFSL(SL,"tg.blogdesc",False) # '${tg.blogdesc}' on line 72, col 24
        if _v is not None: write(_filter(_v, rawExpr='${tg.blogdesc}')) # from line 72, col 24.
        write('''</h2>

</div>

<div id="content">
<!-- Main Column -->
<div id="main">

''')
        _v = VFFSL(SL,"tg_fancyflash",False)(VFFSL(SL,"tg_flash",False)) # '$tg_fancyflash($tg_flash)' on line 80, col 1
        if _v is not None: write(_filter(_v, rawExpr='$tg_fancyflash($tg_flash)')) # from line 80, col 1.
        write('\n\n')
        self.pagecontent(trans=trans)
        write('''</div>

<!-- Sidebar -->
<div id="sidebar">

  ''')
        _v = VFFSL(SL,"tg_search_form",False)(action=VFN(VFFSL(SL,"tg",False),"url",False)('/search'), method='GET',
    form_attrs=dict(id='searchform'))
        if _v is not None: write(_filter(_v, rawExpr="${tg_search_form(action=$tg.url('/search'), method='GET',\n    form_attrs=dict(id='searchform'))}")) # from line 90, col 3.
        write('\n\n  ')
        _v = VFFSL(SL,"tg_profile",False)() # '$tg_profile()' on line 93, col 3
        if _v is not None: write(_filter(_v, rawExpr='$tg_profile()')) # from line 93, col 3.
        write('''

  <h2 class="sidebar-title">Categories</h2>

  ''')
        _v = VFFSL(SL,"tg_category_links",False)() # '$tg_category_links()' on line 97, col 3
        if _v is not None: write(_filter(_v, rawExpr='$tg_category_links()')) # from line 97, col 3.
        write('''

  <h2 class="sidebar-title">Monthly Archives</h2>

  ''')
        _v = VFFSL(SL,"tg_archive_links",False)() # '$tg_archive_links()' on line 101, col 3
        if _v is not None: write(_filter(_v, rawExpr='$tg_archive_links()')) # from line 101, col 3.
        write('\n\n')
        if VFFSL(SL,"getVar",False)('tg.feeds', None): # generated from line 103, col 3
            write('''  <h2 class="sidebar-title">Get feeds</h2>

  <ul>
    <li><a
      title="''')
            _v = VFN(VFFSL(SL,"tg",False),"feeds",False)['full']['title'] # "${tg.feeds['full']['title'], escape='quote'}" on line 108, col 14
            if _v is not None: write(_filter(_v, escape='quote', rawExpr="${tg.feeds['full']['title'], escape='quote'}")) # from line 108, col 14.
            write(' (Full text, Atom 1.0)"\n      href="')
            _v = VFN(VFFSL(SL,"tg",False),"feeds",False)['full']['href'] # "${tg.feeds['full']['href']}" on line 109, col 13
            if _v is not None: write(_filter(_v, rawExpr="${tg.feeds['full']['href']}")) # from line 109, col 13.
            write('">Full text of latest posts</a></li>\n    <li><a\n      title="')
            _v = VFN(VFFSL(SL,"tg",False),"feeds",False)['summary']['title'] # "${tg.feeds['summary']['title'], escape='quote'}" on line 111, col 14
            if _v is not None: write(_filter(_v, escape='quote', rawExpr="${tg.feeds['summary']['title'], escape='quote'}")) # from line 111, col 14.
            write(' (Summary, Atom 1.0)"\n      href="')
            _v = VFN(VFFSL(SL,"tg",False),"feeds",False)['summary']['href'] # "${tg.feeds['summary']['href']}" on line 112, col 13
            if _v is not None: write(_filter(_v, rawExpr="${tg.feeds['summary']['href']}")) # from line 112, col 13.
            write('">Summary of latest posts</a></li>\n')
            if VFFSL(SL,"getVar",False)('tag', None) and VFN(VFFSL(SL,"tg.feeds",False),"get",False)(VFFSL(SL,"tag.name",False)): # generated from line 113, col 5
                write('    <li><a title="')
                _v = VFN(VFFSL(SL,"tg",False),"feeds",False)[VFFSL(SL,"tag.name",False)]['full']['title'] # "${tg.feeds[$tag.name]['full']['title'], escape='quote'}" on line 114, col 19
                if _v is not None: write(_filter(_v, escape='quote', rawExpr="${tg.feeds[$tag.name]['full']['title'], escape='quote'}")) # from line 114, col 19.
                write('"\n      href="')
                _v = VFN(VFFSL(SL,"tg",False),"feeds",False)[VFFSL(SL,"tag.name",False)]['full']['href'] # "${tg.feeds[$tag.name]['full']['href']}" on line 115, col 13
                if _v is not None: write(_filter(_v, rawExpr="${tg.feeds[$tag.name]['full']['href']}")) # from line 115, col 13.
                write('">Posts in this category</a>\n      (Full text, Atom 1.0)</li>\n    <li><a title="')
                _v = VFN(VFFSL(SL,"tg",False),"feeds",False)[VFFSL(SL,"tag.name",False)]['summary']['title'] # "${tg.feeds[$tag.name]['summary']['title'], escape='quote'}" on line 117, col 19
                if _v is not None: write(_filter(_v, escape='quote', rawExpr="${tg.feeds[$tag.name]['summary']['title'], escape='quote'}")) # from line 117, col 19.
                write('"\n      href="')
                _v = VFN(VFFSL(SL,"tg",False),"feeds",False)[VFFSL(SL,"tag.name",False)]['summary']['href'] # "${tg.feeds[$tag.name]['summary']['href']}" on line 118, col 13
                if _v is not None: write(_filter(_v, rawExpr="${tg.feeds[$tag.name]['summary']['href']}")) # from line 118, col 13.
                write('">Posts in this category (Summary)</a>\n      (Summary, Atom 1.0)</li>\n')
            write('  </ul>\n')
        write('''
  <h2 class="sidebar-title">Links</h2>

  <!--
    +++++++++++++++++++++++++++++++++++++++++++++++++

      Add things to your sidebar here.
      Use the format:

      <li><a href="URL">Link Text</a></li>

    +++++++++++++++++++++++++++++++++++++++++++++++++
  -->
  <ul>
    <li><a href="http://chrisarndt.de/projects/cblog/"
      target="_blank">Homepage</a></li>
  </ul>

''')
        if VFN(VFFSL(SL,"tg",False),"config",False)('identity.on', False): # generated from line 141, col 3
            if not VFFSL(SL,"tg.identity.anonymous",False): # generated from line 142, col 3
                write('''  <h2 class="sidebar-title">Tools</h2>

  <ul>
    <li><a href="''')
                _v = VFN(VFFSL(SL,"tg",False),"url",False)('/edit_article') # "${tg.url('/edit_article')}" on line 146, col 18
                if _v is not None: write(_filter(_v, rawExpr="${tg.url('/edit_article')}")) # from line 146, col 18.
                write('">Post new article</a></li>\n')
                if 'admin' in VFFSL(SL,"tg.identity.permissions",False): # generated from line 147, col 5
                    write('    <li><a href="')
                    _v = VFN(VFFSL(SL,"tg",False),"url",False)('/admin') # "${tg.url('/admin')}" on line 148, col 18
                    if _v is not None: write(_filter(_v, rawExpr="${tg.url('/admin')}")) # from line 148, col 18.
                    write('" target="_blank">Administration</a></li>\n')
                write('  </ul>\n')
            write('\n  <p id="login">\n')
            if VFFSL(SL,"tg.identity.anonymous",False): # generated from line 154, col 5
                write('    You are not logged in\n')
            else: # generated from line 156, col 5
                write('    You are logged in as\n    <span class="user_name">')
                _v = VFFSL(SL,"tg.identity.user.display_name",False) # '$tg.identity.user.display_name' on line 158, col 29
                if _v is not None: write(_filter(_v, rawExpr='$tg.identity.user.display_name')) # from line 158, col 29.
                write('</span>\n')
            write('  </p>\n')
        write('''
  <p id="tg-logo"><a href="http://turbogears.org"
    title="This website is powered by TurboGears, the Python web mega-framework."
    ><img src="/static/images/under_the_hood_blue.png" width="150" height="40"
    alt="TurboGears under the hood"/></a></p>

</div>
</div>

<!-- Footer -->
<div id="footer">
  <p id="copyright">&copy ''')
        _v = VFN(VFFSL(SL,"time",False),"strftime",False)('%Y') # "$time.strftime('%Y')" on line 173, col 27
        if _v is not None: write(_filter(_v, rawExpr="$time.strftime('%Y')")) # from line 173, col 27.
        write(' by ')
        _v = VFN(VFFSL(SL,"tg",False),"config",False)('cblog.author') # "$tg.config('cblog.author')" on line 173, col 51
        if _v is not None: write(_filter(_v, rawExpr="$tg.config('cblog.author')")) # from line 173, col 51.
        write('''</p>
</div>

''')
        for js in VFFSL(SL,"tg_js_bodybottom",False): # generated from line 176, col 1
            _v = VFFSL(SL,"js",False)() # '$js()' on line 177, col 1
            if _v is not None: write(_filter(_v, rawExpr='$js()')) # from line 177, col 1.
            write('\n')
        write('\n')
        if VFN(VFFSL(SL,"tg",False),"config",False)('log_debug_info_filter.on', False): # generated from line 180, col 1
            write('<pre class="debug">\n')
            _v = VFFSL(SL,"pformat",False)(VFFSL(SL,"searchList",False)(), indent=2, depth=5) # '${pformat($searchList(), indent=2, depth=5), escape=True}' on line 183, col 1
            if _v is not None: write(_filter(_v, escape=True, rawExpr='${pformat($searchList(), indent=2, depth=5), escape=True}')) # from line 183, col 1.
            write('\n</pre>\n')
        write('\n')
        #  pseudo onDOMContentLoad support for Opera 8.x
        write('''<div id="domloadeof" style="display:none"></div>
</body>
</html>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_SiteTemplate= 'respond'

## END CLASS DEFINITION

if not hasattr(SiteTemplate, '_initCheetahAttributes'):
    templateAPIClass = getattr(SiteTemplate, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(SiteTemplate)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=SiteTemplate()).run()


