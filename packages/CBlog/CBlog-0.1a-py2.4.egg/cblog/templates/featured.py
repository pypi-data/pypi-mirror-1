#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from cblog.templates.SiteTemplate import SiteTemplate

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0rc7'
__CHEETAH_versionTuple__ = (2, 0, 0, 'candidate', 7)
__CHEETAH_genTime__ = 1165587712.7811601
__CHEETAH_genTimestamp__ = 'Fri Dec  8 15:21:52 2006'
__CHEETAH_src__ = 'featured.tmpl'
__CHEETAH_srcLastModified__ = 'Fri Dec  8 14:43:37 2006'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class featured(SiteTemplate):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        SiteTemplate.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def pagetitle(self, **KWS):



        ## CHEETAH: generated from #def pagetitle at line 7, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('  <title>')
        _v = VFFSL(SL,"tg.blogtitle",False) # '${tg.blogtitle}' on line 8, col 10
        if _v is not None: write(_filter(_v, rawExpr='${tg.blogtitle}')) # from line 8, col 10.
        write(': Featured articles</title>\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def pagecontent(self, **KWS):



        ## CHEETAH: generated from #def pagecontent at line 11, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''<h1>Featured articles</h1>

<p class="firstpar">This is a list of posts that are still worth reading, even if they have disappeared from the frontpage already. Mostly somewhat longer articles.</p>

''')
        items = VFN(VFFSL(SL,"tg",False),"ipeek",False)(VFFSL(SL,"reviews",False))
        write('\n<div class="blogroll">\n')
        if items: # generated from line 19, col 1
            for review in VFFSL(SL,"items",False): # generated from line 20, col 3
                write('  <div class="article">\n    <h1 class="title"><a href="')
                _v = VFN(VFFSL(SL,"tg",False),"url",False)('/article/%s' % review.entry.id) # "${tg.url('/article/%s' % review.entry.id)}" on line 22, col 32
                if _v is not None: write(_filter(_v, rawExpr="${tg.url('/article/%s' % review.entry.id)}")) # from line 22, col 32.
                write('"\n      >')
                _v = VFFSL(SL,"review.entry.title",False) # '${review.entry.title}' on line 23, col 8
                if _v is not None: write(_filter(_v, rawExpr='${review.entry.title}')) # from line 23, col 8.
                write('''</a></h1>

    <p class="byline">posted by <span
      class="author">''')
                _v = VFFSL(SL,"review.entry.author.display_name",False) # '${review.entry.author.display_name}' on line 26, col 22
                if _v is not None: write(_filter(_v, rawExpr='${review.entry.author.display_name}')) # from line 26, col 22.
                write('</span> on\n      <span class="date">')
                _v = VFN(VFFSL(SL,"tg",False),"format_date",False)(VFFSL(SL,"review.entry.created",False)) # '${tg.format_date($review.entry.created)}' on line 27, col 26
                if _v is not None: write(_filter(_v, rawExpr='${tg.format_date($review.entry.created)}')) # from line 27, col 26.
                write('</span> in\n      <span class="tags">')
                _v = VFN(VFFSL(SL,"tg",False),"format_tags",False)(VFFSL(SL,"review.entry.tags",False)) # '${tg.format_tags($review.entry.tags)}' on line 28, col 26
                if _v is not None: write(_filter(_v, rawExpr='${tg.format_tags($review.entry.tags)}')) # from line 28, col 26.
                write('</span>\n      (recommended by <span class="author">')
                _v = VFFSL(SL,"review.author.display_name",False) # '${review.author.display_name}' on line 29, col 44
                if _v is not None: write(_filter(_v, rawExpr='${review.author.display_name}')) # from line 29, col 44.
                write('''</span>)
    </p>

    <p class="eteaser">''')
                _v = VFFSL(SL,"review.html_text",False) # '${review.html_text}' on line 32, col 24
                if _v is not None: write(_filter(_v, rawExpr='${review.html_text}')) # from line 32, col 24.
                write('</p>\n\n    <p><a class="readon" href="')
                _v = VFN(VFFSL(SL,"tg",False),"url",False)('/article/%s' % VFFSL(SL,"review.entry.id",False)) # "${tg.url('/article/%s' % $review.entry.id)}" on line 34, col 32
                if _v is not None: write(_filter(_v, rawExpr="${tg.url('/article/%s' % $review.entry.id)}")) # from line 34, col 32.
                write('''"
      >Read featured article &hellip;</a></p>

  </div>
''')
            write('\n')
        else: # generated from line 40, col 1
            write('<p>No featured articles found.</p>\n')
        write('</div>\n')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''


''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_featured= 'writeBody'

## END CLASS DEFINITION

if not hasattr(featured, '_initCheetahAttributes'):
    templateAPIClass = getattr(featured, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(featured)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=featured()).run()


