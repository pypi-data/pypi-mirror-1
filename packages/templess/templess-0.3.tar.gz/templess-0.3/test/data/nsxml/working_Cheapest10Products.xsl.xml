<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:math="http://exslt.org/math" xmlns:msxsl="urn:schemas-microsoft-com:xslt" version="1.0" extension-element-prefixes="math" math:doc="http://www.exslt.org/math">
	<xsl:output method="html"/>
	<xsl:include href="Style1.xsl" />

	<xsl:variable name="nMax" select="'10'"/>



	<!-- Template for root rule -->
	<xsl:template match="/">
		<!-- Set Formatting Characteristics -->
		<xsl:call-template name="Style1"/>
		<xsl:apply-templates/>
	</xsl:template>
	<!-- Template for "products" elements -->
	<xsl:template match="products">
	

		<h1> Cheapest <xsl:value-of select="$nMax"/>  Products in Company</h1>

		<xsl:variable name="highest">
			<xsl:call-template name="math:lowestN">
				<xsl:with-param name="nodes" select="//price"/>
				<xsl:with-param name="nMax" select="$nMax"/>
			</xsl:call-template>
		</xsl:variable>
		<!-- Table Header Creation -->
		<table border="1">
			<tr>
				<th>Price</th>
				<th>ID</th>
				<th>Product Name</th>
			</tr>
			<xsl:for-each select="msxsl:node-set($highest)">
				<xsl:for-each select="*">
					<!-- Table Row Creation -->
					<tr>
						<td align="right"><xsl:value-of select="price"/></td>
						<td><xsl:value-of select="prodid"/></td>
						<td><xsl:value-of select="name"/></td>
					</tr>
				</xsl:for-each>
			</xsl:for-each>
			<!-- End of Table -->
		</table>
	</xsl:template>

<!-- The following template was created by Jeni Tennison of http://www.JeniTennison.com
      and is part of an extremely useful collection of extension functions and templates at http://www.exslt.org -->



	<xsl:template name="math:lowestN">
		<xsl:param name="nodes" select="/.."/>
		<xsl:param name="nMax" select="1"/>
		<xsl:if test="$nodes and not($nodes[number(.) != number(.)])">
			<xsl:variable name="max">
				<xsl:for-each select="$nodes">
					<xsl:sort data-type="number" order="ascending"/>
					<xsl:if test="position() &lt;=  $nMax">
						<xsl:copy-of select="../."/>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:copy-of select="$max"/>
		</xsl:if>
	</xsl:template>
</xsl:stylesheet>
