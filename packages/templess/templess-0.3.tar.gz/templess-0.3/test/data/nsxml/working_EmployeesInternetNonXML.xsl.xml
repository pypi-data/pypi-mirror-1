<?xml version='1.0' encoding='utf-8' ?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:set="http://exslt.org/set" version="1.0" extension-element-prefixes="set" set:doc="http://www.exslt.org/set"  xmlns:msxsl="urn:schemas-microsoft-com:xslt"><xsl:output method="html"/>
<xsl:include href="Style1.xsl" />




<xsl:variable name="department"      select="//employee[department='Internet']" />
<xsl:variable name="language"        select="//employee[primarylanguage != 'XML']" />



<!-- Template for root rule -->
<xsl:template match="/">
	<!-- Set Formatting Characteristics -->
	<xsl:call-template name="Style1"/>
	<xsl:apply-templates/>
</xsl:template>


<!-- Template for "employees" elements -->
<xsl:template match="employees">

	<h1>Employees from the Internet deparment that do not know XML</h1>
	
	<!-- Compute the combination of employees that work in account and internet departments -->
		<xsl:variable name="DeptLang">
			<xsl:call-template name="set:intersection">
				<xsl:with-param name="nodes1" select="$department"/>
				<xsl:with-param name="nodes2" select="$language"/>
			</xsl:call-template>
		</xsl:variable>




	<!-- Table Header Creation -->
	<table border="1">
	<tr>
	<th>Department</th>
	<th>Name</th>
	<th>Hourly Rate</th>
	<th>Primary Language</th>
	</tr>

	
	<xsl:for-each select="msxsl:node-set($DeptLang)/employee">
		<tr>			
			<td><xsl:value-of select="department" /></td>
			<td><xsl:value-of select="employeename" /></td>
			<td><xsl:value-of select="hourlyrate" /></td>
			<td><xsl:value-of select="primarylanguage" /></td>
		</tr>
	</xsl:for-each>




	<!-- End of Table -->
	</table>

</xsl:template>

	<!-- The following template was created by Jeni Tennison of http://www.JeniTennison.com
	      and is part of an extremely useful collection of extension functions and templates at http://www.exslt.org -->

<xsl:template name="set:intersection">
   <xsl:param name="nodes1" select="/.." />
   <xsl:param name="nodes2" select="/.." />
   <xsl:copy-of select="$nodes1[count(.|$nodes2) = count($nodes2)]" />
</xsl:template>


</xsl:stylesheet>
