<?xml version='1.0' encoding='utf-8' ?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:math="http://exslt.org/math" version="1.0" extension-element-prefixes="math" math:doc="http://www.exslt.org/math"><xsl:output method="html"/>
<xsl:include href="Style1.xsl" />


<xsl:template match="/">
	<!-- Set Formatting Characteristics -->
	<xsl:call-template name="Style1"/>
	<xsl:apply-templates/>
</xsl:template>

<xsl:template match="totalsales">
		<span class="subhead">Finding the highest elements in a nodeset </span><br/>

		<span class="text">This stylsheet demonstrates using the "highest" template to extract  <br/>
		the period with the highest sales amount in a region</span>



	<h1> Highest eWidget Sales for 1st quarter 2001</h1>
	<xsl:apply-templates/>
</xsl:template>

<xsl:template match="employee">
	<br/><br/>
	<span class="subhead">
		Employee:
	</span> 
	
	<span class="text">
		<xsl:value-of select="@firstname"/><xsl:value-of select="@lastname"/><br/>
	</span>

	<span class="subhead">
		StartDate: 
	</span>

	<span class="text">
		<xsl:value-of select="@startdate"/><br/>
	</span>
	<xsl:apply-templates/>
</xsl:template>


<xsl:template match="sales">

	<span class="subhead">
		Region: 
	</span>

	<span class="text">
		<xsl:value-of select="@region"/><br/>
	</span>

	<!-- Compute the highest sale element: The highest number will be stored in the variable $highest -->
	<xsl:variable name="highest">
		<xsl:call-template name="math:highest">
			<xsl:with-param name="nodes" select="weeklysales"/>
		</xsl:call-template>
	</xsl:variable>

	<span class="subhead">		
		Highest Sales 
	</span>

	<span class="text">
		<xsl:value-of select="$highest"/>
	</span>
	
	
	</xsl:template>


<!-- The following template was created by Jeni Tennison of http://www.JeniTennison.com
      and is part of an extremely useful collection of extension functions and templates at http://www.exslt.org -->


<xsl:template name="math:highest">
   <xsl:param name="nodes" select="/.." />
   <xsl:if test="$nodes and not($nodes[number(.) != number(.)])">
      <xsl:variable name="max">
         <xsl:for-each select="$nodes">
            <xsl:sort data-type="number" order="descending" />
            <xsl:if test="position() = 1">
               <xsl:value-of select="number(.)" />
            </xsl:if>
         </xsl:for-each>
      </xsl:variable>
      <xsl:copy-of select="$nodes[. = $max]" />
   </xsl:if>
</xsl:template>

</xsl:stylesheet>
