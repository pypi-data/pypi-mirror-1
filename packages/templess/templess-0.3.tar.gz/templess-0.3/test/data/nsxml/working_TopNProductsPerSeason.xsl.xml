<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:math="http://exslt.org/math" xmlns:msxsl="urn:schemas-microsoft-com:xslt" version="1.0" extension-element-prefixes="math" math:doc="http://www.exslt.org/math">
	<xsl:output method="html"/>
	<xsl:include href="Style1.xsl"/>



<xsl:variable name="nMax" select="'3'" />

<!-- Template for root rule -->
<xsl:template match="/">
	<!-- Set Formatting Characteristics -->
	<xsl:call-template name="Style1"/>
	<xsl:apply-templates/>
</xsl:template>


<!-- Template for "products" elements -->
<xsl:template match="products">
	<h1> Top <xsl:value-of select="$nMax" /> Selling Products per season</h1>


	<xsl:for-each select="season">
		<span class="text" ><b>Season:</b> <xsl:value-of select="@name"/>	</span>

		<!-- Compute the top 5 selling products from the product elements -->
		<xsl:variable name="highest">
			<xsl:call-template name="math:highestN">
				<xsl:with-param name="nodes" select="product/quantity"/>
				<xsl:with-param name="nMax" select="$nMax"/>
			</xsl:call-template>
		</xsl:variable>


		<!-- Table Header Creation -->
		<table border="1">
		<tr>
		<th>Quantity</th><th>ID</th><th>Product Name</th>
		</tr>
		<xsl:for-each select="msxsl:node-set($highest)">
			<xsl:for-each select="*" > 
				<!-- Table Row Creation -->
				<tr>
					<td align="right"><xsl:value-of select="quantity"/></td>
					<td><xsl:value-of select="prodid"/></td>
					<td><xsl:value-of select="name"/></td>
				</tr>

			</xsl:for-each>
		</xsl:for-each>
		</table><br/>
		</xsl:for-each>
		<!-- End of Table -->


</xsl:template>

<!-- The following template was created by Jeni Tennison of http://www.JeniTennison.com
      and is part of an extremely useful collection of extension functions and templates at http://www.exslt.org -->

<xsl:template name="math:highestN">
   <xsl:param name="nodes" select="/.." />
   <xsl:param name="nMax" select="1" />
   <xsl:if test="$nodes and not($nodes[number(.) != number(.)])">
      <xsl:variable name="max">
         <xsl:for-each select="$nodes">
            <xsl:sort data-type="number" order="descending" />
            <xsl:if test="position() &lt;=  $nMax">
               <xsl:copy-of select="../." />
            </xsl:if>
         </xsl:for-each>
      </xsl:variable>
      	<!-- <xsl:copy-of select="$nodes[. = $max]" />-->
		<xsl:copy-of select="$max" /> 
   </xsl:if>

</xsl:template>


</xsl:stylesheet>
