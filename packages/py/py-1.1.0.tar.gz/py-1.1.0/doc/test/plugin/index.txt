
advanced python testing
=======================

skipping_ advanced skipping for python test functions, classes or modules.

mark_ generic mechanism for marking python functions.

pdb_ interactive debugging with the Python Debugger.

figleaf_ write and report coverage data with 'figleaf'.

coverage_ (3rd) for testing with Ned's coverage module 

monkeypatch_ safely patch object attributes, dicts and environment variables.

capture_ configurable per-test stdout/stderr capturing mechanisms.

recwarn_ helpers for asserting deprecation and other warnings.

tmpdir_ provide temporary directories to test functions.


testing domains
===============

oejskit_ (3rd) run javascript tests in real life browsers

django_ (3rd) for testing django applications


reporting and failure logging
=============================

pastebin_ submit failure or test session information to a pastebin service.

xmlresult_ (3rd) for generating xml reports and CruiseControl integration

resultlog_ resultlog plugin for machine-readable logging of test results.

terminal_ Implements terminal reporting of the full testing process.


other testing conventions
=========================

unittest_ automatically discover and run traditional "unittest.py" style tests.

nose_ nose-compatibility plugin: allow to run nose test suites natively.

doctest_ collect and execute doctests from modules and test files.

restdoc_ perform ReST syntax, local and remote reference tests on .rst/.txt files.


core debugging / help functionality
===================================

helpconfig_ provide version info, conftest/environment config names.

hooklog_ log invocations of extension hooks to a file.


.. include:: links.txt
