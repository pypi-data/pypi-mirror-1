2007.12.30

* Fixed some typos in the README.
* Moved the stat script into the admin dir.
* Updated the test suite script to point to the new lib dir.
* Incremented micro version number.
* Updated TODO.
* Removed old classifiers from setup.py.
* Updated copyright date in LICENSE.
* Moved incrementIP into ipmath.
* Added an iterator for listing IP addresses.
* Moved utility functions into their own module (with the exception of the ones
that depend on the CIDR class)..
* Added README to unit tests (and fixed more errors in the README as a result).
* Renamed getLargest to the more descriptive getLargestBlocks.
* Changed utility function names from getIPList and getIPIter to getIPs and
iterIPs, respectively.
* Changed netcidr methods to use the utils iterIPs when possible.
* Removed unused masks from utils.

2007.12.24

* Updated README.
* Added unit tests to both _getLargest and getLargest; fixed subsequently
discovered bug in their logic.
* Added a utility funtion for calculating spanning blocks and added a
corresponding Networks method.
* Added unit tests for incrementIP.
* Added unit tests for getIPList.
* Fixed unit tests in CIDR.
* Fixed unit tests in withoutIPs and fromIPs.
* Added a method for getting total hosts in the collected networks object.
* Added a Networks method for iterating through all the IPs of the contained
nets.

2007.12.23

* Updated TODO.
* Added admin dir and scripts.
* Changed the name from Adytum-NetCIDR to just NetCIDR.
* Changed the namespace from adytum.netcidr to netcidr.
* Cleaned up white spaces.
* Incremented version number.
* Code cleanup.
* Removed __init__.py in anticipation of a rename.
* Renamed netcidr/network.py to netcidr/__init__.py.
* Updated README.
* Fixed test.
* Added ipmath utility module (that will hopefully get expanded in the future).
* Added more unit tests.
* Fixed a range bug in Networks.
* Formatting.
* Added a Networks method for splitting up a range of IPs into netblocks based
on IP addresses to be exluded.
* Added a Networks method for splitting up a range of IPs into netblocks based
on IP addresses to be included.
* Changed the fromIPs()/withoutIPs() methods to not return anything.
* Replaced occurances of VLSM with Mask, to aid in readability of the code.
* Updated the validation exception message.
* Replaced all variable names that didn't adhere to the Twisted standard with
ones that do.
* Updated doc string.
* Updated README with info on using the new methods.
* Added __cmp__ method to CIDR object for simplifying comparison logic.
* Simplified logic at the end of isInRange.

2006.01.28

* Added a convenience function for determining "direction" of communication
betnween two nodes, given a definition of an "inside" network.
* Updated the classifiers in setup.py.
* Added LICENSE file.

2006.01.27

* Created a network module for CIDR addresses and sets of CIDR addresses in
sandbox/oubiwann.
* Finished the network range method and doctests.
* Added some explanatory notes to the docstring of network.getHostRange().
* Added CIDR.getOctetTuple().
* Adjusted the CIDR.__repr__().
* Removed the forced zero checking in CIDR.
* Finished the Networks class with the completion of a __contains__() method and
isInRange().
* Moved code out of PyFlowCatch sandbox and into a project space of its own.
* Added TODO, README, INSTALL, VERSION and setup.py.
* Added a test harness.
