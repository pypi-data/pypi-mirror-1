from sqlalchemy.orm import scoped_session, sessionmaker
import elixir
from {{package}}.model import meta

# make Session available for use and
# store for later access

# Ready for SQLA 0.5 where autoflush defaults to True
# and autocommit defaults to False (see SQLA sessionmaker 
# docs for details of alternative configurations)

import sqlalchemy
if sqlalchemy.__version__ > '0.5':
    Session = scoped_session(sessionmaker())
else:
    Session = scoped_session(sessionmaker(autoflush=True, transactional=True))

elixir.session = Session
elixir.options_defaults.update({
    'shortnames': True
})

# use the elixir metadata
metadata = elixir.metadata

# this will be called in config/environment.py
def init_model(engine):
    metadata.bind = engine

# import other entities here, e.g.

# from {{package}}.model.blog import *

from {{package}}.model.rdfmodel import *

# Finally, call elixir to set up the tables.

elixir.setup_all()


