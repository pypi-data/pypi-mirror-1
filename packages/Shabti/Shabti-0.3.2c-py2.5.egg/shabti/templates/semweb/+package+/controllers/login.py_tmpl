from {{package}}.lib.base import *
from {{package}}.lib import auth
from pylons.templating import render_mako
from pylons import request
from routes import redirect_to
import logging
log = logging.getLogger(__name__)

from {{package}}.model.rdfmodel import *

class LoginController(BaseController):

    "A stub example login controller, with login and logout methods"

    def index(self):
        # add your login form here
        return render_mako('login.mak')

    def signin(self):
        username = request.params.get('username')
        password = request.params.get('password')
        try:
            user = model.User.authenticate(username, password)
            auth.login(user)
            if session.get('redirect'):
                redir_url = session.pop('redirect')
                session.save()
                redirect_to(redir_url)
            else:
                redirect_to(controller='demo', action='privindex')
        except model.NotAuthenticated:
            # if the user visiting this controller is not 
            # authenticated the user is routed to the index
            # (above) which presents a login form.
            redirect_to(action='index')

    def signout(self):
        auth.logout()
        redirect_to(action='index')
