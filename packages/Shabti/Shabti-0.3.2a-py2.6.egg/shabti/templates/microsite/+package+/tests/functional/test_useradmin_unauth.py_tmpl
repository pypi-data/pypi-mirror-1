from datetime import datetime, timedelta
import time
import hashlib
from pylons import url, config
from {{package}}.model import *
from {{package}}.tests import *

class TestUserAdminController(TestController):

    def setUp(self):
        TestModel.setUp(self)
    
    
    def tearDown(self):
        TestModel.tearDown(self)
        Session.close()
    
    
    def test_unauthorised_user_state_retrieval_prohibited(self):
        """Unauthorised user GET access is prohibited."""
        response = self.app.get(url('edit_user', id='1'))
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.get(url('new_user'))
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.get(url('save_user', id='1'),
                                params={'email': 'newemail@example.com',
                                        '_method':u'PUT'})
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.get(url('delete_user', id='1'),
                                params={'_method':'DELETE'})
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
    

    def test_unauthorised_user_state_change_prohibited(self):
        """Unauthorised user PUTs and DELETEs are prohibited"""
        response = self.app.put(url('edit_user', id='1'),
                                params={'email': 'new@example.com',
                                        '_method':'PUT'})
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.delete(url('delete_user', id='1'))
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
    
