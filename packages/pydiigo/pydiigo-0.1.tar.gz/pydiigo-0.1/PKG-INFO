Metadata-Version: 1.0
Name: pydiigo
Version: 0.1
Summary: Python wrapper for www.diigo.com's API
Home-page: http://www.tsuyukimakoto.com/project/pydiigo/
Author: makoto tsuyuki
Author-email: mtsuyuki_at_gmail_dot_com
License: BSD
Description: 
        Requirements
        =======================
        * `simplejson`_
        * `pit`_ **optional**. See diigotest.py. You might love it ;)
        
        .. _`simplejson`: http://pypi.python.org/pypi?:action=display&name=simplejson
        .. _`pit`: http://pypi.python.org/pypi?:action=display&name=pit
        
        instllation
        =======================
        $ sudo easy_install pydiigo
        
        or
        
        Download pydiigo and extract it, then
        
        $ sudo python setup.py install
        
        Notes
        =======================
        Diigo's API limits are very few. (You get 503 error)
        
        Usage
        =======================
        
        Initialize API
        --------------------
        ::
        
        >>> from pydiigo import DiigoApi
        >>> api = DiigoApi(user='YOUR_DIIGO_USERNAME', password='YOUR_DIIGO_PASSWORD')
        
        Search Bookmarks
        --------------------
        ::
        
        >>> bookmarks = api.bookmarks_find(users='DIIGO_USER_NAME')
        >>> for bookmark in bookmarks:
        ...   print bookmark.title
        ...   print bookmark.url
        ...   print bookmark.tags
        ...   print bookmark.desc
        ...   print '-' * 10
        
        * Bookmark Structure
        
        * title (string)
        
        * url (string)
        
        * user (string)
        
        * desc (string: description)
        
        * tags (string: Seperated by comma with multiple tags.)
        
        * shared (string: yes or no)
        
        * created_at (string: eg.2009/03/04 02:57:09 +0000)
        
        * updated_at (string: eg.2009/03/04 02:57:09 +0000)
        
        * comments (string array)
        
        * annotations (string array)
        
        Add Bookmark
        --------------------
        ::
        
        >>> result = api.bookmark_add(title='', description='',url='', shared='yes', tags='')
        >>> print result['message']
        added 1 bookmark
        
        * required arguments
        
        * url
        
        Update Bookmark
        --------------------
        ::
        
        >>> result = api.bookmark_update(title='', description='',url='', shared='yes', tags='')
        >>> print result['message']
        updated 1 bookmark
        
        * required arguments
        
        * url
        
        Delete Bookmark
        --------------------
        ::
        
        >>> result = api.bookmark_delete(url='')
        >>> print result['message']
        updated 1 bookmark
        
        * required arguments
        
        * url
        
        
Platform: UNKNOWN
