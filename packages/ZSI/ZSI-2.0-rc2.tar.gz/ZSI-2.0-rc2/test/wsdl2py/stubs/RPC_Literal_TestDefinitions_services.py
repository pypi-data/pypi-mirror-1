################################################## 
# RPC_Literal_TestDefinitions_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from RPC_Literal_TestDefinitions_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class WhiteMesaSoapRpcLitTestSvcLocator:
    SoapTestPortTypeRpc_address = "http://www.whitemesa.net/test-rpc-lit"
    def getSoapTestPortTypeRpcAddress(self):
        return WhiteMesaSoapRpcLitTestSvcLocator.SoapTestPortTypeRpc_address
    def getSoapTestPortTypeRpc(self, url=None, **kw):
        return Soap11TestRpcLitBindingSOAP(url or WhiteMesaSoapRpcLitTestSvcLocator.SoapTestPortTypeRpc_address, **kw)

# Methods
class Soap11TestRpcLitBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: echoStruct
    def echoStruct(self, request):
        if isinstance(request, echoStructRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoStructResponse.typecode)
        if isinstance(response, echoStructResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoStructArray
    def echoStructArray(self, request):
        if isinstance(request, echoStructArrayRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoStructArrayResponse.typecode)
        if isinstance(response, echoStructArrayResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoStructAsSimpleTypes
    def echoStructAsSimpleTypes(self, request):
        if isinstance(request, echoStructAsSimpleTypesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoStructAsSimpleTypesResponse.typecode)
        if isinstance(response, echoStructAsSimpleTypesResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoSimpleTypesAsStruct
    def echoSimpleTypesAsStruct(self, request):
        if isinstance(request, echoSimpleTypesAsStructRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoSimpleTypesAsStructResponse.typecode)
        if isinstance(response, echoSimpleTypesAsStructResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoNestedStruct
    def echoNestedStruct(self, request):
        if isinstance(request, echoNestedStructRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoNestedStructResponse.typecode)
        if isinstance(response, echoNestedStructResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoNestedArray
    def echoNestedArray(self, request):
        if isinstance(request, echoNestedArrayRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoNestedArrayResponse.typecode)
        if isinstance(response, echoNestedArrayResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoStringArray
    def echoStringArray(self, request):
        if isinstance(request, echoStringArrayRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoStringArrayResponse.typecode)
        if isinstance(response, echoStringArrayResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoIntegerArray
    def echoIntegerArray(self, request):
        if isinstance(request, echoIntegerArrayRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoIntegerArrayResponse.typecode)
        if isinstance(response, echoIntegerArrayResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoBoolean
    def echoBoolean(self, request):
        if isinstance(request, echoBooleanRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoBooleanResponse.typecode)
        if isinstance(response, echoBooleanResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

    # op: echoString
    def echoString(self, request):
        if isinstance(request, echoStringRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://soapinterop.org/", **kw)
        # no output wsaction
        response = self.binding.Receive(echoStringResponse.typecode)
        if isinstance(response, echoStringResponse.typecode.pyclass) is False:
            raise TypeError, "%s incorrect response type" % (response.__class__)
        return response

_echoStructRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStruct"), ofwhat=[ns0.SOAPStruct_Def(pname="inputStruct", aname="_inputStruct", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStructRequest:
    typecode = _echoStructRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputStruct = None
        return
echoStructRequest.typecode.pyclass = echoStructRequest

_echoStructResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStructResponse"), ofwhat=[ns0.SOAPStruct_Def(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStructResponse:
    typecode = _echoStructResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoStructResponse.typecode.pyclass = echoStructResponse

_echoStructArrayRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStructArray"), ofwhat=[ns0.ArrayOfSOAPStruct_Def(pname="inputStructArray", aname="_inputStructArray", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStructArrayRequest:
    typecode = _echoStructArrayRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputStructArray = None
        return
echoStructArrayRequest.typecode.pyclass = echoStructArrayRequest

_echoStructArrayResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStructArrayResponse"), ofwhat=[ns0.ArrayOfSOAPStruct_Def(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStructArrayResponse:
    typecode = _echoStructArrayResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoStructArrayResponse.typecode.pyclass = echoStructArrayResponse

_echoStructAsSimpleTypesRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStructAsSimpleTypes"), ofwhat=[ns0.SOAPStruct_Def(pname="inputStruct", aname="_inputStruct", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStructAsSimpleTypesRequest:
    typecode = _echoStructAsSimpleTypesRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputStruct = None
        return
echoStructAsSimpleTypesRequest.typecode.pyclass = echoStructAsSimpleTypesRequest

_echoStructAsSimpleTypesResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStructAsSimpleTypesResponse"), ofwhat=[ZSI.TC.String(pname="outputString", aname="_outputString", encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="outputInteger", aname="_outputInteger", encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPfloat(pname="outputFloat", aname="_outputFloat", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStructAsSimpleTypesResponse:
    typecode = _echoStructAsSimpleTypesResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._outputString = None
        self._outputInteger = None
        self._outputFloat = None
        return
echoStructAsSimpleTypesResponse.typecode.pyclass = echoStructAsSimpleTypesResponse

_echoSimpleTypesAsStructRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoSimpleTypesAsStruct"), ofwhat=[ZSI.TC.String(pname="inputString", aname="_inputString", encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="inputInteger", aname="_inputInteger", encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPfloat(pname="inputFloat", aname="_inputFloat", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoSimpleTypesAsStructRequest:
    typecode = _echoSimpleTypesAsStructRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputString = None
        self._inputInteger = None
        self._inputFloat = None
        return
echoSimpleTypesAsStructRequest.typecode.pyclass = echoSimpleTypesAsStructRequest

_echoSimpleTypesAsStructResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoSimpleTypesAsStructResponse"), ofwhat=[ns0.SOAPStruct_Def(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoSimpleTypesAsStructResponse:
    typecode = _echoSimpleTypesAsStructResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoSimpleTypesAsStructResponse.typecode.pyclass = echoSimpleTypesAsStructResponse

_echoNestedStructRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoNestedStruct"), ofwhat=[ns0.SOAPStructStruct_Def(pname="inputStruct", aname="_inputStruct", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoNestedStructRequest:
    typecode = _echoNestedStructRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputStruct = None
        return
echoNestedStructRequest.typecode.pyclass = echoNestedStructRequest

_echoNestedStructResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoNestedStructResponse"), ofwhat=[ns0.SOAPStructStruct_Def(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoNestedStructResponse:
    typecode = _echoNestedStructResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoNestedStructResponse.typecode.pyclass = echoNestedStructResponse

_echoNestedArrayRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoNestedArray"), ofwhat=[ns0.SOAPArrayStruct_Def(pname="inputStruct", aname="_inputStruct", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoNestedArrayRequest:
    typecode = _echoNestedArrayRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputStruct = None
        return
echoNestedArrayRequest.typecode.pyclass = echoNestedArrayRequest

_echoNestedArrayResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoNestedArrayResponse"), ofwhat=[ns0.SOAPArrayStruct_Def(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoNestedArrayResponse:
    typecode = _echoNestedArrayResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoNestedArrayResponse.typecode.pyclass = echoNestedArrayResponse

_echoStringArrayRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStringArray"), ofwhat=[ns0.ArrayOfstring_Def(pname="inputStringArray", aname="_inputStringArray", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStringArrayRequest:
    typecode = _echoStringArrayRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputStringArray = None
        return
echoStringArrayRequest.typecode.pyclass = echoStringArrayRequest

_echoStringArrayResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStringArrayResponse"), ofwhat=[ns0.ArrayOfstring_Def(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStringArrayResponse:
    typecode = _echoStringArrayResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoStringArrayResponse.typecode.pyclass = echoStringArrayResponse

_echoIntegerArrayRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoIntegerArray"), ofwhat=[ns0.ArrayOfint_Def(pname="inputIntegerArray", aname="_inputIntegerArray", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoIntegerArrayRequest:
    typecode = _echoIntegerArrayRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputIntegerArray = None
        return
echoIntegerArrayRequest.typecode.pyclass = echoIntegerArrayRequest

_echoIntegerArrayResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoIntegerArrayResponse"), ofwhat=[ns0.ArrayOfint_Def(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoIntegerArrayResponse:
    typecode = _echoIntegerArrayResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoIntegerArrayResponse.typecode.pyclass = echoIntegerArrayResponse

_echoBooleanRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoBoolean"), ofwhat=[ZSI.TC.Boolean(pname="inputBoolean", aname="_inputBoolean", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoBooleanRequest:
    typecode = _echoBooleanRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputBoolean = None
        return
echoBooleanRequest.typecode.pyclass = echoBooleanRequest

_echoBooleanResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoBooleanResponse"), ofwhat=[ZSI.TC.Boolean(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoBooleanResponse:
    typecode = _echoBooleanResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoBooleanResponse.typecode.pyclass = echoBooleanResponse

_echoStringRequestTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoString"), ofwhat=[ZSI.TC.String(pname="inputString", aname="_inputString", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStringRequest:
    typecode = _echoStringRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._inputString = None
        return
echoStringRequest.typecode.pyclass = echoStringRequest

_echoStringResponseTypecode = Struct(pname=("http://soapbuilders.org/rpc-lit-test","echoStringResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://soapbuilders.org/rpc-lit-test")
class echoStringResponse:
    typecode = _echoStringResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
echoStringResponse.typecode.pyclass = echoStringResponse
