##################################################
# SessionCreateRQService_services_server.py
#      Generated by ZSI.generate.wsdl2dispatch.ServiceModuleWriter
#
##################################################

from SessionCreateRQService_services import *
from ZSI.ServiceContainer import ServiceSOAPBinding

class SessionCreateRQService(ServiceSOAPBinding):
    soapAction = {}
    root = {}
    _wsdl = """<?xml version=\"1.0\" ?>
<definitions targetNamespace=\"https://webservices.sabre.com/websvc\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tns=\"https://webservices.sabre.com/websvc\" xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsd1=\"http://www.opentravel.org/OTA/2002/11\" xmlns:xsd2=\"http://www.opentravel.org/OTA/2002/11\" xmlns:xsd3=\"http://www.opentravel.org/OTA/2002/08\">
	
	
	
	
	
	
	
	<message name=\"GetSessionCreateInput\">
		<part element=\"eb:MessageHeader\" name=\"header\"/>
		<part element=\"wsse:Security\" name=\"header2\"/>
		<part element=\"xsd1:SessionCreateRQ\" name=\"body\"/>
	</message>
	<message name=\"GetSessionCreateOutput\">
		<part element=\"eb:MessageHeader\" name=\"header\"/>
		<part element=\"wsse:Security\" name=\"header2\"/>
		<part element=\"xsd2:SessionCreateRS\" name=\"body\"/>
	</message>
	<portType name=\"SessionCreatePortType\">
		<operation name=\"SessionCreateRQ\">
			<input message=\"tns:GetSessionCreateInput\"/>
			<output message=\"tns:GetSessionCreateOutput\"/>
		</operation>
	</portType>
	<binding name=\"SessionCreateSoapBinding\" type=\"tns:SessionCreatePortType\">
		<soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>
		<operation name=\"SessionCreateRQ\">
			<soap:operation soapAction=\"OTA\"/>
			<input>
				<soap:header message=\"tns:GetSessionCreateInput\" part=\"header\" use=\"literal\"/>
				<soap:header message=\"tns:GetSessionCreateInput\" part=\"header2\" use=\"literal\"/>
				<soap:body parts=\"body\" use=\"literal\"/>
			</input>
			<output>
				<soap:header message=\"tns:GetSessionCreateOutput\" part=\"header\" use=\"literal\"/>
				<soap:header message=\"tns:GetSessionCreateOutput\" part=\"header2\" use=\"literal\"/>
				<soap:body parts=\"body\" use=\"literal\"/>
			</output>
		</operation>
	</binding>
	<service name=\"SessionCreateRQService\">
		<port binding=\"tns:SessionCreateSoapBinding\" name=\"SessionCreatePortType\">
			<soap:address location=\"https://webservices.sabre.com/websvc\"/>
		</port>
	</service>
<schema attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://www.opentravel.org/OTA/2002/11\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:tns=\"http://www.opentravel.org/OTA/2002/11\">
	
	

	<xs:element name=\"SessionCreateRQ\">
		<xs:complexType>
			<xs:sequence>
				<xs:element name=\"POS\">
					<xs:complexType>
						<xs:sequence>
							<xs:element name=\"Source\">
								<xs:complexType>
									<xs:attribute name=\"PseudoCityCode\" type=\"xs:string\" use=\"required\"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name=\"SessionCreateRS\">		<xs:complexType>			<xs:sequence>				<xs:element minOccurs=\"0\" name=\"Success\">					<xs:complexType/>				</xs:element>				<xs:element minOccurs=\"0\" name=\"Warnings\">					<xs:complexType>						<xs:sequence>							<xs:element name=\"Warning\">								<xs:complexType>									<xs:attribute name=\"Language\" type=\"xs:string\" use=\"optional\"/>									<xs:attribute name=\"ShortText\" type=\"xs:string\" use=\"optional\"/>									<xs:attribute name=\"Type\" type=\"xs:string\" use=\"optional\"/>									<xs:attribute name=\"Code\" use=\"optional\">										<xs:annotation>											<xs:documentation xml:lang=\"en\">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.</xs:documentation>										</xs:annotation>										<xs:simpleType>											<xs:annotation>												<xs:documentation xml:lang=\"en\">Used for codes in the OTA code tables.</xs:documentation>											</xs:annotation>											<xs:restriction base=\"xs:string\">												<xs:pattern value=\"[0-9A-Z]{1,3}\"/>											</xs:restriction>										</xs:simpleType>									</xs:attribute>									<xs:attribute name=\"DocURL\" type=\"xs:anyURI\" use=\"optional\">										<xs:annotation>											<xs:documentation xml:lang=\"en\">If present, this URL refers to an online description of the error that occurred.</xs:documentation>										</xs:annotation>									</xs:attribute>									<xs:attribute name=\"Status\" type=\"xs:string\" use=\"optional\">										<xs:annotation>											<xs:documentation xml:lang=\"en\">If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>										</xs:annotation>									</xs:attribute>									<xs:attribute name=\"Tag\" type=\"xs:string\" use=\"optional\">										<xs:annotation>											<xs:documentation xml:lang=\"en\">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>										</xs:annotation>									</xs:attribute>									<xs:attribute name=\"RecordId\" type=\"xs:string\" use=\"optional\">										<xs:annotation>											<xs:documentation xml:lang=\"en\">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records.</xs:documentation>										</xs:annotation>									</xs:attribute>								</xs:complexType>							</xs:element>						</xs:sequence>					</xs:complexType>				</xs:element>				<xs:element minOccurs=\"0\" name=\"ConversationId\" type=\"xs:string\"/>				<xs:element minOccurs=\"0\" name=\"Errors\">					<xs:complexType>						<xs:sequence>							<xs:element name=\"Error\">								<xs:complexType>									<xs:sequence>										<xs:element name=\"ErrorInfo\">											<xs:complexType>												<xs:sequence>													<xs:element name=\"Message\" type=\"xs:string\"/>												</xs:sequence>											</xs:complexType>										</xs:element>									</xs:sequence>									<xs:attribute name=\"ErrorCode\" type=\"xs:string\" use=\"required\"/>									<xs:attribute name=\"Severity\" type=\"xs:string\" use=\"required\"/>									<xs:attribute name=\"ErrorMessage\" type=\"xs:string\" use=\"required\"/>								</xs:complexType>							</xs:element>						</xs:sequence>					</xs:complexType>				</xs:element>			</xs:sequence>			<xs:attribute name=\"EchoToken\" use=\"optional\">				<xs:annotation>					<xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 										message includes an echo token the corresponding response message MUST include an echo token with an identical value.											</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:annotation>						<xs:documentation xml:lang=\"en\">Used for Character Strings, length 1 to 64</xs:documentation>					</xs:annotation>					<xs:restriction base=\"xs:string\">						<xs:minLength value=\"1\"/>						<xs:maxLength value=\"64\"/>					</xs:restriction>				</xs:simpleType>			</xs:attribute>			<xs:attribute name=\"TimeStamp\" type=\"xs:string\" use=\"optional\">				<xs:annotation>					<xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).						</xs:documentation>				</xs:annotation>			</xs:attribute>			<xs:attribute default=\"Production\" name=\"Target\" use=\"optional\">				<xs:annotation>					<xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>				</xs:annotation>				<xs:simpleType>					<xs:restriction base=\"xs:NMTOKEN\">						<xs:enumeration value=\"Test\"/>						<xs:enumeration value=\"Production\"/>					</xs:restriction>				</xs:simpleType>			</xs:attribute>			<xs:attribute name=\"version\" type=\"xs:string\" use=\"optional\">				<xs:annotation>					<xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>				</xs:annotation>			</xs:attribute>			<xs:attribute name=\"SequenceNmbr\" type=\"xs:nonNegativeInteger\" use=\"optional\">				<xs:annotation>					<xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and 	needs to 				retrieve messages that were missed. </xs:documentation>				</xs:annotation>			</xs:attribute>			<xs:attribute name=\"PrimaryLangID\" type=\"xs:language\" use=\"optional\">				<xs:annotation>					<xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>				</xs:annotation>			</xs:attribute>			<xs:attribute name=\"AltLangID\" type=\"xs:language\" use=\"optional\">				<xs:annotation>					<xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>				</xs:annotation>			</xs:attribute>			<xs:attribute name=\"status\" type=\"xs:string\" use=\"optional\"/>		</xs:complexType>	</xs:element></schema><schema attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://www.ebxml.org/namespaces/messageHeader\" version=\"2.0c\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">
	<import namespace=\"http://www.w3.org/2000/09/xmldsig#\" schemaLocation=\"xmldsig-core-schema.xsd\"/>
	<import namespace=\"http://www.w3.org/1999/xlink\" schemaLocation=\"xlink.xsd\"/>
	<import namespace=\"http://schemas.xmlsoap.org/soap/envelope/\" schemaLocation=\"envelope.xsd\"/>
	<import namespace=\"http://www.w3.org/XML/1998/namespace\" schemaLocation=\"xml.xsd\"/>
	<!-- MANIFEST, for use in soap:Body element -->
	<element name=\"Manifest\">
		<complexType>
			<sequence>
				<element maxOccurs=\"unbounded\" ref=\"tns:Reference\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:bodyExtension.grp\"/>
		</complexType>
	</element>
	<element name=\"Reference\">
		<complexType>
			<sequence>
				<element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"tns:Schema\"/>
				<element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"tns:Description\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attribute ref=\"tns:id\"/>
			<attribute fixed=\"simple\" ref=\"xlink:type\"/>
			<attribute ref=\"xlink:href\" use=\"required\"/>
			<attribute ref=\"xlink:role\"/>
			<anyAttribute namespace=\"##other\" processContents=\"lax\"/>
		</complexType>
	</element>
	<element name=\"Schema\">
		<complexType>
			<attribute name=\"location\" type=\"anyURI\" use=\"required\"/>
			<attribute name=\"version\" type=\"tns:non-empty-string\"/>
		</complexType>
	</element>
	<!-- MESSAGEHEADER, for use in soap:Header element -->
	<element name=\"MessageHeader\">
		<complexType>
			<sequence>
				<element ref=\"tns:From\"/>
				<element ref=\"tns:To\"/>
				<element ref=\"tns:CPAId\"/>
				<element ref=\"tns:ConversationId\"/>
				<element ref=\"tns:Service\"/>
				<element ref=\"tns:Action\"/>
				<element ref=\"tns:MessageData\"/>
				<element minOccurs=\"0\" ref=\"tns:DuplicateElimination\"/>
				<element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"tns:Description\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:headerExtension.grp\"/>
		</complexType>
	</element>
	<element name=\"CPAId\" type=\"tns:non-empty-string\"/>
	<element name=\"ConversationId\" type=\"tns:non-empty-string\"/>
	<element name=\"Service\">
		<complexType>
			<simpleContent>
				<extension base=\"tns:non-empty-string\">
					<attribute name=\"type\" type=\"tns:non-empty-string\"/>
				</extension>
			</simpleContent>
		</complexType>
	</element>
	<element name=\"Action\" type=\"tns:non-empty-string\"/>
	<element name=\"MessageData\">
		<complexType>
			<sequence>
				<element ref=\"tns:MessageId\"/>
				<element ref=\"tns:Timestamp\"/>
				<element minOccurs=\"0\" ref=\"tns:RefToMessageId\"/>
				<element minOccurs=\"0\" ref=\"tns:TimeToLive\"/>
			</sequence>
		</complexType>
	</element>
	<element name=\"MessageId\" type=\"tns:non-empty-string\"/>
	<element name=\"TimeToLive\" type=\"dateTime\"/>
	<element name=\"DuplicateElimination\"/>
	<!-- SYNC REPLY, for use in soap:Header element -->
	<element name=\"SyncReply\">
		<complexType>
			<sequence>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:headerExtension.grp\"/>
			<attribute ref=\"soap:actor\" use=\"required\"/>
		</complexType>
	</element>
	<!-- MESSAGE ORDER, for use in soap:Header element -->
	<element name=\"MessageOrder\">
		<complexType>
			<sequence>
				<element ref=\"tns:SequenceNumber\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:headerExtension.grp\"/>
		</complexType>
	</element>
	<element name=\"SequenceNumber\" type=\"tns:sequenceNumber.type\"/>
	<!-- ACK REQUESTED, for use in soap:Header element -->
	<element name=\"AckRequested\">
		<complexType>
			<sequence>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:headerExtension.grp\"/>
			<attribute ref=\"soap:actor\"/>
			<attribute name=\"signed\" type=\"boolean\" use=\"required\"/>
		</complexType>
	</element>
	<!-- ACKNOWLEDGMENT, for use in soap:Header element -->
	<element name=\"Acknowledgment\">
		<complexType>
			<sequence>
				<element ref=\"tns:Timestamp\"/>
				<element ref=\"tns:RefToMessageId\"/>
				<element minOccurs=\"0\" ref=\"tns:From\"/>
				<element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"tns:Reference\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:headerExtension.grp\"/>
			<attribute ref=\"soap:actor\"/>
		</complexType>
	</element>
	<!-- ERROR LIST, for use in soap:Header element -->
	<element name=\"ErrorList\">
		<complexType>
			<sequence>
				<element maxOccurs=\"unbounded\" ref=\"tns:Error\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:headerExtension.grp\"/>
			<attribute name=\"highestSeverity\" type=\"tns:severity.type\" use=\"required\"/>
		</complexType>
	</element>
	<element name=\"Error\">
		<complexType>
			<sequence>
				<element minOccurs=\"0\" ref=\"tns:Description\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attribute ref=\"tns:id\"/>
			<attribute default=\"urn:oasis:names:tc:ebxml-msg:service:errors\" name=\"codeContext\" type=\"anyURI\"/>
			<attribute name=\"errorCode\" type=\"tns:non-empty-string\" use=\"required\"/>
			<attribute name=\"severity\" type=\"tns:severity.type\" use=\"required\"/>
			<attribute name=\"location\" type=\"tns:non-empty-string\"/>
			<anyAttribute namespace=\"##other\" processContents=\"lax\"/>
		</complexType>
	</element>
	<!-- STATUS RESPONSE, for use in soap:Body element -->
	<element name=\"StatusResponse\">
		<complexType>
			<sequence>
				<element ref=\"tns:RefToMessageId\"/>
				<element minOccurs=\"0\" ref=\"tns:Timestamp\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:bodyExtension.grp\"/>
			<attribute name=\"messageStatus\" type=\"tns:messageStatus.type\" use=\"required\"/>
		</complexType>
	</element>
	<!-- STATUS REQUEST, for use in soap:Body element -->
	<element name=\"StatusRequest\">
		<complexType>
			<sequence>
				<element ref=\"tns:RefToMessageId\"/>
				<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
			</sequence>
			<attributeGroup ref=\"tns:bodyExtension.grp\"/>
		</complexType>
	</element>
	<!-- COMMON TYPES -->
	<complexType name=\"sequenceNumber.type\">
		<simpleContent>
			<extension base=\"nonNegativeInteger\">
				<attribute default=\"Continue\" name=\"status\" type=\"tns:status.type\"/>
			</extension>
		</simpleContent>
	</complexType>
	<simpleType name=\"status.type\">
		<restriction base=\"NMTOKEN\">
			<enumeration value=\"Reset\"/>
			<enumeration value=\"Continue\"/>
		</restriction>
	</simpleType>
	<simpleType name=\"messageStatus.type\">
		<restriction base=\"NMTOKEN\">
			<enumeration value=\"UnAuthorized\"/>
			<enumeration value=\"NotRecognized\"/>
			<enumeration value=\"Received\"/>
			<enumeration value=\"Processed\"/>
			<enumeration value=\"Forwarded\"/>
		</restriction>
	</simpleType>
	<simpleType name=\"non-empty-string\">
		<restriction base=\"string\">
			<minLength value=\"1\"/>
		</restriction>
	</simpleType>
	<simpleType name=\"severity.type\">
		<restriction base=\"NMTOKEN\">
			<enumeration value=\"Warning\"/>
			<enumeration value=\"Error\"/>
		</restriction>
	</simpleType>
	<!-- COMMON ATTRIBUTES and ATTRIBUTE GROUPS -->
	<attribute name=\"id\" type=\"ID\"/>
	<attribute name=\"version\" type=\"tns:non-empty-string\"/>
	<attributeGroup name=\"headerExtension.grp\">
		<attribute ref=\"tns:id\"/>
		<attribute ref=\"tns:version\" use=\"required\"/>
		<anyAttribute namespace=\"##other\" processContents=\"lax\"/>
		<!--attribute ref=\"soap:mustUnderstand\" use=\"optional\"/-->
	</attributeGroup>
	<attributeGroup name=\"bodyExtension.grp\">
		<attribute ref=\"tns:id\"/>
		<attribute ref=\"tns:version\" use=\"required\"/>
		<anyAttribute namespace=\"##other\" processContents=\"lax\"/>
	</attributeGroup>
	<!-- COMMON ELEMENTS -->
	<element name=\"PartyId\">
		<complexType>
			<simpleContent>
				<extension base=\"tns:non-empty-string\">
					<attribute name=\"type\" type=\"tns:non-empty-string\"/>
				</extension>
			</simpleContent>
		</complexType>
	</element>
	<element name=\"To\">
		<complexType>
			<sequence>
				<element maxOccurs=\"unbounded\" ref=\"tns:PartyId\"/>
				<element minOccurs=\"0\" name=\"Role\" type=\"tns:non-empty-string\"/>
			</sequence>
		</complexType>
	</element>
	<element name=\"From\">
		<complexType>
			<sequence>
				<element maxOccurs=\"unbounded\" ref=\"tns:PartyId\"/>
				<element minOccurs=\"0\" name=\"Role\" type=\"tns:non-empty-string\"/>
			</sequence>
		</complexType>
	</element>
	<element name=\"Description\">
		<complexType>
			<simpleContent>
				<extension base=\"tns:non-empty-string\">
					<attribute ref=\"xml:lang\" use=\"required\"/>
				</extension>
			</simpleContent>
		</complexType>
	</element>
	<element name=\"RefToMessageId\" type=\"tns:non-empty-string\"/>
	<element name=\"Timestamp\" type=\"string\"/>
</schema><schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.w3.org/2000/09/xmldsig#\" version=\"0.1\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">
	<!-- Basic Types Defined for Signatures -->
	<simpleType name=\"CryptoBinary\">
		<restriction base=\"base64Binary\"/>
	</simpleType>
	<!-- Start Signature -->
	<element name=\"Signature\" type=\"ds:SignatureType\"/>
	<complexType name=\"SignatureType\">
		<sequence>
			<element ref=\"ds:SignedInfo\"/>
			<element ref=\"ds:SignatureValue\"/>
			<element minOccurs=\"0\" ref=\"ds:KeyInfo\"/>
			<element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"ds:Object\"/>
		</sequence>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
	</complexType>
	<element name=\"SignatureValue\" type=\"ds:SignatureValueType\"/>
	<complexType name=\"SignatureValueType\">
		<simpleContent>
			<extension base=\"base64Binary\">
				<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
			</extension>
		</simpleContent>
	</complexType>
	<!-- Start SignedInfo -->
	<element name=\"SignedInfo\" type=\"ds:SignedInfoType\"/>
	<complexType name=\"SignedInfoType\">
		<sequence>
			<element ref=\"ds:CanonicalizationMethod\"/>
			<element ref=\"ds:SignatureMethod\"/>
			<element maxOccurs=\"unbounded\" ref=\"ds:Reference\"/>
		</sequence>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
	</complexType>
	<element name=\"CanonicalizationMethod\" type=\"ds:CanonicalizationMethodType\"/>
	<complexType mixed=\"true\" name=\"CanonicalizationMethodType\">
		<sequence>
			<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##any\"/>
			<!-- (0,unbounded) elements from (1,1) namespace -->
		</sequence>
		<attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/>
	</complexType>
	<element name=\"SignatureMethod\" type=\"ds:SignatureMethodType\"/>
	<complexType mixed=\"true\" name=\"SignatureMethodType\">
		<sequence>
			<element minOccurs=\"0\" name=\"HMACOutputLength\" type=\"ds:HMACOutputLengthType\"/>
			<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\"/>
			<!-- (0,unbounded) elements from (1,1) external namespace -->
		</sequence>
		<attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/>
	</complexType>
	<!-- Start Reference -->
	<element name=\"Reference\" type=\"ds:ReferenceType\"/>
	<complexType name=\"ReferenceType\">
		<sequence>
			<element minOccurs=\"0\" ref=\"ds:Transforms\"/>
			<element ref=\"ds:DigestMethod\"/>
			<element ref=\"ds:DigestValue\"/>
		</sequence>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
		<attribute name=\"URI\" type=\"anyURI\" use=\"optional\"/>
		<attribute name=\"Type\" type=\"anyURI\" use=\"optional\"/>
	</complexType>
	<element name=\"Transforms\" type=\"ds:TransformsType\"/>
	<complexType name=\"TransformsType\">
		<sequence>
			<element maxOccurs=\"unbounded\" ref=\"ds:Transform\"/>
		</sequence>
	</complexType>
	<element name=\"Transform\" type=\"ds:TransformType\"/>
	<complexType mixed=\"true\" name=\"TransformType\">
		<choice maxOccurs=\"unbounded\" minOccurs=\"0\">
			<any namespace=\"##other\" processContents=\"lax\"/>
			<element name=\"XPath\" type=\"string\"/>
			<!-- (1,1) elements from (0,unbounded) namespaces -->
		</choice>
		<attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/>
	</complexType>
	<!-- End Reference -->
	<element name=\"DigestMethod\" type=\"ds:DigestMethodType\"/>
	<complexType mixed=\"true\" name=\"DigestMethodType\">
		<sequence>
			<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
		</sequence>
		<attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/>
	</complexType>
	<element name=\"DigestValue\" type=\"ds:DigestValueType\"/>
	<simpleType name=\"DigestValueType\">
		<restriction base=\"base64Binary\"/>
	</simpleType>
	<!-- End SignedInfo -->
	<!-- Start KeyInfo -->
	<element name=\"KeyInfo\" type=\"ds:KeyInfoType\"/>
	<complexType mixed=\"true\" name=\"KeyInfoType\">
		<choice maxOccurs=\"unbounded\">
			<element ref=\"ds:KeyName\"/>
			<element ref=\"ds:KeyValue\"/>
			<element ref=\"ds:RetrievalMethod\"/>
			<element ref=\"ds:X509Data\"/>
			<element ref=\"ds:PGPData\"/>
			<element ref=\"ds:SPKIData\"/>
			<element ref=\"ds:MgmtData\"/>
			<any namespace=\"##other\" processContents=\"lax\"/>
			<!-- (1,1) elements from (0,unbounded) namespaces -->
		</choice>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
	</complexType>
	<element name=\"KeyName\" type=\"string\"/>
	<element name=\"MgmtData\" type=\"string\"/>
	<element name=\"KeyValue\" type=\"ds:KeyValueType\"/>
	<complexType mixed=\"true\" name=\"KeyValueType\">
		<choice>
			<element ref=\"ds:DSAKeyValue\"/>
			<element ref=\"ds:RSAKeyValue\"/>
			<any namespace=\"##other\" processContents=\"lax\"/>
		</choice>
	</complexType>
	<element name=\"RetrievalMethod\" type=\"ds:RetrievalMethodType\"/>
	<complexType name=\"RetrievalMethodType\">
		<sequence>
			<element minOccurs=\"0\" ref=\"ds:Transforms\"/>
		</sequence>
		<attribute name=\"URI\" type=\"anyURI\"/>
		<attribute name=\"Type\" type=\"anyURI\" use=\"optional\"/>
	</complexType>
	<!-- Start X509Data -->
	<element name=\"X509Data\" type=\"ds:X509DataType\"/>
	<complexType name=\"X509DataType\">
		<sequence maxOccurs=\"unbounded\">
			<choice>
				<element name=\"X509IssuerSerial\" type=\"ds:X509IssuerSerialType\"/>
				<element name=\"X509SKI\" type=\"base64Binary\"/>
				<element name=\"X509SubjectName\" type=\"string\"/>
				<element name=\"X509Certificate\" type=\"base64Binary\"/>
				<element name=\"X509CRL\" type=\"base64Binary\"/>
				<any namespace=\"##other\" processContents=\"lax\"/>
			</choice>
		</sequence>
	</complexType>
	<complexType name=\"X509IssuerSerialType\">
		<sequence>
			<element name=\"X509IssuerName\" type=\"string\"/>
			<element name=\"X509SerialNumber\" type=\"integer\"/>
		</sequence>
	</complexType>
	<!-- End X509Data -->
	<!-- Begin PGPData -->
	<element name=\"PGPData\" type=\"ds:PGPDataType\"/>
	<complexType name=\"PGPDataType\">
		<sequence>
			<element name=\"PGPKeyID\" type=\"base64Binary\"/>
			<element minOccurs=\"0\" name=\"PGPKeyPacket\" type=\"base64Binary\"/>
			<any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
		</sequence>
	</complexType>
	<!-- End PGPData -->
	<!-- Begin SPKIData -->
	<element name=\"SPKIData\" type=\"ds:SPKIDataType\"/>
	<complexType name=\"SPKIDataType\">
		<sequence maxOccurs=\"unbounded\">
			<element name=\"SPKISexp\" type=\"base64Binary\"/>
			<any minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
		</sequence>
	</complexType>
	<!-- End SPKIData -->
	<!-- End KeyInfo -->
	<!-- Start Object (Manifest, SignatureProperty) -->
	<element name=\"Object\" type=\"ds:ObjectType\"/>
	<complexType mixed=\"true\" name=\"ObjectType\">
		<sequence maxOccurs=\"unbounded\" minOccurs=\"0\">
			<any namespace=\"##any\" processContents=\"lax\"/>
		</sequence>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
		<attribute name=\"MimeType\" type=\"string\" use=\"optional\"/>
		<attribute name=\"Encoding\" type=\"anyURI\" use=\"optional\"/>
		<!-- add a grep facet -->
	</complexType>
	<element name=\"Manifest\" type=\"ds:ManifestType\"/>
	<complexType name=\"ManifestType\">
		<sequence>
			<element maxOccurs=\"unbounded\" ref=\"ds:Reference\"/>
		</sequence>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
	</complexType>
	<element name=\"SignatureProperties\" type=\"ds:SignaturePropertiesType\"/>
	<complexType name=\"SignaturePropertiesType\">
		<sequence>
			<element maxOccurs=\"unbounded\" ref=\"ds:SignatureProperty\"/>
		</sequence>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
	</complexType>
	<element name=\"SignatureProperty\" type=\"ds:SignaturePropertyType\"/>
	<complexType mixed=\"true\" name=\"SignaturePropertyType\">
		<choice maxOccurs=\"unbounded\">
			<any namespace=\"##other\" processContents=\"lax\"/>
			<!-- (1,1) elements from (1,unbounded) namespaces -->
		</choice>
		<attribute name=\"Target\" type=\"anyURI\" use=\"required\"/>
		<attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
	</complexType>
	<!-- End Object (Manifest, SignatureProperty) -->
	<!-- Start Algorithm Parameters -->
	<simpleType name=\"HMACOutputLengthType\">
		<restriction base=\"integer\"/>
	</simpleType>
	<!-- Start KeyValue Element-types -->
	<element name=\"DSAKeyValue\" type=\"ds:DSAKeyValueType\"/>
	<complexType name=\"DSAKeyValueType\">
		<sequence>
			<sequence minOccurs=\"0\">
				<element name=\"P\" type=\"ds:CryptoBinary\"/>
				<element name=\"Q\" type=\"ds:CryptoBinary\"/>
			</sequence>
			<element minOccurs=\"0\" name=\"G\" type=\"ds:CryptoBinary\"/>
			<element name=\"Y\" type=\"ds:CryptoBinary\"/>
			<element minOccurs=\"0\" name=\"J\" type=\"ds:CryptoBinary\"/>
			<sequence minOccurs=\"0\">
				<element name=\"Seed\" type=\"ds:CryptoBinary\"/>
				<element name=\"PgenCounter\" type=\"ds:CryptoBinary\"/>
			</sequence>
		</sequence>
	</complexType>
	<element name=\"RSAKeyValue\" type=\"ds:RSAKeyValueType\"/>
	<complexType name=\"RSAKeyValueType\">
		<sequence>
			<element name=\"Modulus\" type=\"ds:CryptoBinary\"/>
			<element name=\"Exponent\" type=\"ds:CryptoBinary\"/>
		</sequence>
	</complexType>
	<!-- End KeyValue Element-types -->
	<!-- End Signature -->
</schema><xsd:schema attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://www.w3.org/1999/xlink\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">
	<xsd:element name=\"root\">
		<xsd:annotation>
			<xsd:documentation>Comment describing your root element</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:attribute name=\"type\">
	<xsd:simpleType>
		<xsd:restriction base=\"xsd:NMTOKEN\">
			<xsd:enumeration value=\"simple\"/>
			<xsd:enumeration value=\"extended\"/>
			<xsd:enumeration value=\"locator\"/>
			<xsd:enumeration value=\"arc\"/>
			<xsd:enumeration value=\"resource\"/>
			<xsd:enumeration value=\"title\"/>
			<xsd:enumeration value=\"none\"/>
		</xsd:restriction>
	</xsd:simpleType>
	</xsd:attribute>
	<xsd:attribute name=\"href\" type=\"xsd:anyURI\">
	</xsd:attribute>
	<xsd:attribute name=\"role\" type=\"xsd:anyURI\">
	</xsd:attribute>
	<xsd:attribute name=\"arcrole\" type=\"xsd:anyURI\">
	</xsd:attribute>
	<xsd:attribute name=\"title\" type=\"xsd:string\">
	</xsd:attribute>
	<xsd:attribute name=\"label\" type=\"xsd:NMTOKEN\">
	</xsd:attribute>
	<xsd:attribute name=\"show\">
		<xsd:simpleType>
			<xsd:restriction base=\"xsd:NMTOKEN\">
				<xsd:enumeration value=\"new\"/>
				<xsd:enumeration value=\"replace\"/>
				<xsd:enumeration value=\"embed\"/>
				<xsd:enumeration value=\"other\"/>
				<xsd:enumeration value=\"none\"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
</xsd:schema><schema targetNamespace=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:tns=\"http://schemas.xmlsoap.org/soap/envelope/\">
	

	<!-- Envelope, header and body -->
	<xs:element name=\"Envelope\" type=\"tns:Envelope\"/>
	<xs:complexType name=\"Envelope\">
		<xs:sequence>
			<xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"tns:Header\"/>
			<xs:element ref=\"tns:Body\"/>
			<xs:any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
		</xs:sequence>
		<xs:anyAttribute namespace=\"##other\" processContents=\"lax\"/>
	</xs:complexType>
	<xs:element name=\"Header\" type=\"tns:Header\"/>
	<xs:complexType name=\"Header\">
		<xs:sequence>
			<xs:any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>
		</xs:sequence>
		<xs:anyAttribute namespace=\"##other\" processContents=\"lax\"/>
	</xs:complexType>
	<xs:element name=\"Body\" type=\"tns:Body\"/>
	<xs:complexType name=\"Body\">
		<xs:sequence>
			<xs:any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##any\" processContents=\"lax\"/>
		</xs:sequence>
		<xs:anyAttribute namespace=\"##any\" processContents=\"lax\">
			<xs:annotation>
				<xs:documentation>
		  Prose in the spec does not specify that attributes are allowed on the Body element
		</xs:documentation>
			</xs:annotation>
		</xs:anyAttribute>
	</xs:complexType>
	<!-- Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.  -->
	<xs:attribute name=\"mustUnderstand\">
		<xs:simpleType>
			<xs:restriction base=\"xs:boolean\">
				<xs:pattern value=\"0|1\"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:attribute>
	<xs:attribute name=\"actor\" type=\"xs:anyURI\"/>
	<xs:simpleType name=\"encodingStyle\">
		<xs:annotation>
			<xs:documentation>
	    'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification
	  </xs:documentation>
		</xs:annotation>
		<xs:list itemType=\"xs:anyURI\"/>
	</xs:simpleType>
	<xs:attribute name=\"encodingStyle\" type=\"tns:encodingStyle\"/>
	<xs:attributeGroup name=\"encodingStyle\">
		<xs:attribute ref=\"tns:encodingStyle\"/>
	</xs:attributeGroup>
	<xs:element name=\"Fault\" type=\"tns:Fault\"/>
	<xs:complexType final=\"extension\" name=\"Fault\">
		<xs:annotation>
			<xs:documentation>
	    Fault reporting structure
	  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name=\"faultcode\" type=\"xs:QName\"/>
			<xs:element name=\"faultstring\" type=\"xs:string\"/>
			<xs:element minOccurs=\"0\" name=\"faultactor\" type=\"xs:anyURI\"/>
			<xs:element minOccurs=\"0\" name=\"detail\" type=\"tns:detail\"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name=\"detail\">
		<xs:sequence>
			<xs:any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##any\" processContents=\"lax\"/>
		</xs:sequence>
		<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>
	</xs:complexType>
</schema><xs:schema targetNamespace=\"http://www.w3.org/XML/1998/namespace\" xml:lang=\"en\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">
	<xs:annotation>
		<xs:documentation>
   See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.
  </xs:documentation>
	</xs:annotation>
	<xs:annotation>
		<xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .&gt;
         . . .
         &lt;import namespace=&quot;http://www.w3.org/XML/1998/namespace&quot;
                    schemaLocation=&quot;http://www.w3.org/2001/03/xml.xsd&quot;/&gt;

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .&gt;
         . . .
         &lt;attributeGroup ref=&quot;xml:specialAttrs&quot;/&gt;
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
	</xs:annotation>
	<xs:annotation>
		<xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.
  </xs:documentation>
	</xs:annotation>
	<xs:attribute name=\"lang\" type=\"xs:language\">
		<xs:annotation>
			<xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:attribute default=\"preserve\" name=\"space\">
		<xs:simpleType>
			<xs:restriction base=\"xs:NCName\">
				<xs:enumeration value=\"default\"/>
				<xs:enumeration value=\"preserve\"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:attribute>
	<xs:attribute name=\"base\" type=\"xs:anyURI\">
		<xs:annotation>
			<xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:attributeGroup name=\"specialAttrs\">
		<xs:attribute ref=\"xml:base\"/>
		<xs:attribute ref=\"xml:lang\"/>
		<xs:attribute ref=\"xml:space\"/>
	</xs:attributeGroup>
</xs:schema><xs:schema attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:app2=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">
	<xs:element msdata:Prefix=\"wsse\" name=\"Security\">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs=\"0\" msdata:Prefix=\"wsse\" name=\"UsernameToken\">
					<xs:complexType>
						<xs:sequence>
							<xs:element minOccurs=\"0\" msdata:Prefix=\"wsse\" name=\"Username\" type=\"xs:string\"/>
							<xs:element minOccurs=\"0\" msdata:Prefix=\"wsse\" name=\"Password\" type=\"xs:string\"/>
							<xs:element form=\"unqualified\" minOccurs=\"0\" name=\"Organization\" type=\"xs:string\"/>
							<xs:element form=\"unqualified\" minOccurs=\"0\" name=\"Domain\" type=\"xs:string\"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element minOccurs=\"0\" msdata:Prefix=\"wsse\" name=\"BinarySecurityToken\" type=\"xs:string\">
					<!--xs:complexType>
						<xs:attribute name=\"EncodingType\" type=\"xs:string\" use=\"optional\"/>
						<xs:attribute name=\"valueType\" type=\"xs:string\" use=\"optional\"/>						
					</xs:complexType-->
				</xs:element>
				<!-- Response Elements -->
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema></definitions>"""

    def __init__(self, post='/websvc', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_SessionCreateRQ(self, ps):
        self.request = ps.Parse(GetSessionCreateInput.typecode)
        return GetSessionCreateOutput()

    soapAction['OTA'] = 'soap_SessionCreateRQ'
    root[(GetSessionCreateInput.typecode.nspname,GetSessionCreateInput.typecode.pname)] = 'soap_SessionCreateRQ'

