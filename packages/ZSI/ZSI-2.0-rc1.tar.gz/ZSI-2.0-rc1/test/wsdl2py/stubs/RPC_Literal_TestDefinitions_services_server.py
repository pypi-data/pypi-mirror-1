##################################################
# RPC_Literal_TestDefinitions_services_server.py
#      Generated by ZSI.generate.wsdl2dispatch.ServiceModuleWriter
#
##################################################

from RPC_Literal_TestDefinitions_services import *
from ZSI.ServiceContainer import ServiceSOAPBinding

class WhiteMesaSoapRpcLitTestSvc(ServiceSOAPBinding):
    soapAction = {}
    root = {}
    _wsdl = """<?xml version=\"1.0\" ?>
<definitions name=\"RPC-Literal-TestDefinitions\" targetNamespace=\"http://whitemesa.net/wsdl/rpc-lit-test\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:soap11=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:tns=\"http://whitemesa.net/wsdl/rpc-lit-test\" xmlns:types=\"http://soapbuilders.org/rpc-lit-test/types\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">
	<types>
		<schema targetNamespace=\"http://soapbuilders.org/rpc-lit-test/types\" xmlns=\"http://www.w3.org/2001/XMLSchema\">

            <element name=\"stringItem\" type=\"xsd:string\"/>
			<complexType name=\"ArrayOfstring\">
				<sequence>
					<element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"types:stringItem\"/>
				</sequence>
			</complexType>

			<complexType name=\"ArrayOfint\">
				<sequence>
					<element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"integer\" type=\"xsd:int\"/>
				</sequence>
			</complexType>

            <element name=\"structItem\" type=\"types:SOAPStruct\"/>
			<complexType name=\"SOAPStruct\">
				<all>
					<element name=\"varString\" type=\"xsd:string\"/>
					<element name=\"varInt\" type=\"xsd:int\"/>
					<element name=\"varFloat\" type=\"xsd:float\"/>
				</all>
			</complexType>
			
			<complexType name=\"ArrayOfSOAPStruct\">
				<sequence>
					<element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"types:structItem\"/>
				</sequence>
			</complexType>

			<complexType name=\"SOAPStructStruct\">
				<all>
					<element name=\"varString\" type=\"xsd:string\"/>
					<element name=\"varInt\" type=\"xsd:int\"/>
					<element name=\"varFloat\" type=\"xsd:float\"/>
					<element ref=\"types:structItem\"/>
				</all>
			</complexType>

			<complexType name=\"SOAPArrayStruct\">
				<all>
					<element name=\"varString\" type=\"xsd:string\"/>
					<element name=\"varInt\" type=\"xsd:int\"/>
					<element name=\"varFloat\" type=\"xsd:float\"/>
					<element name=\"varArray\" type=\"types:ArrayOfstring\"/>
				</all>
			</complexType>

		</schema>

	</types>

	<!-- echoStruct rpc operation -->
	<message name=\"echoStructRequest\">
		<part name=\"inputStruct\" type=\"types:SOAPStruct\"/>
	</message>
	<message name=\"echoStructResponse\">
		<part name=\"return\" type=\"types:SOAPStruct\"/>
	</message>

	<!-- echoStructArray rpc operation -->
	<message name=\"echoStructArrayRequest\">
		<part name=\"inputStructArray\" type=\"types:ArrayOfSOAPStruct\"/>
	</message>
	<message name=\"echoStructArrayResponse\">
		<part name=\"return\" type=\"types:ArrayOfSOAPStruct\"/>
	</message>

	<!-- echoStructAsSimpleTypes rpc operation -->
	<message name=\"echoStructAsSimpleTypesRequest\">
		<part name=\"inputStruct\" type=\"types:SOAPStruct\"/>
	</message>
	<message name=\"echoStructAsSimpleTypesResponse\">
		<part name=\"outputString\" type=\"xsd:string\"/>
		<part name=\"outputInteger\" type=\"xsd:int\"/>
		<part name=\"outputFloat\" type=\"xsd:float\"/>
	</message>

	<!-- echoSimpleTypesAsStruct rpc operation -->
	<message name=\"echoSimpleTypesAsStructRequest\">
		<part name=\"inputString\" type=\"xsd:string\"/>
		<part name=\"inputInteger\" type=\"xsd:int\"/>
		<part name=\"inputFloat\" type=\"xsd:float\"/>
	</message>
	<message name=\"echoSimpleTypesAsStructResponse\">
		<part name=\"return\" type=\"types:SOAPStruct\"/>
	</message>

	<!-- echoNestedStruct rpc operation -->
	<message name=\"echoNestedStructRequest\">
		<part name=\"inputStruct\" type=\"types:SOAPStructStruct\"/>
	</message>
	<message name=\"echoNestedStructResponse\">
		<part name=\"return\" type=\"types:SOAPStructStruct\"/>
	</message>

	<!-- echoNestedArray rpc operation -->
	<message name=\"echoNestedArrayRequest\">
		<part name=\"inputStruct\" type=\"types:SOAPArrayStruct\"/>
	</message>
	<message name=\"echoNestedArrayResponse\">
		<part name=\"return\" type=\"types:SOAPArrayStruct\"/>
	</message>

	<!-- echoStringArray rpc operation -->
	<message name=\"echoStringArrayRequest\">
		<part name=\"inputStringArray\" type=\"types:ArrayOfstring\"/>
	</message>
	<message name=\"echoStringArrayResponse\">
		<part name=\"return\" type=\"types:ArrayOfstring\"/>
	</message>

	<!-- echoIntegerArray rpc operation -->
	<message name=\"echoIntegerArrayRequest\">
		<part name=\"inputIntegerArray\" type=\"types:ArrayOfint\"/>
	</message>
	<message name=\"echoIntegerArrayResponse\">
		<part name=\"return\" type=\"types:ArrayOfint\"/>
	</message>

	<!-- echoBoolean rpc operation -->
	<message name=\"echoBooleanRequest\">
		<part name=\"inputBoolean\" type=\"xsd:boolean\"/>
	</message>
	<message name=\"echoBooleanResponse\">
		<part name=\"return\" type=\"xsd:boolean\"/>
	</message>

	<!-- echoString rpc operation -->
	<message name=\"echoStringRequest\">
		<part name=\"inputString\" type=\"xsd:string\"/>
	</message>
	<message name=\"echoStringResponse\">
		<part name=\"return\" type=\"xsd:string\"/>
	</message>


	<portType name=\"SoapTestPortTypeRpc\">

		<!-- echoStruct rpc operation -->
		<operation name=\"echoStruct\" parameterOrder=\"inputStruct\">
			<input message=\"tns:echoStructRequest\"/>
			<output message=\"tns:echoStructResponse\"/>
		</operation>

		<!-- echoStructArray rpc operation -->
		<operation name=\"echoStructArray\" parameterOrder=\"inputStructArray\">
			<input message=\"tns:echoStructArrayRequest\"/>
			<output message=\"tns:echoStructArrayResponse\"/>
		</operation>

		<!-- echoStructAsSimpleTypes rpc operation -->
		<operation name=\"echoStructAsSimpleTypes\" parameterOrder=\"inputStruct outputString outputInteger outputFloat\">
			<input message=\"tns:echoStructAsSimpleTypesRequest\"/>
			<output message=\"tns:echoStructAsSimpleTypesResponse\"/>
		</operation>

		<!-- echoSimpleTypesAsStruct rpc operation -->
		<operation name=\"echoSimpleTypesAsStruct\" parameterOrder=\"inputString inputInteger inputFloat\">
			<input message=\"tns:echoSimpleTypesAsStructRequest\"/>
			<output message=\"tns:echoSimpleTypesAsStructResponse\"/>
		</operation>

		<!-- echoNestedStruct rpc operation -->
		<operation name=\"echoNestedStruct\" parameterOrder=\"inputStruct\">
			<input message=\"tns:echoNestedStructRequest\"/>
			<output message=\"tns:echoNestedStructResponse\"/>
		</operation>

		<!-- echoNestedArray rpc operation -->
		<operation name=\"echoNestedArray\" parameterOrder=\"inputStruct\">
			<input message=\"tns:echoNestedArrayRequest\"/>
			<output message=\"tns:echoNestedArrayResponse\"/>
		</operation>

		<!-- echoStringArray rpc operation -->
		<operation name=\"echoStringArray\" parameterOrder=\"inputStringArray\">
			<input message=\"tns:echoStringArrayRequest\"/>
			<output message=\"tns:echoStringArrayResponse\"/>
		</operation>

		<!-- echoIntegerArray rpc operation -->
		<operation name=\"echoIntegerArray\" parameterOrder=\"inputIntegerArray\">
			<input message=\"tns:echoIntegerArrayRequest\"/>
			<output message=\"tns:echoIntegerArrayResponse\"/>
		</operation>

		<!-- echoBoolean rpc operation -->
		<operation name=\"echoBoolean\" parameterOrder=\"inputBoolean\">
			<input message=\"tns:echoBooleanRequest\"/>
			<output message=\"tns:echoBooleanResponse\"/>
		</operation>

		<!-- echoString rpc operation -->
		<operation name=\"echoString\" parameterOrder=\"inputString\">
			<input message=\"tns:echoStringRequest\"/>
			<output message=\"tns:echoStringResponse\"/>
		</operation>

	</portType>

	<binding name=\"Soap11TestRpcLitBinding\" type=\"tns:SoapTestPortTypeRpc\">
		<soap11:binding style=\"rpc\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>

		<!-- echoStruct rpc operation -->
		<operation name=\"echoStruct\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!--  echoStructArray rpc operation -->
		<operation name=\"echoStructArray\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoStructAsSimpleTypes rpc operation -->
		<operation name=\"echoStructAsSimpleTypes\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoSimpleTypesAsStruct rpc operation -->
		<operation name=\"echoSimpleTypesAsStruct\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoNestedStruct rpc operation -->
		<operation name=\"echoNestedStruct\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoNestedArray rpc operation -->
		<operation name=\"echoNestedArray\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoStringArray rpc operation -->
		<operation name=\"echoStringArray\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoIntegerArray rpc operation -->
		<operation name=\"echoIntegerArray\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoBoolean rpc operation -->
		<operation name=\"echoBoolean\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoString rpc operation -->
		<operation name=\"echoString\">
			<soap11:operation soapAction=\"http://soapinterop.org/\"/>
			<input>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap11:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

	</binding>

	<binding name=\"Soap12TestRpcLitBinding\" type=\"tns:SoapTestPortTypeRpc\">
		<soap12:binding style=\"rpc\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>

		<!-- echoStruct rpc operation -->
		<operation name=\"echoStruct\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!--  echoStructArray rpc operation -->
		<operation name=\"echoStructArray\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoStructAsSimpleTypes rpc operation -->
		<operation name=\"echoStructAsSimpleTypes\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoSimpleTypesAsStruct rpc operation -->
		<operation name=\"echoSimpleTypesAsStruct\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoNestedStruct rpc operation -->
		<operation name=\"echoNestedStruct\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoNestedArray rpc operation -->
		<operation name=\"echoNestedArray\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoStringArray rpc operation -->
		<operation name=\"echoStringArray\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoIntegerArray rpc operation -->
		<operation name=\"echoIntegerArray\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoBoolean rpc operation -->
		<operation name=\"echoBoolean\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

		<!-- echoString rpc operation -->
		<operation name=\"echoString\">
			<soap12:operation/>
			<input>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</input>
			<output>
				<soap12:body namespace=\"http://soapbuilders.org/rpc-lit-test\" use=\"literal\"/>
			</output>
		</operation>

	</binding>

	<service name=\"WhiteMesaSoapRpcLitTestSvc\">

  		<port binding=\"tns:Soap12TestRpcLitBinding\" name=\"Soap12TestRpcLitPort\">
    			<soap12:address location=\"http://www.whitemesa.net/soap12/test-rpc-lit\"/>
  		</port>
  		<port binding=\"tns:Soap11TestRpcLitBinding\" name=\"Soap11TestRpcLitPort\">
    			<soap11:address location=\"http://www.whitemesa.net/test-rpc-lit\"/>
  		</port>

	</service>

</definitions>"""

    def __init__(self, post='/test-rpc-lit', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_echoStruct(self, ps):
        self.request = ps.Parse(echoStructRequest.typecode)
        return echoStructResponse()

    soapAction[''] = 'soap_echoStruct'
    root[(echoStructRequest.typecode.nspname,echoStructRequest.typecode.pname)] = 'soap_echoStruct'

    def soap_echoStructArray(self, ps):
        self.request = ps.Parse(echoStructArrayRequest.typecode)
        return echoStructArrayResponse()

    soapAction[''] = 'soap_echoStructArray'
    root[(echoStructArrayRequest.typecode.nspname,echoStructArrayRequest.typecode.pname)] = 'soap_echoStructArray'

    def soap_echoStructAsSimpleTypes(self, ps):
        self.request = ps.Parse(echoStructAsSimpleTypesRequest.typecode)
        return echoStructAsSimpleTypesResponse()

    soapAction[''] = 'soap_echoStructAsSimpleTypes'
    root[(echoStructAsSimpleTypesRequest.typecode.nspname,echoStructAsSimpleTypesRequest.typecode.pname)] = 'soap_echoStructAsSimpleTypes'

    def soap_echoSimpleTypesAsStruct(self, ps):
        self.request = ps.Parse(echoSimpleTypesAsStructRequest.typecode)
        return echoSimpleTypesAsStructResponse()

    soapAction[''] = 'soap_echoSimpleTypesAsStruct'
    root[(echoSimpleTypesAsStructRequest.typecode.nspname,echoSimpleTypesAsStructRequest.typecode.pname)] = 'soap_echoSimpleTypesAsStruct'

    def soap_echoNestedStruct(self, ps):
        self.request = ps.Parse(echoNestedStructRequest.typecode)
        return echoNestedStructResponse()

    soapAction[''] = 'soap_echoNestedStruct'
    root[(echoNestedStructRequest.typecode.nspname,echoNestedStructRequest.typecode.pname)] = 'soap_echoNestedStruct'

    def soap_echoNestedArray(self, ps):
        self.request = ps.Parse(echoNestedArrayRequest.typecode)
        return echoNestedArrayResponse()

    soapAction[''] = 'soap_echoNestedArray'
    root[(echoNestedArrayRequest.typecode.nspname,echoNestedArrayRequest.typecode.pname)] = 'soap_echoNestedArray'

    def soap_echoStringArray(self, ps):
        self.request = ps.Parse(echoStringArrayRequest.typecode)
        return echoStringArrayResponse()

    soapAction[''] = 'soap_echoStringArray'
    root[(echoStringArrayRequest.typecode.nspname,echoStringArrayRequest.typecode.pname)] = 'soap_echoStringArray'

    def soap_echoIntegerArray(self, ps):
        self.request = ps.Parse(echoIntegerArrayRequest.typecode)
        return echoIntegerArrayResponse()

    soapAction[''] = 'soap_echoIntegerArray'
    root[(echoIntegerArrayRequest.typecode.nspname,echoIntegerArrayRequest.typecode.pname)] = 'soap_echoIntegerArray'

    def soap_echoBoolean(self, ps):
        self.request = ps.Parse(echoBooleanRequest.typecode)
        return echoBooleanResponse()

    soapAction[''] = 'soap_echoBoolean'
    root[(echoBooleanRequest.typecode.nspname,echoBooleanRequest.typecode.pname)] = 'soap_echoBoolean'

    def soap_echoString(self, ps):
        self.request = ps.Parse(echoStringRequest.typecode)
        return echoStringResponse()

    soapAction[''] = 'soap_echoString'
    root[(echoStringRequest.typecode.nspname,echoStringRequest.typecode.pname)] = 'soap_echoString'

    def soap_echoStruct(self, ps):
        self.request = ps.Parse(echoStructRequest.typecode)
        return echoStructResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoStruct'
    root[(echoStructRequest.typecode.nspname,echoStructRequest.typecode.pname)] = 'soap_echoStruct'

    def soap_echoStructArray(self, ps):
        self.request = ps.Parse(echoStructArrayRequest.typecode)
        return echoStructArrayResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoStructArray'
    root[(echoStructArrayRequest.typecode.nspname,echoStructArrayRequest.typecode.pname)] = 'soap_echoStructArray'

    def soap_echoStructAsSimpleTypes(self, ps):
        self.request = ps.Parse(echoStructAsSimpleTypesRequest.typecode)
        return echoStructAsSimpleTypesResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoStructAsSimpleTypes'
    root[(echoStructAsSimpleTypesRequest.typecode.nspname,echoStructAsSimpleTypesRequest.typecode.pname)] = 'soap_echoStructAsSimpleTypes'

    def soap_echoSimpleTypesAsStruct(self, ps):
        self.request = ps.Parse(echoSimpleTypesAsStructRequest.typecode)
        return echoSimpleTypesAsStructResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoSimpleTypesAsStruct'
    root[(echoSimpleTypesAsStructRequest.typecode.nspname,echoSimpleTypesAsStructRequest.typecode.pname)] = 'soap_echoSimpleTypesAsStruct'

    def soap_echoNestedStruct(self, ps):
        self.request = ps.Parse(echoNestedStructRequest.typecode)
        return echoNestedStructResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoNestedStruct'
    root[(echoNestedStructRequest.typecode.nspname,echoNestedStructRequest.typecode.pname)] = 'soap_echoNestedStruct'

    def soap_echoNestedArray(self, ps):
        self.request = ps.Parse(echoNestedArrayRequest.typecode)
        return echoNestedArrayResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoNestedArray'
    root[(echoNestedArrayRequest.typecode.nspname,echoNestedArrayRequest.typecode.pname)] = 'soap_echoNestedArray'

    def soap_echoStringArray(self, ps):
        self.request = ps.Parse(echoStringArrayRequest.typecode)
        return echoStringArrayResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoStringArray'
    root[(echoStringArrayRequest.typecode.nspname,echoStringArrayRequest.typecode.pname)] = 'soap_echoStringArray'

    def soap_echoIntegerArray(self, ps):
        self.request = ps.Parse(echoIntegerArrayRequest.typecode)
        return echoIntegerArrayResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoIntegerArray'
    root[(echoIntegerArrayRequest.typecode.nspname,echoIntegerArrayRequest.typecode.pname)] = 'soap_echoIntegerArray'

    def soap_echoBoolean(self, ps):
        self.request = ps.Parse(echoBooleanRequest.typecode)
        return echoBooleanResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoBoolean'
    root[(echoBooleanRequest.typecode.nspname,echoBooleanRequest.typecode.pname)] = 'soap_echoBoolean'

    def soap_echoString(self, ps):
        self.request = ps.Parse(echoStringRequest.typecode)
        return echoStringResponse()

    soapAction['http://soapinterop.org/'] = 'soap_echoString'
    root[(echoStringRequest.typecode.nspname,echoStringRequest.typecode.pname)] = 'soap_echoString'

