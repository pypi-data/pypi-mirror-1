#!/usr/bin/env python
"""
install.py

This script provides a general installation interface for the genomedata
package. It is designed to be downloaded separately from the genomedata
source. Upon execution, it interacts with the user to setup easy_install,
download and install the necessary dependencies, and download and install
genomedata.

(c) 2009: Orion Buske <orion.buske@gmail.com>
"""

${COMMON_CODE_HEADER}

MIN_GENOMEDATA_VERSION = "0.1.6"

${COMMON_CODE_BODY}

############################## MAIN #########################
def main(args=sys.argv[1:]):
    # Set up shell details
    try:
        shell_name = os.path.basename(os.environ["SHELL"])
    except KeyError:
        shell_name = None
    shell = ShellManager(shell_name)

    try:
        arch_home = setup_arch_home()

        python_home, default_python_home = setup_python_home(arch_home)
        # Add python_home to PYTHONPATH
        prompt_add_to_env(shell, "PYTHONPATH", python_home)

        script_home, default_script_home = setup_script_home(arch_home)
        # Add script_home to PATH
        prompt_add_to_env(shell, "PATH", script_home)

        # Maybe create pydistutils.cfg
        prompt_create_cfg(arch_home, python_home, default_python_home,
                          script_home, default_script_home)

        hdf5_dir = setup_hdf5_installation(shell, arch_home)

        prompt_install_numpy()

        prompt_install_genomedata()

        # Done: Test package installations?
        prompt_test_packages(python_home)

        print >>sys.stderr, "Installation complete"

    finally:  # Clean up
        shell.close()

########################### GET VERSION ########################
def get_genomedata_version():
    """Returns Genomedata version as a string or None if not found or installed

    Temporarily removes '.' from sys.path during installation to prevent
    finding genomedata in current directory (but uninstalled)

    Since genomedata __version__ is currently a revision number, get the full
    number from pkg_resources
    """
    dir = os.getcwd()
    index = None
    if dir in sys.path:
        index = sys.path.index(dir)
        del sys.path[index]

    try:
        try:
            ref = pkg_resources.Requirement.parse("genomedata")
            data = pkg_resources.working_set.find(ref)
            return data.version
        except (AttributeError, ImportError):
            return None
    finally:
        if index is not None:
            sys.path.insert(index, dir)

##################### SPECIFIC PROGRAM INSTALLERS ################
def prompt_install_genomedata(min_version=MIN_GENOMEDATA_VERSION):
    return _installer("genomedata", install_genomedata,
                      get_genomedata_version,
                      install_prompt = EASY_INSTALL_PROMPT,
                      min_version=min_version)

def install_genomedata(min_version=MIN_GENOMEDATA_VERSION, *args, **kwargs):
    return easy_install("genomedata", min_version=min_version)


if __name__ == "__main__":
    sys.exit(main())

