# generated by 'xml2py'
# flags 'gl.xml -kfed -l libGL.so -o simple.py'
from OpenGL import platform, arrays
from OpenGL import constants as GLconstants
import ctypes
GLfloat = ctypes.c_float
GLclampf = ctypes.c_float
GLbitfield = ctypes.c_uint
GLuint = ctypes.c_uint
GLboolean = ctypes.c_ubyte
GLenum = ctypes.c_uint
GLint = ctypes.c_int
GLushort = ctypes.c_ushort
GLubyte = ctypes.c_ubyte
GLsizei = ctypes.c_int
GLdouble = ctypes.c_double
GLclampd = ctypes.c_double
GLshort = ctypes.c_short
GLbyte = ctypes.c_byte
POINTER = ctypes.POINTER


# /usr/include/GL/gl.h 764
glClearIndex = platform.createBaseFunction( 
	'glClearIndex', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glClearIndex( GLfloat(c) ) -> None', 
	argNames=('c',),
)

# /usr/include/GL/gl.h 766
glClearColor = platform.createBaseFunction( 
	'glClearColor', dll=platform.GL, resultType=None, 
	argTypes=[GLclampf, GLclampf, GLclampf, GLclampf],
	doc='glClearColor( GLclampf(red), GLclampf(green), GLclampf(blue), GLclampf(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 768
glClear = platform.createBaseFunction( 
	'glClear', dll=platform.GL, resultType=None, 
	argTypes=[GLbitfield],
	doc='glClear( GLbitfield(mask) ) -> None', 
	argNames=('mask',),
)

# /usr/include/GL/gl.h 770
glIndexMask = platform.createBaseFunction( 
	'glIndexMask', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glIndexMask( GLuint(mask) ) -> None', 
	argNames=('mask',),
)

# /usr/include/GL/gl.h 772
glColorMask = platform.createBaseFunction( 
	'glColorMask', dll=platform.GL, resultType=None, 
	argTypes=[GLboolean, GLboolean, GLboolean, GLboolean],
	doc='glColorMask( GLboolean(red), GLboolean(green), GLboolean(blue), GLboolean(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 774
glAlphaFunc = platform.createBaseFunction( 
	'glAlphaFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLclampf],
	doc='glAlphaFunc( GLenum(func), GLclampf(ref) ) -> None', 
	argNames=('func', 'ref'),
)

# /usr/include/GL/gl.h 776
glBlendFunc = platform.createBaseFunction( 
	'glBlendFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum],
	doc='glBlendFunc( GLenum(sfactor), GLenum(dfactor) ) -> None', 
	argNames=('sfactor', 'dfactor'),
)

# /usr/include/GL/gl.h 778
glLogicOp = platform.createBaseFunction( 
	'glLogicOp', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glLogicOp( GLenum(opcode) ) -> None', 
	argNames=('opcode',),
)

# /usr/include/GL/gl.h 780
glCullFace = platform.createBaseFunction( 
	'glCullFace', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glCullFace( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 782
glFrontFace = platform.createBaseFunction( 
	'glFrontFace', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glFrontFace( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 784
glPointSize = platform.createBaseFunction( 
	'glPointSize', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glPointSize( GLfloat(size) ) -> None', 
	argNames=('size',),
)

# /usr/include/GL/gl.h 786
glLineWidth = platform.createBaseFunction( 
	'glLineWidth', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glLineWidth( GLfloat(width) ) -> None', 
	argNames=('width',),
)

# /usr/include/GL/gl.h 788
glLineStipple = platform.createBaseFunction( 
	'glLineStipple', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLushort],
	doc='glLineStipple( GLint(factor), GLushort(pattern) ) -> None', 
	argNames=('factor', 'pattern'),
)

# /usr/include/GL/gl.h 790
glPolygonMode = platform.createBaseFunction( 
	'glPolygonMode', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum],
	doc='glPolygonMode( GLenum(face), GLenum(mode) ) -> None', 
	argNames=('face', 'mode'),
)

# /usr/include/GL/gl.h 792
glPolygonOffset = platform.createBaseFunction( 
	'glPolygonOffset', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat],
	doc='glPolygonOffset( GLfloat(factor), GLfloat(units) ) -> None', 
	argNames=('factor', 'units'),
)

# /usr/include/GL/gl.h 794
glPolygonStipple = platform.createBaseFunction( 
	'glPolygonStipple', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glPolygonStipple( arrays.GLubyteArray(mask) ) -> None', 
	argNames=('mask',),
)

glPolygonStipple = arrays.setInputArraySizeType(
	glPolygonStipple,
	None, # XXX Could not determine size of argument mask for glPolygonStipple arrays.GLubyteArray
	arrays.GLubyteArray, 
	'mask',
)

# /usr/include/GL/gl.h 796
glGetPolygonStipple = platform.createBaseFunction( 
	'glGetPolygonStipple', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glGetPolygonStipple( arrays.GLubyteArray(mask) ) -> None', 
	argNames=('mask',),
)

# /usr/include/GL/gl.h 798
glEdgeFlag = platform.createBaseFunction( 
	'glEdgeFlag', dll=platform.GL, resultType=None, 
	argTypes=[GLboolean],
	doc='glEdgeFlag( GLboolean(flag) ) -> None', 
	argNames=('flag',),
)

# /usr/include/GL/gl.h 800
glEdgeFlagv = platform.createBaseFunction( 
	'glEdgeFlagv', dll=platform.GL, resultType=None, 
	argTypes=[ctypes.POINTER(GLboolean)],
	doc='glEdgeFlagv( ctypes.POINTER(GLboolean)(flag) ) -> None', 
	argNames=('flag',),
)

# /usr/include/GL/gl.h 802
glScissor = platform.createBaseFunction( 
	'glScissor', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLsizei, GLsizei],
	doc='glScissor( GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('x', 'y', 'width', 'height'),
)

# /usr/include/GL/gl.h 804
glClipPlane = platform.createBaseFunction( 
	'glClipPlane', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glClipPlane( GLenum(plane), arrays.GLdoubleArray(equation) ) -> None', 
	argNames=('plane', 'equation'),
)

glClipPlane = arrays.setInputArraySizeType(
	glClipPlane,
	None, # XXX Could not determine size of argument equation for glClipPlane arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'equation',
)

# /usr/include/GL/gl.h 806
glGetClipPlane = platform.createBaseFunction( 
	'glGetClipPlane', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glGetClipPlane( GLenum(plane), arrays.GLdoubleArray(equation) ) -> None', 
	argNames=('plane', 'equation'),
)

# /usr/include/GL/gl.h 808
glDrawBuffer = platform.createBaseFunction( 
	'glDrawBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDrawBuffer( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 810
glReadBuffer = platform.createBaseFunction( 
	'glReadBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glReadBuffer( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 812
glEnable = platform.createBaseFunction( 
	'glEnable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glEnable( GLenum(cap) ) -> None', 
	argNames=('cap',),
)

# /usr/include/GL/gl.h 814
glDisable = platform.createBaseFunction( 
	'glDisable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDisable( GLenum(cap) ) -> None', 
	argNames=('cap',),
)

# /usr/include/GL/gl.h 816
glIsEnabled = platform.createBaseFunction( 
	'glIsEnabled', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLenum],
	doc='glIsEnabled( GLenum(cap) ) -> GLboolean', 
	argNames=('cap',),
)

# /usr/include/GL/gl.h 819
glEnableClientState = platform.createBaseFunction( 
	'glEnableClientState', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glEnableClientState( GLenum(cap) ) -> None', 
	argNames=('cap',),
)

# /usr/include/GL/gl.h 821
glDisableClientState = platform.createBaseFunction( 
	'glDisableClientState', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDisableClientState( GLenum(cap) ) -> None', 
	argNames=('cap',),
)

# /usr/include/GL/gl.h 824
glGetBooleanv = platform.createBaseFunction( 
	'glGetBooleanv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, ctypes.POINTER(GLboolean)],
	doc='glGetBooleanv( GLenum(pname), ctypes.POINTER(GLboolean)(params) ) -> None', 
	argNames=('pname', 'params'),
)

# /usr/include/GL/gl.h 826
glGetDoublev = platform.createBaseFunction( 
	'glGetDoublev', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glGetDoublev( GLenum(pname), arrays.GLdoubleArray(params) ) -> None', 
	argNames=('pname', 'params'),
)

# /usr/include/GL/gl.h 828
glGetFloatv = platform.createBaseFunction( 
	'glGetFloatv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glGetFloatv( GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('pname', 'params'),
)

# /usr/include/GL/gl.h 830
glGetIntegerv = platform.createBaseFunction( 
	'glGetIntegerv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glGetIntegerv( GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('pname', 'params'),
)

# /usr/include/GL/gl.h 833
glPushAttrib = platform.createBaseFunction( 
	'glPushAttrib', dll=platform.GL, resultType=None, 
	argTypes=[GLbitfield],
	doc='glPushAttrib( GLbitfield(mask) ) -> None', 
	argNames=('mask',),
)

# /usr/include/GL/gl.h 835
glPopAttrib = platform.createBaseFunction( 
	'glPopAttrib', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopAttrib(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 838
glPushClientAttrib = platform.createBaseFunction( 
	'glPushClientAttrib', dll=platform.GL, resultType=None, 
	argTypes=[GLbitfield],
	doc='glPushClientAttrib( GLbitfield(mask) ) -> None', 
	argNames=('mask',),
)

# /usr/include/GL/gl.h 840
glPopClientAttrib = platform.createBaseFunction( 
	'glPopClientAttrib', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopClientAttrib(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 843
glRenderMode = platform.createBaseFunction( 
	'glRenderMode', dll=platform.GL, resultType=GLint, 
	argTypes=[GLenum],
	doc='glRenderMode( GLenum(mode) ) -> GLint', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 845
glGetError = platform.createBaseFunction( 
	'glGetError', dll=platform.GL, resultType=GLenum, 
	argTypes=[],
	doc='glGetError(  ) -> GLenum', 
	argNames=(),
)

# /usr/include/GL/gl.h 847
glGetString = platform.createBaseFunction( 
	'glGetString', dll=platform.GL, resultType=ctypes.POINTER(GLubyte), 
	argTypes=[GLenum],
	doc='glGetString( GLenum(name) ) -> ctypes.POINTER(GLubyte)', 
	argNames=('name',),
)

# /usr/include/GL/gl.h 849
glFinish = platform.createBaseFunction( 
	'glFinish', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glFinish(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 851
glFlush = platform.createBaseFunction( 
	'glFlush', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glFlush(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 853
glHint = platform.createBaseFunction( 
	'glHint', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum],
	doc='glHint( GLenum(target), GLenum(mode) ) -> None', 
	argNames=('target', 'mode'),
)

# /usr/include/GL/gl.h 860
glClearDepth = platform.createBaseFunction( 
	'glClearDepth', dll=platform.GL, resultType=None, 
	argTypes=[GLclampd],
	doc='glClearDepth( GLclampd(depth) ) -> None', 
	argNames=('depth',),
)

# /usr/include/GL/gl.h 862
glDepthFunc = platform.createBaseFunction( 
	'glDepthFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDepthFunc( GLenum(func) ) -> None', 
	argNames=('func',),
)

# /usr/include/GL/gl.h 864
glDepthMask = platform.createBaseFunction( 
	'glDepthMask', dll=platform.GL, resultType=None, 
	argTypes=[GLboolean],
	doc='glDepthMask( GLboolean(flag) ) -> None', 
	argNames=('flag',),
)

# /usr/include/GL/gl.h 866
glDepthRange = platform.createBaseFunction( 
	'glDepthRange', dll=platform.GL, resultType=None, 
	argTypes=[GLclampd, GLclampd],
	doc='glDepthRange( GLclampd(near_val), GLclampd(far_val) ) -> None', 
	argNames=('near_val', 'far_val'),
)

# /usr/include/GL/gl.h 873
glClearAccum = platform.createBaseFunction( 
	'glClearAccum', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glClearAccum( GLfloat(red), GLfloat(green), GLfloat(blue), GLfloat(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 875
glAccum = platform.createBaseFunction( 
	'glAccum', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat],
	doc='glAccum( GLenum(op), GLfloat(value) ) -> None', 
	argNames=('op', 'value'),
)

# /usr/include/GL/gl.h 882
glMatrixMode = platform.createBaseFunction( 
	'glMatrixMode', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glMatrixMode( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 886
glOrtho = platform.createBaseFunction( 
	'glOrtho', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glOrtho( GLdouble(left), GLdouble(right), GLdouble(bottom), GLdouble(top), GLdouble(near_val), GLdouble(far_val) ) -> None', 
	argNames=('left', 'right', 'bottom', 'top', 'near_val', 'far_val'),
)

# /usr/include/GL/gl.h 890
glFrustum = platform.createBaseFunction( 
	'glFrustum', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glFrustum( GLdouble(left), GLdouble(right), GLdouble(bottom), GLdouble(top), GLdouble(near_val), GLdouble(far_val) ) -> None', 
	argNames=('left', 'right', 'bottom', 'top', 'near_val', 'far_val'),
)

# /usr/include/GL/gl.h 893
glViewport = platform.createBaseFunction( 
	'glViewport', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLsizei, GLsizei],
	doc='glViewport( GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('x', 'y', 'width', 'height'),
)

# /usr/include/GL/gl.h 895
glPushMatrix = platform.createBaseFunction( 
	'glPushMatrix', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPushMatrix(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 897
glPopMatrix = platform.createBaseFunction( 
	'glPopMatrix', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopMatrix(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 899
glLoadIdentity = platform.createBaseFunction( 
	'glLoadIdentity', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glLoadIdentity(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 901
glLoadMatrixd = platform.createBaseFunction( 
	'glLoadMatrixd', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glLoadMatrixd( arrays.GLdoubleArray(m) ) -> None', 
	argNames=('m',),
)

glLoadMatrixd = arrays.setInputArraySizeType(
	glLoadMatrixd,
	16,
	arrays.GLdoubleArray,
	'm',
)

# /usr/include/GL/gl.h 902
glLoadMatrixf = platform.createBaseFunction( 
	'glLoadMatrixf', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glLoadMatrixf( arrays.GLfloatArray(m) ) -> None', 
	argNames=('m',),
)

glLoadMatrixf = arrays.setInputArraySizeType(
	glLoadMatrixf,
	16,
	arrays.GLfloatArray,
	'm',
)

# /usr/include/GL/gl.h 904
glMultMatrixd = platform.createBaseFunction( 
	'glMultMatrixd', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glMultMatrixd( arrays.GLdoubleArray(m) ) -> None', 
	argNames=('m',),
)

glMultMatrixd = arrays.setInputArraySizeType(
	glMultMatrixd,
	16,
	arrays.GLdoubleArray,
	'm',
)

# /usr/include/GL/gl.h 905
glMultMatrixf = platform.createBaseFunction( 
	'glMultMatrixf', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glMultMatrixf( arrays.GLfloatArray(m) ) -> None', 
	argNames=('m',),
)

glMultMatrixf = arrays.setInputArraySizeType(
	glMultMatrixf,
	16,
	arrays.GLfloatArray,
	'm',
)

# /usr/include/GL/gl.h 908
glRotated = platform.createBaseFunction( 
	'glRotated', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glRotated( GLdouble(angle), GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('angle', 'x', 'y', 'z'),
)

# /usr/include/GL/gl.h 910
glRotatef = platform.createBaseFunction( 
	'glRotatef', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glRotatef( GLfloat(angle), GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('angle', 'x', 'y', 'z'),
)

# /usr/include/GL/gl.h 912
glScaled = platform.createBaseFunction( 
	'glScaled', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble],
	doc='glScaled( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 913
glScalef = platform.createBaseFunction( 
	'glScalef', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat],
	doc='glScalef( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 915
glTranslated = platform.createBaseFunction( 
	'glTranslated', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble],
	doc='glTranslated( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 916
glTranslatef = platform.createBaseFunction( 
	'glTranslatef', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat],
	doc='glTranslatef( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 923
glIsList = platform.createBaseFunction( 
	'glIsList', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLuint],
	doc='glIsList( GLuint(list) ) -> GLboolean', 
	argNames=('list',),
)

# /usr/include/GL/gl.h 925
glDeleteLists = platform.createBaseFunction( 
	'glDeleteLists', dll=platform.GL, resultType=None, 
	argTypes=[GLuint, GLsizei],
	doc='glDeleteLists( GLuint(list), GLsizei(range) ) -> None', 
	argNames=('list', 'range'),
)

# /usr/include/GL/gl.h 927
glGenLists = platform.createBaseFunction( 
	'glGenLists', dll=platform.GL, resultType=GLuint, 
	argTypes=[GLsizei],
	doc='glGenLists( GLsizei(range) ) -> GLuint', 
	argNames=('range',),
)

# /usr/include/GL/gl.h 929
glNewList = platform.createBaseFunction( 
	'glNewList', dll=platform.GL, resultType=None, 
	argTypes=[GLuint, GLenum],
	doc='glNewList( GLuint(list), GLenum(mode) ) -> None', 
	argNames=('list', 'mode'),
)

# /usr/include/GL/gl.h 931
glEndList = platform.createBaseFunction( 
	'glEndList', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glEndList(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 933
glCallList = platform.createBaseFunction( 
	'glCallList', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glCallList( GLuint(list) ) -> None', 
	argNames=('list',),
)

GLvoid = None
# /usr/include/GL/gl.h 936
glCallLists = platform.createBaseFunction( 
	'glCallLists', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, GLenum, ctypes.POINTER(GLvoid)],
	doc='glCallLists( GLsizei(n), GLenum(type), ctypes.POINTER(GLvoid)(lists) ) -> None', 
	argNames=('n', 'type', 'lists'),
)

# /usr/include/GL/gl.h 938
glListBase = platform.createBaseFunction( 
	'glListBase', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glListBase( GLuint(base) ) -> None', 
	argNames=('base',),
)

# /usr/include/GL/gl.h 945
glBegin = platform.createBaseFunction( 
	'glBegin', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glBegin( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 947
glEnd = platform.createBaseFunction( 
	'glEnd', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glEnd(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 950
glVertex2d = platform.createBaseFunction( 
	'glVertex2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble],
	doc='glVertex2d( GLdouble(x), GLdouble(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 951
glVertex2f = platform.createBaseFunction( 
	'glVertex2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat],
	doc='glVertex2f( GLfloat(x), GLfloat(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 952
glVertex2i = platform.createBaseFunction( 
	'glVertex2i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint],
	doc='glVertex2i( GLint(x), GLint(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 953
glVertex2s = platform.createBaseFunction( 
	'glVertex2s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort],
	doc='glVertex2s( GLshort(x), GLshort(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 955
glVertex3d = platform.createBaseFunction( 
	'glVertex3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble],
	doc='glVertex3d( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 956
glVertex3f = platform.createBaseFunction( 
	'glVertex3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat],
	doc='glVertex3f( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 957
glVertex3i = platform.createBaseFunction( 
	'glVertex3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint],
	doc='glVertex3i( GLint(x), GLint(y), GLint(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 958
glVertex3s = platform.createBaseFunction( 
	'glVertex3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort],
	doc='glVertex3s( GLshort(x), GLshort(y), GLshort(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 960
glVertex4d = platform.createBaseFunction( 
	'glVertex4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glVertex4d( GLdouble(x), GLdouble(y), GLdouble(z), GLdouble(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 961
glVertex4f = platform.createBaseFunction( 
	'glVertex4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glVertex4f( GLfloat(x), GLfloat(y), GLfloat(z), GLfloat(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 962
glVertex4i = platform.createBaseFunction( 
	'glVertex4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint, GLint],
	doc='glVertex4i( GLint(x), GLint(y), GLint(z), GLint(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 963
glVertex4s = platform.createBaseFunction( 
	'glVertex4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort, GLshort],
	doc='glVertex4s( GLshort(x), GLshort(y), GLshort(z), GLshort(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 965
glVertex2dv = platform.createBaseFunction( 
	'glVertex2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glVertex2dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glVertex2dv = arrays.setInputArraySizeType(
	glVertex2dv,
	2,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 966
glVertex2fv = platform.createBaseFunction( 
	'glVertex2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glVertex2fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glVertex2fv = arrays.setInputArraySizeType(
	glVertex2fv,
	2,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 967
glVertex2iv = platform.createBaseFunction( 
	'glVertex2iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glVertex2iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glVertex2iv = arrays.setInputArraySizeType(
	glVertex2iv,
	2,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 968
glVertex2sv = platform.createBaseFunction( 
	'glVertex2sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glVertex2sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glVertex2sv = arrays.setInputArraySizeType(
	glVertex2sv,
	2,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 970
glVertex3dv = platform.createBaseFunction( 
	'glVertex3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glVertex3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glVertex3dv = arrays.setInputArraySizeType(
	glVertex3dv,
	3,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 971
glVertex3fv = platform.createBaseFunction( 
	'glVertex3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glVertex3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glVertex3fv = arrays.setInputArraySizeType(
	glVertex3fv,
	3,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 972
glVertex3iv = platform.createBaseFunction( 
	'glVertex3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glVertex3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glVertex3iv = arrays.setInputArraySizeType(
	glVertex3iv,
	3,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 973
glVertex3sv = platform.createBaseFunction( 
	'glVertex3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glVertex3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glVertex3sv = arrays.setInputArraySizeType(
	glVertex3sv,
	3,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 975
glVertex4dv = platform.createBaseFunction( 
	'glVertex4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glVertex4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glVertex4dv = arrays.setInputArraySizeType(
	glVertex4dv,
	4,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 976
glVertex4fv = platform.createBaseFunction( 
	'glVertex4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glVertex4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glVertex4fv = arrays.setInputArraySizeType(
	glVertex4fv,
	4,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 977
glVertex4iv = platform.createBaseFunction( 
	'glVertex4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glVertex4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glVertex4iv = arrays.setInputArraySizeType(
	glVertex4iv,
	4,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 978
glVertex4sv = platform.createBaseFunction( 
	'glVertex4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glVertex4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glVertex4sv = arrays.setInputArraySizeType(
	glVertex4sv,
	4,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 981
glNormal3b = platform.createBaseFunction( 
	'glNormal3b', dll=platform.GL, resultType=None, 
	argTypes=[GLbyte, GLbyte, GLbyte],
	doc='glNormal3b( GLbyte(nx), GLbyte(ny), GLbyte(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)

# /usr/include/GL/gl.h 982
glNormal3d = platform.createBaseFunction( 
	'glNormal3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble],
	doc='glNormal3d( GLdouble(nx), GLdouble(ny), GLdouble(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)

# /usr/include/GL/gl.h 983
glNormal3f = platform.createBaseFunction( 
	'glNormal3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat],
	doc='glNormal3f( GLfloat(nx), GLfloat(ny), GLfloat(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)

# /usr/include/GL/gl.h 984
glNormal3i = platform.createBaseFunction( 
	'glNormal3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint],
	doc='glNormal3i( GLint(nx), GLint(ny), GLint(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)

# /usr/include/GL/gl.h 985
glNormal3s = platform.createBaseFunction( 
	'glNormal3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort],
	doc='glNormal3s( GLshort(nx), GLshort(ny), GLshort(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)

# /usr/include/GL/gl.h 987
glNormal3bv = platform.createBaseFunction( 
	'glNormal3bv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLbyteArray],
	doc='glNormal3bv( arrays.GLbyteArray(v) ) -> None', 
	argNames=('v',),
)

glNormal3bv = arrays.setInputArraySizeType(
	glNormal3bv,
	3,
	arrays.GLbyteArray,
	'v',
)

# /usr/include/GL/gl.h 988
glNormal3dv = platform.createBaseFunction( 
	'glNormal3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glNormal3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glNormal3dv = arrays.setInputArraySizeType(
	glNormal3dv,
	3,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 989
glNormal3fv = platform.createBaseFunction( 
	'glNormal3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glNormal3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glNormal3fv = arrays.setInputArraySizeType(
	glNormal3fv,
	3,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 990
glNormal3iv = platform.createBaseFunction( 
	'glNormal3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glNormal3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glNormal3iv = arrays.setInputArraySizeType(
	glNormal3iv,
	3,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 991
glNormal3sv = platform.createBaseFunction( 
	'glNormal3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glNormal3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glNormal3sv = arrays.setInputArraySizeType(
	glNormal3sv,
	3,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 994
glIndexd = platform.createBaseFunction( 
	'glIndexd', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble],
	doc='glIndexd( GLdouble(c) ) -> None', 
	argNames=('c',),
)

# /usr/include/GL/gl.h 995
glIndexf = platform.createBaseFunction( 
	'glIndexf', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glIndexf( GLfloat(c) ) -> None', 
	argNames=('c',),
)

# /usr/include/GL/gl.h 996
glIndexi = platform.createBaseFunction( 
	'glIndexi', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glIndexi( GLint(c) ) -> None', 
	argNames=('c',),
)

# /usr/include/GL/gl.h 997
glIndexs = platform.createBaseFunction( 
	'glIndexs', dll=platform.GL, resultType=None, 
	argTypes=[GLshort],
	doc='glIndexs( GLshort(c) ) -> None', 
	argNames=('c',),
)

# /usr/include/GL/gl.h 998
glIndexub = platform.createBaseFunction( 
	'glIndexub', dll=platform.GL, resultType=None, 
	argTypes=[GLubyte],
	doc='glIndexub( GLubyte(c) ) -> None', 
	argNames=('c',),
)

# /usr/include/GL/gl.h 1000
glIndexdv = platform.createBaseFunction( 
	'glIndexdv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glIndexdv( arrays.GLdoubleArray(c) ) -> None', 
	argNames=('c',),
)

glIndexdv = arrays.setInputArraySizeType(
	glIndexdv,
	None, # XXX Could not determine size of argument c for glIndexdv arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'c',
)

# /usr/include/GL/gl.h 1001
glIndexfv = platform.createBaseFunction( 
	'glIndexfv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glIndexfv( arrays.GLfloatArray(c) ) -> None', 
	argNames=('c',),
)

glIndexfv = arrays.setInputArraySizeType(
	glIndexfv,
	None, # XXX Could not determine size of argument c for glIndexfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'c',
)

# /usr/include/GL/gl.h 1002
glIndexiv = platform.createBaseFunction( 
	'glIndexiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glIndexiv( arrays.GLintArray(c) ) -> None', 
	argNames=('c',),
)

glIndexiv = arrays.setInputArraySizeType(
	glIndexiv,
	None, # XXX Could not determine size of argument c for glIndexiv arrays.GLintArray
	arrays.GLintArray, 
	'c',
)

# /usr/include/GL/gl.h 1003
glIndexsv = platform.createBaseFunction( 
	'glIndexsv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glIndexsv( arrays.GLshortArray(c) ) -> None', 
	argNames=('c',),
)

glIndexsv = arrays.setInputArraySizeType(
	glIndexsv,
	None, # XXX Could not determine size of argument c for glIndexsv arrays.GLshortArray
	arrays.GLshortArray, 
	'c',
)

# /usr/include/GL/gl.h 1004
glIndexubv = platform.createBaseFunction( 
	'glIndexubv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glIndexubv( arrays.GLubyteArray(c) ) -> None', 
	argNames=('c',),
)

glIndexubv = arrays.setInputArraySizeType(
	glIndexubv,
	None, # XXX Could not determine size of argument c for glIndexubv arrays.GLubyteArray
	arrays.GLubyteArray, 
	'c',
)

# /usr/include/GL/gl.h 1006
glColor3b = platform.createBaseFunction( 
	'glColor3b', dll=platform.GL, resultType=None, 
	argTypes=[GLbyte, GLbyte, GLbyte],
	doc='glColor3b( GLbyte(red), GLbyte(green), GLbyte(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1007
glColor3d = platform.createBaseFunction( 
	'glColor3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble],
	doc='glColor3d( GLdouble(red), GLdouble(green), GLdouble(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1008
glColor3f = platform.createBaseFunction( 
	'glColor3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat],
	doc='glColor3f( GLfloat(red), GLfloat(green), GLfloat(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1009
glColor3i = platform.createBaseFunction( 
	'glColor3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint],
	doc='glColor3i( GLint(red), GLint(green), GLint(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1010
glColor3s = platform.createBaseFunction( 
	'glColor3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort],
	doc='glColor3s( GLshort(red), GLshort(green), GLshort(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1011
glColor3ub = platform.createBaseFunction( 
	'glColor3ub', dll=platform.GL, resultType=None, 
	argTypes=[GLubyte, GLubyte, GLubyte],
	doc='glColor3ub( GLubyte(red), GLubyte(green), GLubyte(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1012
glColor3ui = platform.createBaseFunction( 
	'glColor3ui', dll=platform.GL, resultType=None, 
	argTypes=[GLuint, GLuint, GLuint],
	doc='glColor3ui( GLuint(red), GLuint(green), GLuint(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1013
glColor3us = platform.createBaseFunction( 
	'glColor3us', dll=platform.GL, resultType=None, 
	argTypes=[GLushort, GLushort, GLushort],
	doc='glColor3us( GLushort(red), GLushort(green), GLushort(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)

# /usr/include/GL/gl.h 1016
glColor4b = platform.createBaseFunction( 
	'glColor4b', dll=platform.GL, resultType=None, 
	argTypes=[GLbyte, GLbyte, GLbyte, GLbyte],
	doc='glColor4b( GLbyte(red), GLbyte(green), GLbyte(blue), GLbyte(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1018
glColor4d = platform.createBaseFunction( 
	'glColor4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glColor4d( GLdouble(red), GLdouble(green), GLdouble(blue), GLdouble(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1020
glColor4f = platform.createBaseFunction( 
	'glColor4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glColor4f( GLfloat(red), GLfloat(green), GLfloat(blue), GLfloat(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1022
glColor4i = platform.createBaseFunction( 
	'glColor4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint, GLint],
	doc='glColor4i( GLint(red), GLint(green), GLint(blue), GLint(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1024
glColor4s = platform.createBaseFunction( 
	'glColor4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort, GLshort],
	doc='glColor4s( GLshort(red), GLshort(green), GLshort(blue), GLshort(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1026
glColor4ub = platform.createBaseFunction( 
	'glColor4ub', dll=platform.GL, resultType=None, 
	argTypes=[GLubyte, GLubyte, GLubyte, GLubyte],
	doc='glColor4ub( GLubyte(red), GLubyte(green), GLubyte(blue), GLubyte(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1028
glColor4ui = platform.createBaseFunction( 
	'glColor4ui', dll=platform.GL, resultType=None, 
	argTypes=[GLuint, GLuint, GLuint, GLuint],
	doc='glColor4ui( GLuint(red), GLuint(green), GLuint(blue), GLuint(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1030
glColor4us = platform.createBaseFunction( 
	'glColor4us', dll=platform.GL, resultType=None, 
	argTypes=[GLushort, GLushort, GLushort, GLushort],
	doc='glColor4us( GLushort(red), GLushort(green), GLushort(blue), GLushort(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1033
glColor3bv = platform.createBaseFunction( 
	'glColor3bv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLbyteArray],
	doc='glColor3bv( arrays.GLbyteArray(v) ) -> None', 
	argNames=('v',),
)

glColor3bv = arrays.setInputArraySizeType(
	glColor3bv,
	3,
	arrays.GLbyteArray,
	'v',
)

# /usr/include/GL/gl.h 1034
glColor3dv = platform.createBaseFunction( 
	'glColor3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glColor3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glColor3dv = arrays.setInputArraySizeType(
	glColor3dv,
	3,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1035
glColor3fv = platform.createBaseFunction( 
	'glColor3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glColor3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glColor3fv = arrays.setInputArraySizeType(
	glColor3fv,
	3,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1036
glColor3iv = platform.createBaseFunction( 
	'glColor3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glColor3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glColor3iv = arrays.setInputArraySizeType(
	glColor3iv,
	3,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1037
glColor3sv = platform.createBaseFunction( 
	'glColor3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glColor3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glColor3sv = arrays.setInputArraySizeType(
	glColor3sv,
	3,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1038
glColor3ubv = platform.createBaseFunction( 
	'glColor3ubv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glColor3ubv( arrays.GLubyteArray(v) ) -> None', 
	argNames=('v',),
)

glColor3ubv = arrays.setInputArraySizeType(
	glColor3ubv,
	3,
	arrays.GLubyteArray,
	'v',
)

# /usr/include/GL/gl.h 1039
glColor3uiv = platform.createBaseFunction( 
	'glColor3uiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLuintArray],
	doc='glColor3uiv( arrays.GLuintArray(v) ) -> None', 
	argNames=('v',),
)

glColor3uiv = arrays.setInputArraySizeType(
	glColor3uiv,
	3,
	arrays.GLuintArray,
	'v',
)

# /usr/include/GL/gl.h 1040
glColor3usv = platform.createBaseFunction( 
	'glColor3usv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLushortArray],
	doc='glColor3usv( arrays.GLushortArray(v) ) -> None', 
	argNames=('v',),
)

glColor3usv = arrays.setInputArraySizeType(
	glColor3usv,
	3,
	arrays.GLushortArray,
	'v',
)

# /usr/include/GL/gl.h 1042
glColor4bv = platform.createBaseFunction( 
	'glColor4bv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLbyteArray],
	doc='glColor4bv( arrays.GLbyteArray(v) ) -> None', 
	argNames=('v',),
)

glColor4bv = arrays.setInputArraySizeType(
	glColor4bv,
	4,
	arrays.GLbyteArray,
	'v',
)

# /usr/include/GL/gl.h 1043
glColor4dv = platform.createBaseFunction( 
	'glColor4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glColor4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glColor4dv = arrays.setInputArraySizeType(
	glColor4dv,
	4,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1044
glColor4fv = platform.createBaseFunction( 
	'glColor4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glColor4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glColor4fv = arrays.setInputArraySizeType(
	glColor4fv,
	4,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1045
glColor4iv = platform.createBaseFunction( 
	'glColor4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glColor4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glColor4iv = arrays.setInputArraySizeType(
	glColor4iv,
	4,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1046
glColor4sv = platform.createBaseFunction( 
	'glColor4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glColor4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glColor4sv = arrays.setInputArraySizeType(
	glColor4sv,
	4,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1047
glColor4ubv = platform.createBaseFunction( 
	'glColor4ubv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glColor4ubv( arrays.GLubyteArray(v) ) -> None', 
	argNames=('v',),
)

glColor4ubv = arrays.setInputArraySizeType(
	glColor4ubv,
	4,
	arrays.GLubyteArray,
	'v',
)

# /usr/include/GL/gl.h 1048
glColor4uiv = platform.createBaseFunction( 
	'glColor4uiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLuintArray],
	doc='glColor4uiv( arrays.GLuintArray(v) ) -> None', 
	argNames=('v',),
)

glColor4uiv = arrays.setInputArraySizeType(
	glColor4uiv,
	4,
	arrays.GLuintArray,
	'v',
)

# /usr/include/GL/gl.h 1049
glColor4usv = platform.createBaseFunction( 
	'glColor4usv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLushortArray],
	doc='glColor4usv( arrays.GLushortArray(v) ) -> None', 
	argNames=('v',),
)

glColor4usv = arrays.setInputArraySizeType(
	glColor4usv,
	4,
	arrays.GLushortArray,
	'v',
)

# /usr/include/GL/gl.h 1052
glTexCoord1d = platform.createBaseFunction( 
	'glTexCoord1d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble],
	doc='glTexCoord1d( GLdouble(s) ) -> None', 
	argNames=('s',),
)

# /usr/include/GL/gl.h 1053
glTexCoord1f = platform.createBaseFunction( 
	'glTexCoord1f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glTexCoord1f( GLfloat(s) ) -> None', 
	argNames=('s',),
)

# /usr/include/GL/gl.h 1054
glTexCoord1i = platform.createBaseFunction( 
	'glTexCoord1i', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glTexCoord1i( GLint(s) ) -> None', 
	argNames=('s',),
)

# /usr/include/GL/gl.h 1055
glTexCoord1s = platform.createBaseFunction( 
	'glTexCoord1s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort],
	doc='glTexCoord1s( GLshort(s) ) -> None', 
	argNames=('s',),
)

# /usr/include/GL/gl.h 1057
glTexCoord2d = platform.createBaseFunction( 
	'glTexCoord2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble],
	doc='glTexCoord2d( GLdouble(s), GLdouble(t) ) -> None', 
	argNames=('s', 't'),
)

# /usr/include/GL/gl.h 1058
glTexCoord2f = platform.createBaseFunction( 
	'glTexCoord2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat],
	doc='glTexCoord2f( GLfloat(s), GLfloat(t) ) -> None', 
	argNames=('s', 't'),
)

# /usr/include/GL/gl.h 1059
glTexCoord2i = platform.createBaseFunction( 
	'glTexCoord2i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint],
	doc='glTexCoord2i( GLint(s), GLint(t) ) -> None', 
	argNames=('s', 't'),
)

# /usr/include/GL/gl.h 1060
glTexCoord2s = platform.createBaseFunction( 
	'glTexCoord2s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort],
	doc='glTexCoord2s( GLshort(s), GLshort(t) ) -> None', 
	argNames=('s', 't'),
)

# /usr/include/GL/gl.h 1062
glTexCoord3d = platform.createBaseFunction( 
	'glTexCoord3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble],
	doc='glTexCoord3d( GLdouble(s), GLdouble(t), GLdouble(r) ) -> None', 
	argNames=('s', 't', 'r'),
)

# /usr/include/GL/gl.h 1063
glTexCoord3f = platform.createBaseFunction( 
	'glTexCoord3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat],
	doc='glTexCoord3f( GLfloat(s), GLfloat(t), GLfloat(r) ) -> None', 
	argNames=('s', 't', 'r'),
)

# /usr/include/GL/gl.h 1064
glTexCoord3i = platform.createBaseFunction( 
	'glTexCoord3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint],
	doc='glTexCoord3i( GLint(s), GLint(t), GLint(r) ) -> None', 
	argNames=('s', 't', 'r'),
)

# /usr/include/GL/gl.h 1065
glTexCoord3s = platform.createBaseFunction( 
	'glTexCoord3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort],
	doc='glTexCoord3s( GLshort(s), GLshort(t), GLshort(r) ) -> None', 
	argNames=('s', 't', 'r'),
)

# /usr/include/GL/gl.h 1067
glTexCoord4d = platform.createBaseFunction( 
	'glTexCoord4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glTexCoord4d( GLdouble(s), GLdouble(t), GLdouble(r), GLdouble(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1068
glTexCoord4f = platform.createBaseFunction( 
	'glTexCoord4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glTexCoord4f( GLfloat(s), GLfloat(t), GLfloat(r), GLfloat(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1069
glTexCoord4i = platform.createBaseFunction( 
	'glTexCoord4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint, GLint],
	doc='glTexCoord4i( GLint(s), GLint(t), GLint(r), GLint(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1070
glTexCoord4s = platform.createBaseFunction( 
	'glTexCoord4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort, GLshort],
	doc='glTexCoord4s( GLshort(s), GLshort(t), GLshort(r), GLshort(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1072
glTexCoord1dv = platform.createBaseFunction( 
	'glTexCoord1dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord1dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord1dv = arrays.setInputArraySizeType(
	glTexCoord1dv,
	1,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1073
glTexCoord1fv = platform.createBaseFunction( 
	'glTexCoord1fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord1fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord1fv = arrays.setInputArraySizeType(
	glTexCoord1fv,
	1,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1074
glTexCoord1iv = platform.createBaseFunction( 
	'glTexCoord1iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord1iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord1iv = arrays.setInputArraySizeType(
	glTexCoord1iv,
	1,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1075
glTexCoord1sv = platform.createBaseFunction( 
	'glTexCoord1sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord1sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord1sv = arrays.setInputArraySizeType(
	glTexCoord1sv,
	1,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1077
glTexCoord2dv = platform.createBaseFunction( 
	'glTexCoord2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord2dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord2dv = arrays.setInputArraySizeType(
	glTexCoord2dv,
	2,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1078
glTexCoord2fv = platform.createBaseFunction( 
	'glTexCoord2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord2fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord2fv = arrays.setInputArraySizeType(
	glTexCoord2fv,
	2,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1079
glTexCoord2iv = platform.createBaseFunction( 
	'glTexCoord2iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord2iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord2iv = arrays.setInputArraySizeType(
	glTexCoord2iv,
	2,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1080
glTexCoord2sv = platform.createBaseFunction( 
	'glTexCoord2sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord2sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord2sv = arrays.setInputArraySizeType(
	glTexCoord2sv,
	2,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1082
glTexCoord3dv = platform.createBaseFunction( 
	'glTexCoord3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord3dv = arrays.setInputArraySizeType(
	glTexCoord3dv,
	3,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1083
glTexCoord3fv = platform.createBaseFunction( 
	'glTexCoord3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord3fv = arrays.setInputArraySizeType(
	glTexCoord3fv,
	3,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1084
glTexCoord3iv = platform.createBaseFunction( 
	'glTexCoord3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord3iv = arrays.setInputArraySizeType(
	glTexCoord3iv,
	3,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1085
glTexCoord3sv = platform.createBaseFunction( 
	'glTexCoord3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord3sv = arrays.setInputArraySizeType(
	glTexCoord3sv,
	3,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1087
glTexCoord4dv = platform.createBaseFunction( 
	'glTexCoord4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord4dv = arrays.setInputArraySizeType(
	glTexCoord4dv,
	4,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1088
glTexCoord4fv = platform.createBaseFunction( 
	'glTexCoord4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord4fv = arrays.setInputArraySizeType(
	glTexCoord4fv,
	4,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1089
glTexCoord4iv = platform.createBaseFunction( 
	'glTexCoord4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord4iv = arrays.setInputArraySizeType(
	glTexCoord4iv,
	4,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1090
glTexCoord4sv = platform.createBaseFunction( 
	'glTexCoord4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glTexCoord4sv = arrays.setInputArraySizeType(
	glTexCoord4sv,
	4,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1093
glRasterPos2d = platform.createBaseFunction( 
	'glRasterPos2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble],
	doc='glRasterPos2d( GLdouble(x), GLdouble(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 1094
glRasterPos2f = platform.createBaseFunction( 
	'glRasterPos2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat],
	doc='glRasterPos2f( GLfloat(x), GLfloat(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 1095
glRasterPos2i = platform.createBaseFunction( 
	'glRasterPos2i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint],
	doc='glRasterPos2i( GLint(x), GLint(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 1096
glRasterPos2s = platform.createBaseFunction( 
	'glRasterPos2s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort],
	doc='glRasterPos2s( GLshort(x), GLshort(y) ) -> None', 
	argNames=('x', 'y'),
)

# /usr/include/GL/gl.h 1098
glRasterPos3d = platform.createBaseFunction( 
	'glRasterPos3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble],
	doc='glRasterPos3d( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 1099
glRasterPos3f = platform.createBaseFunction( 
	'glRasterPos3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat],
	doc='glRasterPos3f( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 1100
glRasterPos3i = platform.createBaseFunction( 
	'glRasterPos3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint],
	doc='glRasterPos3i( GLint(x), GLint(y), GLint(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 1101
glRasterPos3s = platform.createBaseFunction( 
	'glRasterPos3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort],
	doc='glRasterPos3s( GLshort(x), GLshort(y), GLshort(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)

# /usr/include/GL/gl.h 1103
glRasterPos4d = platform.createBaseFunction( 
	'glRasterPos4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glRasterPos4d( GLdouble(x), GLdouble(y), GLdouble(z), GLdouble(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 1104
glRasterPos4f = platform.createBaseFunction( 
	'glRasterPos4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glRasterPos4f( GLfloat(x), GLfloat(y), GLfloat(z), GLfloat(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 1105
glRasterPos4i = platform.createBaseFunction( 
	'glRasterPos4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint, GLint],
	doc='glRasterPos4i( GLint(x), GLint(y), GLint(z), GLint(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 1106
glRasterPos4s = platform.createBaseFunction( 
	'glRasterPos4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort, GLshort],
	doc='glRasterPos4s( GLshort(x), GLshort(y), GLshort(z), GLshort(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)

# /usr/include/GL/gl.h 1108
glRasterPos2dv = platform.createBaseFunction( 
	'glRasterPos2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glRasterPos2dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos2dv = arrays.setInputArraySizeType(
	glRasterPos2dv,
	2,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1109
glRasterPos2fv = platform.createBaseFunction( 
	'glRasterPos2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glRasterPos2fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos2fv = arrays.setInputArraySizeType(
	glRasterPos2fv,
	2,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1110
glRasterPos2iv = platform.createBaseFunction( 
	'glRasterPos2iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glRasterPos2iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos2iv = arrays.setInputArraySizeType(
	glRasterPos2iv,
	2,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1111
glRasterPos2sv = platform.createBaseFunction( 
	'glRasterPos2sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glRasterPos2sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos2sv = arrays.setInputArraySizeType(
	glRasterPos2sv,
	2,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1113
glRasterPos3dv = platform.createBaseFunction( 
	'glRasterPos3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glRasterPos3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos3dv = arrays.setInputArraySizeType(
	glRasterPos3dv,
	3,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1114
glRasterPos3fv = platform.createBaseFunction( 
	'glRasterPos3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glRasterPos3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos3fv = arrays.setInputArraySizeType(
	glRasterPos3fv,
	3,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1115
glRasterPos3iv = platform.createBaseFunction( 
	'glRasterPos3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glRasterPos3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos3iv = arrays.setInputArraySizeType(
	glRasterPos3iv,
	3,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1116
glRasterPos3sv = platform.createBaseFunction( 
	'glRasterPos3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glRasterPos3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos3sv = arrays.setInputArraySizeType(
	glRasterPos3sv,
	3,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1118
glRasterPos4dv = platform.createBaseFunction( 
	'glRasterPos4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glRasterPos4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos4dv = arrays.setInputArraySizeType(
	glRasterPos4dv,
	4,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1119
glRasterPos4fv = platform.createBaseFunction( 
	'glRasterPos4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glRasterPos4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos4fv = arrays.setInputArraySizeType(
	glRasterPos4fv,
	4,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1120
glRasterPos4iv = platform.createBaseFunction( 
	'glRasterPos4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glRasterPos4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos4iv = arrays.setInputArraySizeType(
	glRasterPos4iv,
	4,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1121
glRasterPos4sv = platform.createBaseFunction( 
	'glRasterPos4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glRasterPos4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)

glRasterPos4sv = arrays.setInputArraySizeType(
	glRasterPos4sv,
	4,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1124
glRectd = platform.createBaseFunction( 
	'glRectd', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glRectd( GLdouble(x1), GLdouble(y1), GLdouble(x2), GLdouble(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)

# /usr/include/GL/gl.h 1125
glRectf = platform.createBaseFunction( 
	'glRectf', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glRectf( GLfloat(x1), GLfloat(y1), GLfloat(x2), GLfloat(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)

# /usr/include/GL/gl.h 1126
glRecti = platform.createBaseFunction( 
	'glRecti', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLint, GLint],
	doc='glRecti( GLint(x1), GLint(y1), GLint(x2), GLint(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)

# /usr/include/GL/gl.h 1127
glRects = platform.createBaseFunction( 
	'glRects', dll=platform.GL, resultType=None, 
	argTypes=[GLshort, GLshort, GLshort, GLshort],
	doc='glRects( GLshort(x1), GLshort(y1), GLshort(x2), GLshort(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)

# /usr/include/GL/gl.h 1130
glRectdv = platform.createBaseFunction( 
	'glRectdv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray, arrays.GLdoubleArray],
	doc='glRectdv( arrays.GLdoubleArray(v1), arrays.GLdoubleArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)

glRectdv = arrays.setInputArraySizeType(
	glRectdv,
	None, # XXX Could not determine size of argument v1 for glRectdv arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'v1',
)

glRectdv = arrays.setInputArraySizeType(
	glRectdv,
	None, # XXX Could not determine size of argument v2 for glRectdv arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'v2',
)

# /usr/include/GL/gl.h 1131
glRectfv = platform.createBaseFunction( 
	'glRectfv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray, arrays.GLfloatArray],
	doc='glRectfv( arrays.GLfloatArray(v1), arrays.GLfloatArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)

glRectfv = arrays.setInputArraySizeType(
	glRectfv,
	None, # XXX Could not determine size of argument v1 for glRectfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'v1',
)

glRectfv = arrays.setInputArraySizeType(
	glRectfv,
	None, # XXX Could not determine size of argument v2 for glRectfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'v2',
)

# /usr/include/GL/gl.h 1132
glRectiv = platform.createBaseFunction( 
	'glRectiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray, arrays.GLintArray],
	doc='glRectiv( arrays.GLintArray(v1), arrays.GLintArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)

glRectiv = arrays.setInputArraySizeType(
	glRectiv,
	None, # XXX Could not determine size of argument v1 for glRectiv arrays.GLintArray
	arrays.GLintArray, 
	'v1',
)

glRectiv = arrays.setInputArraySizeType(
	glRectiv,
	None, # XXX Could not determine size of argument v2 for glRectiv arrays.GLintArray
	arrays.GLintArray, 
	'v2',
)

# /usr/include/GL/gl.h 1133
glRectsv = platform.createBaseFunction( 
	'glRectsv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray, arrays.GLshortArray],
	doc='glRectsv( arrays.GLshortArray(v1), arrays.GLshortArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)

glRectsv = arrays.setInputArraySizeType(
	glRectsv,
	None, # XXX Could not determine size of argument v1 for glRectsv arrays.GLshortArray
	arrays.GLshortArray, 
	'v1',
)

glRectsv = arrays.setInputArraySizeType(
	glRectsv,
	None, # XXX Could not determine size of argument v2 for glRectsv arrays.GLshortArray
	arrays.GLshortArray, 
	'v2',
)

# /usr/include/GL/gl.h 1141
glVertexPointer = platform.createBaseFunction( 
	'glVertexPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glVertexPointer( GLint(size), GLenum(type), GLsizei(stride), ctypes.POINTER(GLvoid)(ptr) ) -> None', 
	argNames=('size', 'type', 'stride', 'ptr'),
)

# /usr/include/GL/gl.h 1144
glNormalPointer = platform.createBaseFunction( 
	'glNormalPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glNormalPointer( GLenum(type), GLsizei(stride), ctypes.POINTER(GLvoid)(ptr) ) -> None', 
	argNames=('type', 'stride', 'ptr'),
)

# /usr/include/GL/gl.h 1147
glColorPointer = platform.createBaseFunction( 
	'glColorPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glColorPointer( GLint(size), GLenum(type), GLsizei(stride), ctypes.POINTER(GLvoid)(ptr) ) -> None', 
	argNames=('size', 'type', 'stride', 'ptr'),
)

# /usr/include/GL/gl.h 1150
glIndexPointer = platform.createBaseFunction( 
	'glIndexPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glIndexPointer( GLenum(type), GLsizei(stride), ctypes.POINTER(GLvoid)(ptr) ) -> None', 
	argNames=('type', 'stride', 'ptr'),
)

# /usr/include/GL/gl.h 1153
glTexCoordPointer = platform.createBaseFunction( 
	'glTexCoordPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glTexCoordPointer( GLint(size), GLenum(type), GLsizei(stride), ctypes.POINTER(GLvoid)(ptr) ) -> None', 
	argNames=('size', 'type', 'stride', 'ptr'),
)

# /usr/include/GL/gl.h 1155
glEdgeFlagPointer = platform.createBaseFunction( 
	'glEdgeFlagPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, ctypes.POINTER(GLvoid)],
	doc='glEdgeFlagPointer( GLsizei(stride), ctypes.POINTER(GLvoid)(ptr) ) -> None', 
	argNames=('stride', 'ptr'),
)

# /usr/include/GL/gl.h 1157
glGetPointerv = platform.createBaseFunction( 
	'glGetPointerv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, ctypes.POINTER(ctypes.POINTER(GLvoid))],
	doc='glGetPointerv( GLenum(pname), ctypes.POINTER(ctypes.POINTER(GLvoid))(params) ) -> None', 
	argNames=('pname', 'params'),
)

# /usr/include/GL/gl.h 1159
glArrayElement = platform.createBaseFunction( 
	'glArrayElement', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glArrayElement( GLint(i) ) -> None', 
	argNames=('i',),
)

# /usr/include/GL/gl.h 1161
glDrawArrays = platform.createBaseFunction( 
	'glDrawArrays', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLsizei],
	doc='glDrawArrays( GLenum(mode), GLint(first), GLsizei(count) ) -> None', 
	argNames=('mode', 'first', 'count'),
)

# /usr/include/GL/gl.h 1164
glDrawElements = platform.createBaseFunction( 
	'glDrawElements', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, GLenum, ctypes.POINTER(GLvoid)],
	doc='glDrawElements( GLenum(mode), GLsizei(count), GLenum(type), ctypes.POINTER(GLvoid)(indices) ) -> None', 
	argNames=('mode', 'count', 'type', 'indices'),
)

# /usr/include/GL/gl.h 1167
glInterleavedArrays = platform.createBaseFunction( 
	'glInterleavedArrays', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glInterleavedArrays( GLenum(format), GLsizei(stride), ctypes.POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('format', 'stride', 'pointer'),
)

# /usr/include/GL/gl.h 1173
glShadeModel = platform.createBaseFunction( 
	'glShadeModel', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glShadeModel( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 1175
glLightf = platform.createBaseFunction( 
	'glLightf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLfloat],
	doc='glLightf( GLenum(light), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('light', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1176
glLighti = platform.createBaseFunction( 
	'glLighti', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint],
	doc='glLighti( GLenum(light), GLenum(pname), GLint(param) ) -> None', 
	argNames=('light', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1178
glLightfv = platform.createBaseFunction( 
	'glLightfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glLightfv( GLenum(light), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)

glLightfv = arrays.setInputArraySizeType(
	glLightfv,
	None, # XXX Could not determine size of argument params for glLightfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1180
glLightiv = platform.createBaseFunction( 
	'glLightiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glLightiv( GLenum(light), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)

glLightiv = arrays.setInputArraySizeType(
	glLightiv,
	None, # XXX Could not determine size of argument params for glLightiv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1183
glGetLightfv = platform.createBaseFunction( 
	'glGetLightfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetLightfv( GLenum(light), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1185
glGetLightiv = platform.createBaseFunction( 
	'glGetLightiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetLightiv( GLenum(light), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1187
glLightModelf = platform.createBaseFunction( 
	'glLightModelf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat],
	doc='glLightModelf( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1188
glLightModeli = platform.createBaseFunction( 
	'glLightModeli', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint],
	doc='glLightModeli( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1189
glLightModelfv = platform.createBaseFunction( 
	'glLightModelfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glLightModelfv( GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('pname', 'params'),
)

glLightModelfv = arrays.setInputArraySizeType(
	glLightModelfv,
	None, # XXX Could not determine size of argument params for glLightModelfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1190
glLightModeliv = platform.createBaseFunction( 
	'glLightModeliv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glLightModeliv( GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('pname', 'params'),
)

glLightModeliv = arrays.setInputArraySizeType(
	glLightModeliv,
	None, # XXX Could not determine size of argument params for glLightModeliv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1192
glMaterialf = platform.createBaseFunction( 
	'glMaterialf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLfloat],
	doc='glMaterialf( GLenum(face), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('face', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1193
glMateriali = platform.createBaseFunction( 
	'glMateriali', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint],
	doc='glMateriali( GLenum(face), GLenum(pname), GLint(param) ) -> None', 
	argNames=('face', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1194
glMaterialfv = platform.createBaseFunction( 
	'glMaterialfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glMaterialfv( GLenum(face), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)

glMaterialfv = arrays.setInputArraySizeType(
	glMaterialfv,
	None, # XXX Could not determine size of argument params for glMaterialfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1195
glMaterialiv = platform.createBaseFunction( 
	'glMaterialiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glMaterialiv( GLenum(face), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)

glMaterialiv = arrays.setInputArraySizeType(
	glMaterialiv,
	None, # XXX Could not determine size of argument params for glMaterialiv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1197
glGetMaterialfv = platform.createBaseFunction( 
	'glGetMaterialfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetMaterialfv( GLenum(face), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1198
glGetMaterialiv = platform.createBaseFunction( 
	'glGetMaterialiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetMaterialiv( GLenum(face), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1200
glColorMaterial = platform.createBaseFunction( 
	'glColorMaterial', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum],
	doc='glColorMaterial( GLenum(face), GLenum(mode) ) -> None', 
	argNames=('face', 'mode'),
)

# /usr/include/GL/gl.h 1207
glPixelZoom = platform.createBaseFunction( 
	'glPixelZoom', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat],
	doc='glPixelZoom( GLfloat(xfactor), GLfloat(yfactor) ) -> None', 
	argNames=('xfactor', 'yfactor'),
)

# /usr/include/GL/gl.h 1209
glPixelStoref = platform.createBaseFunction( 
	'glPixelStoref', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat],
	doc='glPixelStoref( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1210
glPixelStorei = platform.createBaseFunction( 
	'glPixelStorei', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint],
	doc='glPixelStorei( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1212
glPixelTransferf = platform.createBaseFunction( 
	'glPixelTransferf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat],
	doc='glPixelTransferf( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1213
glPixelTransferi = platform.createBaseFunction( 
	'glPixelTransferi', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint],
	doc='glPixelTransferi( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1216
glPixelMapfv = platform.createBaseFunction( 
	'glPixelMapfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, arrays.GLfloatArray],
	doc='glPixelMapfv( GLenum(map), GLsizei(mapsize), arrays.GLfloatArray(values) ) -> None', 
	argNames=('map', 'mapsize', 'values'),
)

glPixelMapfv = arrays.setInputArraySizeType(
	glPixelMapfv,
	None, # XXX Could not determine size of argument values for glPixelMapfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'values',
)

# /usr/include/GL/gl.h 1218
glPixelMapuiv = platform.createBaseFunction( 
	'glPixelMapuiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, arrays.GLuintArray],
	doc='glPixelMapuiv( GLenum(map), GLsizei(mapsize), arrays.GLuintArray(values) ) -> None', 
	argNames=('map', 'mapsize', 'values'),
)

glPixelMapuiv = arrays.setInputArraySizeType(
	glPixelMapuiv,
	None, # XXX Could not determine size of argument values for glPixelMapuiv arrays.GLuintArray
	arrays.GLuintArray, 
	'values',
)

# /usr/include/GL/gl.h 1220
glPixelMapusv = platform.createBaseFunction( 
	'glPixelMapusv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, arrays.GLushortArray],
	doc='glPixelMapusv( GLenum(map), GLsizei(mapsize), arrays.GLushortArray(values) ) -> None', 
	argNames=('map', 'mapsize', 'values'),
)

glPixelMapusv = arrays.setInputArraySizeType(
	glPixelMapusv,
	None, # XXX Could not determine size of argument values for glPixelMapusv arrays.GLushortArray
	arrays.GLushortArray, 
	'values',
)

# /usr/include/GL/gl.h 1222
glGetPixelMapfv = platform.createBaseFunction( 
	'glGetPixelMapfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glGetPixelMapfv( GLenum(map), arrays.GLfloatArray(values) ) -> None', 
	argNames=('map', 'values'),
)

# /usr/include/GL/gl.h 1223
glGetPixelMapuiv = platform.createBaseFunction( 
	'glGetPixelMapuiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLuintArray],
	doc='glGetPixelMapuiv( GLenum(map), arrays.GLuintArray(values) ) -> None', 
	argNames=('map', 'values'),
)

# /usr/include/GL/gl.h 1224
glGetPixelMapusv = platform.createBaseFunction( 
	'glGetPixelMapusv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLushortArray],
	doc='glGetPixelMapusv( GLenum(map), arrays.GLushortArray(values) ) -> None', 
	argNames=('map', 'values'),
)

# /usr/include/GL/gl.h 1229
glBitmap = platform.createBaseFunction( 
	'glBitmap', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, arrays.GLubyteArray],
	doc='glBitmap( GLsizei(width), GLsizei(height), GLfloat(xorig), GLfloat(yorig), GLfloat(xmove), GLfloat(ymove), arrays.GLubyteArray(bitmap) ) -> None', 
	argNames=('width', 'height', 'xorig', 'yorig', 'xmove', 'ymove', 'bitmap'),
)

glBitmap = arrays.setInputArraySizeType(
	glBitmap,
	None, # XXX Could not determine size of argument bitmap for glBitmap arrays.GLubyteArray
	arrays.GLubyteArray, 
	'bitmap',
)

# /usr/include/GL/gl.h 1234
glReadPixels = platform.createBaseFunction( 
	'glReadPixels', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glReadPixels( GLint(x), GLint(y), GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('x', 'y', 'width', 'height', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1238
glDrawPixels = platform.createBaseFunction( 
	'glDrawPixels', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glDrawPixels( GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('width', 'height', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1242
glCopyPixels = platform.createBaseFunction( 
	'glCopyPixels', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint, GLsizei, GLsizei, GLenum],
	doc='glCopyPixels( GLint(x), GLint(y), GLsizei(width), GLsizei(height), GLenum(type) ) -> None', 
	argNames=('x', 'y', 'width', 'height', 'type'),
)

# /usr/include/GL/gl.h 1248
glStencilFunc = platform.createBaseFunction( 
	'glStencilFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLuint],
	doc='glStencilFunc( GLenum(func), GLint(ref), GLuint(mask) ) -> None', 
	argNames=('func', 'ref', 'mask'),
)

# /usr/include/GL/gl.h 1250
glStencilMask = platform.createBaseFunction( 
	'glStencilMask', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glStencilMask( GLuint(mask) ) -> None', 
	argNames=('mask',),
)

# /usr/include/GL/gl.h 1252
glStencilOp = platform.createBaseFunction( 
	'glStencilOp', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLenum],
	doc='glStencilOp( GLenum(fail), GLenum(zfail), GLenum(zpass) ) -> None', 
	argNames=('fail', 'zfail', 'zpass'),
)

# /usr/include/GL/gl.h 1254
glClearStencil = platform.createBaseFunction( 
	'glClearStencil', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glClearStencil( GLint(s) ) -> None', 
	argNames=('s',),
)

# /usr/include/GL/gl.h 1262
glTexGend = platform.createBaseFunction( 
	'glTexGend', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLdouble],
	doc='glTexGend( GLenum(coord), GLenum(pname), GLdouble(param) ) -> None', 
	argNames=('coord', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1263
glTexGenf = platform.createBaseFunction( 
	'glTexGenf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLfloat],
	doc='glTexGenf( GLenum(coord), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('coord', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1264
glTexGeni = platform.createBaseFunction( 
	'glTexGeni', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint],
	doc='glTexGeni( GLenum(coord), GLenum(pname), GLint(param) ) -> None', 
	argNames=('coord', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1266
glTexGendv = platform.createBaseFunction( 
	'glTexGendv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLdoubleArray],
	doc='glTexGendv( GLenum(coord), GLenum(pname), arrays.GLdoubleArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)

glTexGendv = arrays.setInputArraySizeType(
	glTexGendv,
	None, # XXX Could not determine size of argument params for glTexGendv arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'params',
)

# /usr/include/GL/gl.h 1267
glTexGenfv = platform.createBaseFunction( 
	'glTexGenfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glTexGenfv( GLenum(coord), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)

glTexGenfv = arrays.setInputArraySizeType(
	glTexGenfv,
	None, # XXX Could not determine size of argument params for glTexGenfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1268
glTexGeniv = platform.createBaseFunction( 
	'glTexGeniv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glTexGeniv( GLenum(coord), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)

glTexGeniv = arrays.setInputArraySizeType(
	glTexGeniv,
	None, # XXX Could not determine size of argument params for glTexGeniv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1270
glGetTexGendv = platform.createBaseFunction( 
	'glGetTexGendv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLdoubleArray],
	doc='glGetTexGendv( GLenum(coord), GLenum(pname), arrays.GLdoubleArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1271
glGetTexGenfv = platform.createBaseFunction( 
	'glGetTexGenfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetTexGenfv( GLenum(coord), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1272
glGetTexGeniv = platform.createBaseFunction( 
	'glGetTexGeniv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetTexGeniv( GLenum(coord), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1275
glTexEnvf = platform.createBaseFunction( 
	'glTexEnvf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLfloat],
	doc='glTexEnvf( GLenum(target), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1276
glTexEnvi = platform.createBaseFunction( 
	'glTexEnvi', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint],
	doc='glTexEnvi( GLenum(target), GLenum(pname), GLint(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1278
glTexEnvfv = platform.createBaseFunction( 
	'glTexEnvfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glTexEnvfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glTexEnvfv = arrays.setInputArraySizeType(
	glTexEnvfv,
	None, # XXX Could not determine size of argument params for glTexEnvfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1279
glTexEnviv = platform.createBaseFunction( 
	'glTexEnviv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glTexEnviv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glTexEnviv = arrays.setInputArraySizeType(
	glTexEnviv,
	None, # XXX Could not determine size of argument params for glTexEnviv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1281
glGetTexEnvfv = platform.createBaseFunction( 
	'glGetTexEnvfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetTexEnvfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1282
glGetTexEnviv = platform.createBaseFunction( 
	'glGetTexEnviv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetTexEnviv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1285
glTexParameterf = platform.createBaseFunction( 
	'glTexParameterf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLfloat],
	doc='glTexParameterf( GLenum(target), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1286
glTexParameteri = platform.createBaseFunction( 
	'glTexParameteri', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint],
	doc='glTexParameteri( GLenum(target), GLenum(pname), GLint(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)

# /usr/include/GL/gl.h 1289
glTexParameterfv = platform.createBaseFunction( 
	'glTexParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glTexParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glTexParameterfv = arrays.setInputArraySizeType(
	glTexParameterfv,
	None, # XXX Could not determine size of argument params for glTexParameterfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1291
glTexParameteriv = platform.createBaseFunction( 
	'glTexParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glTexParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glTexParameteriv = arrays.setInputArraySizeType(
	glTexParameteriv,
	None, # XXX Could not determine size of argument params for glTexParameteriv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1294
glGetTexParameterfv = platform.createBaseFunction( 
	'glGetTexParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetTexParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1296
glGetTexParameteriv = platform.createBaseFunction( 
	'glGetTexParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetTexParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1299
glGetTexLevelParameterfv = platform.createBaseFunction( 
	'glGetTexLevelParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, arrays.GLfloatArray],
	doc='glGetTexLevelParameterfv( GLenum(target), GLint(level), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'level', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1301
glGetTexLevelParameteriv = platform.createBaseFunction( 
	'glGetTexLevelParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, arrays.GLintArray],
	doc='glGetTexLevelParameteriv( GLenum(target), GLint(level), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'level', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1308
glTexImage1D = platform.createBaseFunction( 
	'glTexImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glTexImage1D( GLenum(target), GLint(level), GLint(internalFormat), GLsizei(width), GLint(border), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'internalFormat', 'width', 'border', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1314
glTexImage2D = platform.createBaseFunction( 
	'glTexImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glTexImage2D( GLenum(target), GLint(level), GLint(internalFormat), GLsizei(width), GLsizei(height), GLint(border), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'internalFormat', 'width', 'height', 'border', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1318
glGetTexImage = platform.createBaseFunction( 
	'glGetTexImage', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glGetTexImage( GLenum(target), GLint(level), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1323
glGenTextures = platform.createBaseFunction( 
	'glGenTextures', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, arrays.GLuintArray],
	doc='glGenTextures( GLsizei(n), arrays.GLuintArray(textures) ) -> None', 
	argNames=('n', 'textures'),
)

glGenTextures = arrays.setInputArraySizeType(
	glGenTextures,
	None, # XXX Could not determine size of argument textures for glGenTextures arrays.GLuintArray
	arrays.GLuintArray, 
	'textures',
)

# /usr/include/GL/gl.h 1325
glDeleteTextures = platform.createBaseFunction( 
	'glDeleteTextures', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, arrays.GLuintArray],
	doc='glDeleteTextures( GLsizei(n), arrays.GLuintArray(textures) ) -> None', 
	argNames=('n', 'textures'),
)

glDeleteTextures = arrays.setInputArraySizeType(
	glDeleteTextures,
	None, # XXX Could not determine size of argument textures for glDeleteTextures arrays.GLuintArray
	arrays.GLuintArray, 
	'textures',
)

# /usr/include/GL/gl.h 1327
glBindTexture = platform.createBaseFunction( 
	'glBindTexture', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLuint],
	doc='glBindTexture( GLenum(target), GLuint(texture) ) -> None', 
	argNames=('target', 'texture'),
)

# /usr/include/GL/gl.h 1331
glPrioritizeTextures = platform.createBaseFunction( 
	'glPrioritizeTextures', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, arrays.GLuintArray, arrays.GLclampfArray],
	doc='glPrioritizeTextures( GLsizei(n), arrays.GLuintArray(textures), arrays.GLclampfArray(priorities) ) -> None', 
	argNames=('n', 'textures', 'priorities'),
)

glPrioritizeTextures = arrays.setInputArraySizeType(
	glPrioritizeTextures,
	None, # XXX Could not determine size of argument textures for glPrioritizeTextures arrays.GLuintArray
	arrays.GLuintArray, 
	'textures',
)

glPrioritizeTextures = arrays.setInputArraySizeType(
	glPrioritizeTextures,
	None, # XXX Could not determine size of argument priorities for glPrioritizeTextures arrays.GLclampfArray
	arrays.GLclampfArray, 
	'priorities',
)

# /usr/include/GL/gl.h 1335
glAreTexturesResident = platform.createBaseFunction( 
	'glAreTexturesResident', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLsizei, arrays.GLuintArray, ctypes.POINTER(GLboolean)],
	doc='glAreTexturesResident( GLsizei(n), arrays.GLuintArray(textures), ctypes.POINTER(GLboolean)(residences) ) -> GLboolean', 
	argNames=('n', 'textures', 'residences'),
)

glAreTexturesResident = arrays.setInputArraySizeType(
	glAreTexturesResident,
	None, # XXX Could not determine size of argument textures for glAreTexturesResident arrays.GLuintArray
	arrays.GLuintArray, 
	'textures',
)

# /usr/include/GL/gl.h 1337
glIsTexture = platform.createBaseFunction( 
	'glIsTexture', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLuint],
	doc='glIsTexture( GLuint(texture) ) -> GLboolean', 
	argNames=('texture',),
)

# /usr/include/GL/gl.h 1343
glTexSubImage1D = platform.createBaseFunction( 
	'glTexSubImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glTexSubImage1D( GLenum(target), GLint(level), GLint(xoffset), GLsizei(width), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'width', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1350
glTexSubImage2D = platform.createBaseFunction( 
	'glTexSubImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glTexSubImage2D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'width', 'height', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1356
glCopyTexImage1D = platform.createBaseFunction( 
	'glCopyTexImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint],
	doc='glCopyTexImage1D( GLenum(target), GLint(level), GLenum(internalformat), GLint(x), GLint(y), GLsizei(width), GLint(border) ) -> None', 
	argNames=('target', 'level', 'internalformat', 'x', 'y', 'width', 'border'),
)

# /usr/include/GL/gl.h 1363
glCopyTexImage2D = platform.createBaseFunction( 
	'glCopyTexImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint],
	doc='glCopyTexImage2D( GLenum(target), GLint(level), GLenum(internalformat), GLint(x), GLint(y), GLsizei(width), GLsizei(height), GLint(border) ) -> None', 
	argNames=('target', 'level', 'internalformat', 'x', 'y', 'width', 'height', 'border'),
)

# /usr/include/GL/gl.h 1368
glCopyTexSubImage1D = platform.createBaseFunction( 
	'glCopyTexSubImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint, GLsizei],
	doc='glCopyTexSubImage1D( GLenum(target), GLint(level), GLint(xoffset), GLint(x), GLint(y), GLsizei(width) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'x', 'y', 'width'),
)

# /usr/include/GL/gl.h 1374
glCopyTexSubImage2D = platform.createBaseFunction( 
	'glCopyTexSubImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei],
	doc='glCopyTexSubImage2D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'x', 'y', 'width', 'height'),
)

# /usr/include/GL/gl.h 1383
glMap1d = platform.createBaseFunction( 
	'glMap1d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble, GLint, GLint, arrays.GLdoubleArray],
	doc='glMap1d( GLenum(target), GLdouble(u1), GLdouble(u2), GLint(stride), GLint(order), arrays.GLdoubleArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'stride', 'order', 'points'),
)

glMap1d = arrays.setInputArraySizeType(
	glMap1d,
	None, # XXX Could not determine size of argument points for glMap1d arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'points',
)

# /usr/include/GL/gl.h 1386
glMap1f = platform.createBaseFunction( 
	'glMap1f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat, GLint, GLint, arrays.GLfloatArray],
	doc='glMap1f( GLenum(target), GLfloat(u1), GLfloat(u2), GLint(stride), GLint(order), arrays.GLfloatArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'stride', 'order', 'points'),
)

glMap1f = arrays.setInputArraySizeType(
	glMap1f,
	None, # XXX Could not determine size of argument points for glMap1f arrays.GLfloatArray
	arrays.GLfloatArray, 
	'points',
)

# /usr/include/GL/gl.h 1391
glMap2d = platform.createBaseFunction( 
	'glMap2d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, arrays.GLdoubleArray],
	doc='glMap2d( GLenum(target), GLdouble(u1), GLdouble(u2), GLint(ustride), GLint(uorder), GLdouble(v1), GLdouble(v2), GLint(vstride), GLint(vorder), arrays.GLdoubleArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'ustride', 'uorder', 'v1', 'v2', 'vstride', 'vorder', 'points'),
)

glMap2d = arrays.setInputArraySizeType(
	glMap2d,
	None, # XXX Could not determine size of argument points for glMap2d arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'points',
)

# /usr/include/GL/gl.h 1395
glMap2f = platform.createBaseFunction( 
	'glMap2f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, arrays.GLfloatArray],
	doc='glMap2f( GLenum(target), GLfloat(u1), GLfloat(u2), GLint(ustride), GLint(uorder), GLfloat(v1), GLfloat(v2), GLint(vstride), GLint(vorder), arrays.GLfloatArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'ustride', 'uorder', 'v1', 'v2', 'vstride', 'vorder', 'points'),
)

glMap2f = arrays.setInputArraySizeType(
	glMap2f,
	None, # XXX Could not determine size of argument points for glMap2f arrays.GLfloatArray
	arrays.GLfloatArray, 
	'points',
)

# /usr/include/GL/gl.h 1397
glGetMapdv = platform.createBaseFunction( 
	'glGetMapdv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLdoubleArray],
	doc='glGetMapdv( GLenum(target), GLenum(query), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'query', 'v'),
)

# /usr/include/GL/gl.h 1398
glGetMapfv = platform.createBaseFunction( 
	'glGetMapfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetMapfv( GLenum(target), GLenum(query), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'query', 'v'),
)

# /usr/include/GL/gl.h 1399
glGetMapiv = platform.createBaseFunction( 
	'glGetMapiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetMapiv( GLenum(target), GLenum(query), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'query', 'v'),
)

# /usr/include/GL/gl.h 1401
glEvalCoord1d = platform.createBaseFunction( 
	'glEvalCoord1d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble],
	doc='glEvalCoord1d( GLdouble(u) ) -> None', 
	argNames=('u',),
)

# /usr/include/GL/gl.h 1402
glEvalCoord1f = platform.createBaseFunction( 
	'glEvalCoord1f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glEvalCoord1f( GLfloat(u) ) -> None', 
	argNames=('u',),
)

# /usr/include/GL/gl.h 1404
glEvalCoord1dv = platform.createBaseFunction( 
	'glEvalCoord1dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glEvalCoord1dv( arrays.GLdoubleArray(u) ) -> None', 
	argNames=('u',),
)

glEvalCoord1dv = arrays.setInputArraySizeType(
	glEvalCoord1dv,
	1,
	arrays.GLdoubleArray,
	'u',
)

# /usr/include/GL/gl.h 1405
glEvalCoord1fv = platform.createBaseFunction( 
	'glEvalCoord1fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glEvalCoord1fv( arrays.GLfloatArray(u) ) -> None', 
	argNames=('u',),
)

glEvalCoord1fv = arrays.setInputArraySizeType(
	glEvalCoord1fv,
	1,
	arrays.GLfloatArray,
	'u',
)

# /usr/include/GL/gl.h 1407
glEvalCoord2d = platform.createBaseFunction( 
	'glEvalCoord2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble, GLdouble],
	doc='glEvalCoord2d( GLdouble(u), GLdouble(v) ) -> None', 
	argNames=('u', 'v'),
)

# /usr/include/GL/gl.h 1408
glEvalCoord2f = platform.createBaseFunction( 
	'glEvalCoord2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat, GLfloat],
	doc='glEvalCoord2f( GLfloat(u), GLfloat(v) ) -> None', 
	argNames=('u', 'v'),
)

# /usr/include/GL/gl.h 1410
glEvalCoord2dv = platform.createBaseFunction( 
	'glEvalCoord2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glEvalCoord2dv( arrays.GLdoubleArray(u) ) -> None', 
	argNames=('u',),
)

glEvalCoord2dv = arrays.setInputArraySizeType(
	glEvalCoord2dv,
	2,
	arrays.GLdoubleArray,
	'u',
)

# /usr/include/GL/gl.h 1411
glEvalCoord2fv = platform.createBaseFunction( 
	'glEvalCoord2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glEvalCoord2fv( arrays.GLfloatArray(u) ) -> None', 
	argNames=('u',),
)

glEvalCoord2fv = arrays.setInputArraySizeType(
	glEvalCoord2fv,
	2,
	arrays.GLfloatArray,
	'u',
)

# /usr/include/GL/gl.h 1413
glMapGrid1d = platform.createBaseFunction( 
	'glMapGrid1d', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLdouble, GLdouble],
	doc='glMapGrid1d( GLint(un), GLdouble(u1), GLdouble(u2) ) -> None', 
	argNames=('un', 'u1', 'u2'),
)

# /usr/include/GL/gl.h 1414
glMapGrid1f = platform.createBaseFunction( 
	'glMapGrid1f', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLfloat, GLfloat],
	doc='glMapGrid1f( GLint(un), GLfloat(u1), GLfloat(u2) ) -> None', 
	argNames=('un', 'u1', 'u2'),
)

# /usr/include/GL/gl.h 1417
glMapGrid2d = platform.createBaseFunction( 
	'glMapGrid2d', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble],
	doc='glMapGrid2d( GLint(un), GLdouble(u1), GLdouble(u2), GLint(vn), GLdouble(v1), GLdouble(v2) ) -> None', 
	argNames=('un', 'u1', 'u2', 'vn', 'v1', 'v2'),
)

# /usr/include/GL/gl.h 1419
glMapGrid2f = platform.createBaseFunction( 
	'glMapGrid2f', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat],
	doc='glMapGrid2f( GLint(un), GLfloat(u1), GLfloat(u2), GLint(vn), GLfloat(v1), GLfloat(v2) ) -> None', 
	argNames=('un', 'u1', 'u2', 'vn', 'v1', 'v2'),
)

# /usr/include/GL/gl.h 1421
glEvalPoint1 = platform.createBaseFunction( 
	'glEvalPoint1', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glEvalPoint1( GLint(i) ) -> None', 
	argNames=('i',),
)

# /usr/include/GL/gl.h 1423
glEvalPoint2 = platform.createBaseFunction( 
	'glEvalPoint2', dll=platform.GL, resultType=None, 
	argTypes=[GLint, GLint],
	doc='glEvalPoint2( GLint(i), GLint(j) ) -> None', 
	argNames=('i', 'j'),
)

# /usr/include/GL/gl.h 1425
glEvalMesh1 = platform.createBaseFunction( 
	'glEvalMesh1', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint],
	doc='glEvalMesh1( GLenum(mode), GLint(i1), GLint(i2) ) -> None', 
	argNames=('mode', 'i1', 'i2'),
)

# /usr/include/GL/gl.h 1427
glEvalMesh2 = platform.createBaseFunction( 
	'glEvalMesh2', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint],
	doc='glEvalMesh2( GLenum(mode), GLint(i1), GLint(i2), GLint(j1), GLint(j2) ) -> None', 
	argNames=('mode', 'i1', 'i2', 'j1', 'j2'),
)

# /usr/include/GL/gl.h 1434
glFogf = platform.createBaseFunction( 
	'glFogf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat],
	doc='glFogf( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1436
glFogi = platform.createBaseFunction( 
	'glFogi', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint],
	doc='glFogi( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)

# /usr/include/GL/gl.h 1438
glFogfv = platform.createBaseFunction( 
	'glFogfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glFogfv( GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('pname', 'params'),
)

glFogfv = arrays.setInputArraySizeType(
	glFogfv,
	None, # XXX Could not determine size of argument params for glFogfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1440
glFogiv = platform.createBaseFunction( 
	'glFogiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glFogiv( GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('pname', 'params'),
)

glFogiv = arrays.setInputArraySizeType(
	glFogiv,
	None, # XXX Could not determine size of argument params for glFogiv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1447
glFeedbackBuffer = platform.createBaseFunction( 
	'glFeedbackBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, GLenum, arrays.GLfloatArray],
	doc='glFeedbackBuffer( GLsizei(size), GLenum(type), arrays.GLfloatArray(buffer) ) -> None', 
	argNames=('size', 'type', 'buffer'),
)

glFeedbackBuffer = arrays.setInputArraySizeType(
	glFeedbackBuffer,
	None, # XXX Could not determine size of argument buffer for glFeedbackBuffer arrays.GLfloatArray
	arrays.GLfloatArray, 
	'buffer',
)

# /usr/include/GL/gl.h 1449
glPassThrough = platform.createBaseFunction( 
	'glPassThrough', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glPassThrough( GLfloat(token) ) -> None', 
	argNames=('token',),
)

# /usr/include/GL/gl.h 1451
glSelectBuffer = platform.createBaseFunction( 
	'glSelectBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei, arrays.GLuintArray],
	doc='glSelectBuffer( GLsizei(size), arrays.GLuintArray(buffer) ) -> None', 
	argNames=('size', 'buffer'),
)

glSelectBuffer = arrays.setInputArraySizeType(
	glSelectBuffer,
	None, # XXX Could not determine size of argument buffer for glSelectBuffer arrays.GLuintArray
	arrays.GLuintArray, 
	'buffer',
)

# /usr/include/GL/gl.h 1453
glInitNames = platform.createBaseFunction( 
	'glInitNames', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glInitNames(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 1455
glLoadName = platform.createBaseFunction( 
	'glLoadName', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glLoadName( GLuint(name) ) -> None', 
	argNames=('name',),
)

# /usr/include/GL/gl.h 1457
glPushName = platform.createBaseFunction( 
	'glPushName', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glPushName( GLuint(name) ) -> None', 
	argNames=('name',),
)

# /usr/include/GL/gl.h 1459
glPopName = platform.createBaseFunction( 
	'glPopName', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopName(  ) -> None', 
	argNames=(),
)

# /usr/include/GL/gl.h 1510
glDrawRangeElements = platform.createBaseFunction( 
	'glDrawRangeElements', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLuint, GLuint, GLsizei, GLenum, ctypes.POINTER(GLvoid)],
	doc='glDrawRangeElements( GLenum(mode), GLuint(start), GLuint(end), GLsizei(count), GLenum(type), ctypes.POINTER(GLvoid)(indices) ) -> None', 
	argNames=('mode', 'start', 'end', 'count', 'type', 'indices'),
)

# /usr/include/GL/gl.h 1517
glTexImage3D = platform.createBaseFunction( 
	'glTexImage3D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glTexImage3D( GLenum(target), GLint(level), GLint(internalFormat), GLsizei(width), GLsizei(height), GLsizei(depth), GLint(border), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'internalFormat', 'width', 'height', 'depth', 'border', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1524
glTexSubImage3D = platform.createBaseFunction( 
	'glTexSubImage3D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glTexSubImage3D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLint(zoffset), GLsizei(width), GLsizei(height), GLsizei(depth), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'zoffset', 'width', 'height', 'depth', 'format', 'type', 'pixels'),
)

# /usr/include/GL/gl.h 1530
glCopyTexSubImage3D = platform.createBaseFunction( 
	'glCopyTexSubImage3D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei],
	doc='glCopyTexSubImage3D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLint(zoffset), GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'zoffset', 'x', 'y', 'width', 'height'),
)

# /usr/include/GL/gl.h 1621
glColorTable = platform.createBaseFunction( 
	'glColorTable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glColorTable( GLenum(target), GLenum(internalformat), GLsizei(width), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(table) ) -> None', 
	argNames=('target', 'internalformat', 'width', 'format', 'type', 'table'),
)

# /usr/include/GL/gl.h 1626
glColorSubTable = platform.createBaseFunction( 
	'glColorSubTable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glColorSubTable( GLenum(target), GLsizei(start), GLsizei(count), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(data) ) -> None', 
	argNames=('target', 'start', 'count', 'format', 'type', 'data'),
)

# /usr/include/GL/gl.h 1629
glColorTableParameteriv = platform.createBaseFunction( 
	'glColorTableParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glColorTableParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glColorTableParameteriv = arrays.setInputArraySizeType(
	glColorTableParameteriv,
	None, # XXX Could not determine size of argument params for glColorTableParameteriv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1632
glColorTableParameterfv = platform.createBaseFunction( 
	'glColorTableParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glColorTableParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glColorTableParameterfv = arrays.setInputArraySizeType(
	glColorTableParameterfv,
	None, # XXX Could not determine size of argument params for glColorTableParameterfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1635
glCopyColorSubTable = platform.createBaseFunction( 
	'glCopyColorSubTable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, GLint, GLint, GLsizei],
	doc='glCopyColorSubTable( GLenum(target), GLsizei(start), GLint(x), GLint(y), GLsizei(width) ) -> None', 
	argNames=('target', 'start', 'x', 'y', 'width'),
)

# /usr/include/GL/gl.h 1638
glCopyColorTable = platform.createBaseFunction( 
	'glCopyColorTable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint, GLint, GLsizei],
	doc='glCopyColorTable( GLenum(target), GLenum(internalformat), GLint(x), GLint(y), GLsizei(width) ) -> None', 
	argNames=('target', 'internalformat', 'x', 'y', 'width'),
)

# /usr/include/GL/gl.h 1641
glGetColorTable = platform.createBaseFunction( 
	'glGetColorTable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glGetColorTable( GLenum(target), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(table) ) -> None', 
	argNames=('target', 'format', 'type', 'table'),
)

# /usr/include/GL/gl.h 1644
glGetColorTableParameterfv = platform.createBaseFunction( 
	'glGetColorTableParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetColorTableParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1647
glGetColorTableParameteriv = platform.createBaseFunction( 
	'glGetColorTableParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetColorTableParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1649
glBlendEquation = platform.createBaseFunction( 
	'glBlendEquation', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glBlendEquation( GLenum(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gl.h 1652
glBlendColor = platform.createBaseFunction( 
	'glBlendColor', dll=platform.GL, resultType=None, 
	argTypes=[GLclampf, GLclampf, GLclampf, GLclampf],
	doc='glBlendColor( GLclampf(red), GLclampf(green), GLclampf(blue), GLclampf(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)

# /usr/include/GL/gl.h 1655
glHistogram = platform.createBaseFunction( 
	'glHistogram', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLsizei, GLenum, GLboolean],
	doc='glHistogram( GLenum(target), GLsizei(width), GLenum(internalformat), GLboolean(sink) ) -> None', 
	argNames=('target', 'width', 'internalformat', 'sink'),
)

# /usr/include/GL/gl.h 1657
glResetHistogram = platform.createBaseFunction( 
	'glResetHistogram', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glResetHistogram( GLenum(target) ) -> None', 
	argNames=('target',),
)

# /usr/include/GL/gl.h 1661
glGetHistogram = platform.createBaseFunction( 
	'glGetHistogram', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLboolean, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glGetHistogram( GLenum(target), GLboolean(reset), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(values) ) -> None', 
	argNames=('target', 'reset', 'format', 'type', 'values'),
)

# /usr/include/GL/gl.h 1664
glGetHistogramParameterfv = platform.createBaseFunction( 
	'glGetHistogramParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetHistogramParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1667
glGetHistogramParameteriv = platform.createBaseFunction( 
	'glGetHistogramParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetHistogramParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1670
glMinmax = platform.createBaseFunction( 
	'glMinmax', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLboolean],
	doc='glMinmax( GLenum(target), GLenum(internalformat), GLboolean(sink) ) -> None', 
	argNames=('target', 'internalformat', 'sink'),
)

# /usr/include/GL/gl.h 1672
glResetMinmax = platform.createBaseFunction( 
	'glResetMinmax', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glResetMinmax( GLenum(target) ) -> None', 
	argNames=('target',),
)

# /usr/include/GL/gl.h 1676
glGetMinmax = platform.createBaseFunction( 
	'glGetMinmax', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLboolean, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glGetMinmax( GLenum(target), GLboolean(reset), GLenum(format), GLenum(types), ctypes.POINTER(GLvoid)(values) ) -> None', 
	argNames=('target', 'reset', 'format', 'types', 'values'),
)

# /usr/include/GL/gl.h 1679
glGetMinmaxParameterfv = platform.createBaseFunction( 
	'glGetMinmaxParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetMinmaxParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1682
glGetMinmaxParameteriv = platform.createBaseFunction( 
	'glGetMinmaxParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetMinmaxParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1686
glConvolutionFilter1D = platform.createBaseFunction( 
	'glConvolutionFilter1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glConvolutionFilter1D( GLenum(target), GLenum(internalformat), GLsizei(width), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(image) ) -> None', 
	argNames=('target', 'internalformat', 'width', 'format', 'type', 'image'),
)

# /usr/include/GL/gl.h 1690
glConvolutionFilter2D = platform.createBaseFunction( 
	'glConvolutionFilter2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glConvolutionFilter2D( GLenum(target), GLenum(internalformat), GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(image) ) -> None', 
	argNames=('target', 'internalformat', 'width', 'height', 'format', 'type', 'image'),
)

# /usr/include/GL/gl.h 1693
glConvolutionParameterf = platform.createBaseFunction( 
	'glConvolutionParameterf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLfloat],
	doc='glConvolutionParameterf( GLenum(target), GLenum(pname), GLfloat(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1696
glConvolutionParameterfv = platform.createBaseFunction( 
	'glConvolutionParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glConvolutionParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glConvolutionParameterfv = arrays.setInputArraySizeType(
	glConvolutionParameterfv,
	None, # XXX Could not determine size of argument params for glConvolutionParameterfv arrays.GLfloatArray
	arrays.GLfloatArray, 
	'params',
)

# /usr/include/GL/gl.h 1699
glConvolutionParameteri = platform.createBaseFunction( 
	'glConvolutionParameteri', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint],
	doc='glConvolutionParameteri( GLenum(target), GLenum(pname), GLint(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1702
glConvolutionParameteriv = platform.createBaseFunction( 
	'glConvolutionParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glConvolutionParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

glConvolutionParameteriv = arrays.setInputArraySizeType(
	glConvolutionParameteriv,
	None, # XXX Could not determine size of argument params for glConvolutionParameteriv arrays.GLintArray
	arrays.GLintArray, 
	'params',
)

# /usr/include/GL/gl.h 1705
glCopyConvolutionFilter1D = platform.createBaseFunction( 
	'glCopyConvolutionFilter1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint, GLint, GLsizei],
	doc='glCopyConvolutionFilter1D( GLenum(target), GLenum(internalformat), GLint(x), GLint(y), GLsizei(width) ) -> None', 
	argNames=('target', 'internalformat', 'x', 'y', 'width'),
)

# /usr/include/GL/gl.h 1709
glCopyConvolutionFilter2D = platform.createBaseFunction( 
	'glCopyConvolutionFilter2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLint, GLint, GLsizei, GLsizei],
	doc='glCopyConvolutionFilter2D( GLenum(target), GLenum(internalformat), GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('target', 'internalformat', 'x', 'y', 'width', 'height'),
)

# /usr/include/GL/gl.h 1712
glGetConvolutionFilter = platform.createBaseFunction( 
	'glGetConvolutionFilter', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLenum, ctypes.POINTER(GLvoid)],
	doc='glGetConvolutionFilter( GLenum(target), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(image) ) -> None', 
	argNames=('target', 'format', 'type', 'image'),
)

# /usr/include/GL/gl.h 1715
glGetConvolutionParameterfv = platform.createBaseFunction( 
	'glGetConvolutionParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLfloatArray],
	doc='glGetConvolutionParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1718
glGetConvolutionParameteriv = platform.createBaseFunction( 
	'glGetConvolutionParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, arrays.GLintArray],
	doc='glGetConvolutionParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)

# /usr/include/GL/gl.h 1722
glSeparableFilter2D = platform.createBaseFunction( 
	'glSeparableFilter2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ctypes.POINTER(GLvoid), ctypes.POINTER(GLvoid)],
	doc='glSeparableFilter2D( GLenum(target), GLenum(internalformat), GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(row), ctypes.POINTER(GLvoid)(column) ) -> None', 
	argNames=('target', 'internalformat', 'width', 'height', 'format', 'type', 'row', 'column'),
)

# /usr/include/GL/gl.h 1725
glGetSeparableFilter = platform.createBaseFunction( 
	'glGetSeparableFilter', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum, GLenum, ctypes.POINTER(GLvoid), ctypes.POINTER(GLvoid), ctypes.POINTER(GLvoid)],
	doc='glGetSeparableFilter( GLenum(target), GLenum(format), GLenum(type), ctypes.POINTER(GLvoid)(row), ctypes.POINTER(GLvoid)(column), ctypes.POINTER(GLvoid)(span) ) -> None', 
	argNames=('target', 'format', 'type', 'row', 'column', 'span'),
)

# /usr/include/GL/gl.h 1873
glActiveTexture = platform.createBaseFunction( 
	'glActiveTexture', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glActiveTexture( GLenum(texture) ) -> None', 
	argNames=('texture',),
)

# /usr/include/GL/gl.h 1875
glClientActiveTexture = platform.createBaseFunction( 
	'glClientActiveTexture', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glClientActiveTexture( GLenum(texture) ) -> None', 
	argNames=('texture',),
)

# /usr/include/GL/gl.h 1877
glCompressedTexImage1D = platform.createBaseFunction( 
	'glCompressedTexImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glCompressedTexImage1D( GLenum(target), GLint(level), GLenum(internalformat), GLsizei(width), GLint(border), GLsizei(imageSize), ctypes.POINTER(GLvoid)(data) ) -> None', 
	argNames=('target', 'level', 'internalformat', 'width', 'border', 'imageSize', 'data'),
)

# /usr/include/GL/gl.h 1879
glCompressedTexImage2D = platform.createBaseFunction( 
	'glCompressedTexImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glCompressedTexImage2D( GLenum(target), GLint(level), GLenum(internalformat), GLsizei(width), GLsizei(height), GLint(border), GLsizei(imageSize), ctypes.POINTER(GLvoid)(data) ) -> None', 
	argNames=('target', 'level', 'internalformat', 'width', 'height', 'border', 'imageSize', 'data'),
)

# /usr/include/GL/gl.h 1881
glCompressedTexImage3D = platform.createBaseFunction( 
	'glCompressedTexImage3D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glCompressedTexImage3D( GLenum(target), GLint(level), GLenum(internalformat), GLsizei(width), GLsizei(height), GLsizei(depth), GLint(border), GLsizei(imageSize), ctypes.POINTER(GLvoid)(data) ) -> None', 
	argNames=('target', 'level', 'internalformat', 'width', 'height', 'depth', 'border', 'imageSize', 'data'),
)

# /usr/include/GL/gl.h 1883
glCompressedTexSubImage1D = platform.createBaseFunction( 
	'glCompressedTexSubImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glCompressedTexSubImage1D( GLenum(target), GLint(level), GLint(xoffset), GLsizei(width), GLenum(format), GLsizei(imageSize), ctypes.POINTER(GLvoid)(data) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'width', 'format', 'imageSize', 'data'),
)

# /usr/include/GL/gl.h 1885
glCompressedTexSubImage2D = platform.createBaseFunction( 
	'glCompressedTexSubImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glCompressedTexSubImage2D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLsizei(width), GLsizei(height), GLenum(format), GLsizei(imageSize), ctypes.POINTER(GLvoid)(data) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'width', 'height', 'format', 'imageSize', 'data'),
)

# /usr/include/GL/gl.h 1887
glCompressedTexSubImage3D = platform.createBaseFunction( 
	'glCompressedTexSubImage3D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ctypes.POINTER(GLvoid)],
	doc='glCompressedTexSubImage3D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLint(zoffset), GLsizei(width), GLsizei(height), GLsizei(depth), GLenum(format), GLsizei(imageSize), ctypes.POINTER(GLvoid)(data) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'zoffset', 'width', 'height', 'depth', 'format', 'imageSize', 'data'),
)

# /usr/include/GL/gl.h 1889
glGetCompressedTexImage = platform.createBaseFunction( 
	'glGetCompressedTexImage', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, ctypes.POINTER(GLvoid)],
	doc='glGetCompressedTexImage( GLenum(target), GLint(lod), ctypes.POINTER(GLvoid)(img) ) -> None', 
	argNames=('target', 'lod', 'img'),
)

# /usr/include/GL/gl.h 1891
glMultiTexCoord1d = platform.createBaseFunction( 
	'glMultiTexCoord1d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble],
	doc='glMultiTexCoord1d( GLenum(target), GLdouble(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 1893
glMultiTexCoord1dv = platform.createBaseFunction( 
	'glMultiTexCoord1dv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord1dv( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1dv = arrays.setInputArraySizeType(
	glMultiTexCoord1dv,
	1,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1895
glMultiTexCoord1f = platform.createBaseFunction( 
	'glMultiTexCoord1f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat],
	doc='glMultiTexCoord1f( GLenum(target), GLfloat(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 1897
glMultiTexCoord1fv = platform.createBaseFunction( 
	'glMultiTexCoord1fv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord1fv( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1fv = arrays.setInputArraySizeType(
	glMultiTexCoord1fv,
	1,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1899
glMultiTexCoord1i = platform.createBaseFunction( 
	'glMultiTexCoord1i', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint],
	doc='glMultiTexCoord1i( GLenum(target), GLint(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 1901
glMultiTexCoord1iv = platform.createBaseFunction( 
	'glMultiTexCoord1iv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord1iv( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1iv = arrays.setInputArraySizeType(
	glMultiTexCoord1iv,
	1,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1903
glMultiTexCoord1s = platform.createBaseFunction( 
	'glMultiTexCoord1s', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort],
	doc='glMultiTexCoord1s( GLenum(target), GLshort(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 1905
glMultiTexCoord1sv = platform.createBaseFunction( 
	'glMultiTexCoord1sv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord1sv( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1sv = arrays.setInputArraySizeType(
	glMultiTexCoord1sv,
	1,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1907
glMultiTexCoord2d = platform.createBaseFunction( 
	'glMultiTexCoord2d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble],
	doc='glMultiTexCoord2d( GLenum(target), GLdouble(s), GLdouble(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 1909
glMultiTexCoord2dv = platform.createBaseFunction( 
	'glMultiTexCoord2dv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord2dv( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2dv = arrays.setInputArraySizeType(
	glMultiTexCoord2dv,
	2,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1911
glMultiTexCoord2f = platform.createBaseFunction( 
	'glMultiTexCoord2f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat],
	doc='glMultiTexCoord2f( GLenum(target), GLfloat(s), GLfloat(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 1913
glMultiTexCoord2fv = platform.createBaseFunction( 
	'glMultiTexCoord2fv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord2fv( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2fv = arrays.setInputArraySizeType(
	glMultiTexCoord2fv,
	2,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1915
glMultiTexCoord2i = platform.createBaseFunction( 
	'glMultiTexCoord2i', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint],
	doc='glMultiTexCoord2i( GLenum(target), GLint(s), GLint(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 1917
glMultiTexCoord2iv = platform.createBaseFunction( 
	'glMultiTexCoord2iv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord2iv( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2iv = arrays.setInputArraySizeType(
	glMultiTexCoord2iv,
	2,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1919
glMultiTexCoord2s = platform.createBaseFunction( 
	'glMultiTexCoord2s', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort, GLshort],
	doc='glMultiTexCoord2s( GLenum(target), GLshort(s), GLshort(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 1921
glMultiTexCoord2sv = platform.createBaseFunction( 
	'glMultiTexCoord2sv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord2sv( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2sv = arrays.setInputArraySizeType(
	glMultiTexCoord2sv,
	2,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1923
glMultiTexCoord3d = platform.createBaseFunction( 
	'glMultiTexCoord3d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble, GLdouble],
	doc='glMultiTexCoord3d( GLenum(target), GLdouble(s), GLdouble(t), GLdouble(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 1925
glMultiTexCoord3dv = platform.createBaseFunction( 
	'glMultiTexCoord3dv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord3dv( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3dv = arrays.setInputArraySizeType(
	glMultiTexCoord3dv,
	3,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1927
glMultiTexCoord3f = platform.createBaseFunction( 
	'glMultiTexCoord3f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat, GLfloat],
	doc='glMultiTexCoord3f( GLenum(target), GLfloat(s), GLfloat(t), GLfloat(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 1929
glMultiTexCoord3fv = platform.createBaseFunction( 
	'glMultiTexCoord3fv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord3fv( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3fv = arrays.setInputArraySizeType(
	glMultiTexCoord3fv,
	3,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1931
glMultiTexCoord3i = platform.createBaseFunction( 
	'glMultiTexCoord3i', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint],
	doc='glMultiTexCoord3i( GLenum(target), GLint(s), GLint(t), GLint(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 1933
glMultiTexCoord3iv = platform.createBaseFunction( 
	'glMultiTexCoord3iv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord3iv( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3iv = arrays.setInputArraySizeType(
	glMultiTexCoord3iv,
	3,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1935
glMultiTexCoord3s = platform.createBaseFunction( 
	'glMultiTexCoord3s', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort, GLshort, GLshort],
	doc='glMultiTexCoord3s( GLenum(target), GLshort(s), GLshort(t), GLshort(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 1937
glMultiTexCoord3sv = platform.createBaseFunction( 
	'glMultiTexCoord3sv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord3sv( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3sv = arrays.setInputArraySizeType(
	glMultiTexCoord3sv,
	3,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1939
glMultiTexCoord4d = platform.createBaseFunction( 
	'glMultiTexCoord4d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glMultiTexCoord4d( GLenum(target), GLdouble(s), GLdouble(t), GLdouble(r), GLdouble(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1941
glMultiTexCoord4dv = platform.createBaseFunction( 
	'glMultiTexCoord4dv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord4dv( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4dv = arrays.setInputArraySizeType(
	glMultiTexCoord4dv,
	4,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 1943
glMultiTexCoord4f = platform.createBaseFunction( 
	'glMultiTexCoord4f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glMultiTexCoord4f( GLenum(target), GLfloat(s), GLfloat(t), GLfloat(r), GLfloat(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1945
glMultiTexCoord4fv = platform.createBaseFunction( 
	'glMultiTexCoord4fv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord4fv( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4fv = arrays.setInputArraySizeType(
	glMultiTexCoord4fv,
	4,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 1947
glMultiTexCoord4i = platform.createBaseFunction( 
	'glMultiTexCoord4i', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint],
	doc='glMultiTexCoord4i( GLenum(target), GLint(s), GLint(t), GLint(r), GLint(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1949
glMultiTexCoord4iv = platform.createBaseFunction( 
	'glMultiTexCoord4iv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord4iv( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4iv = arrays.setInputArraySizeType(
	glMultiTexCoord4iv,
	4,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 1951
glMultiTexCoord4s = platform.createBaseFunction( 
	'glMultiTexCoord4s', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort, GLshort, GLshort, GLshort],
	doc='glMultiTexCoord4s( GLenum(target), GLshort(s), GLshort(t), GLshort(r), GLshort(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 1953
glMultiTexCoord4sv = platform.createBaseFunction( 
	'glMultiTexCoord4sv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord4sv( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4sv = arrays.setInputArraySizeType(
	glMultiTexCoord4sv,
	4,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 1956
glLoadTransposeMatrixd = platform.createBaseFunction( 
	'glLoadTransposeMatrixd', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glLoadTransposeMatrixd( arrays.GLdoubleArray(m) ) -> None', 
	argNames=('m',),
)

glLoadTransposeMatrixd = arrays.setInputArraySizeType(
	glLoadTransposeMatrixd,
	16,
	arrays.GLdoubleArray,
	'm',
)

# /usr/include/GL/gl.h 1958
glLoadTransposeMatrixf = platform.createBaseFunction( 
	'glLoadTransposeMatrixf', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glLoadTransposeMatrixf( arrays.GLfloatArray(m) ) -> None', 
	argNames=('m',),
)

glLoadTransposeMatrixf = arrays.setInputArraySizeType(
	glLoadTransposeMatrixf,
	16,
	arrays.GLfloatArray,
	'm',
)

# /usr/include/GL/gl.h 1960
glMultTransposeMatrixd = platform.createBaseFunction( 
	'glMultTransposeMatrixd', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glMultTransposeMatrixd( arrays.GLdoubleArray(m) ) -> None', 
	argNames=('m',),
)

glMultTransposeMatrixd = arrays.setInputArraySizeType(
	glMultTransposeMatrixd,
	16,
	arrays.GLdoubleArray,
	'm',
)

# /usr/include/GL/gl.h 1962
glMultTransposeMatrixf = platform.createBaseFunction( 
	'glMultTransposeMatrixf', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glMultTransposeMatrixf( arrays.GLfloatArray(m) ) -> None', 
	argNames=('m',),
)

glMultTransposeMatrixf = arrays.setInputArraySizeType(
	glMultTransposeMatrixf,
	16,
	arrays.GLfloatArray,
	'm',
)

# /usr/include/GL/gl.h 1964
glSampleCoverage = platform.createBaseFunction( 
	'glSampleCoverage', dll=platform.GL, resultType=None, 
	argTypes=[GLclampf, GLboolean],
	doc='glSampleCoverage( GLclampf(value), GLboolean(invert) ) -> None', 
	argNames=('value', 'invert'),
)

# /usr/include/GL/gl.h 2056
glActiveTextureARB = platform.createBaseFunction( 
	'glActiveTextureARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glActiveTextureARB( GLenum(texture) ) -> None', 
	argNames=('texture',),
)

# /usr/include/GL/gl.h 2057
glClientActiveTextureARB = platform.createBaseFunction( 
	'glClientActiveTextureARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glClientActiveTextureARB( GLenum(texture) ) -> None', 
	argNames=('texture',),
)

# /usr/include/GL/gl.h 2058
glMultiTexCoord1dARB = platform.createBaseFunction( 
	'glMultiTexCoord1dARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble],
	doc='glMultiTexCoord1dARB( GLenum(target), GLdouble(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 2059
glMultiTexCoord1dvARB = platform.createBaseFunction( 
	'glMultiTexCoord1dvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord1dvARB( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1dvARB = arrays.setInputArraySizeType(
	glMultiTexCoord1dvARB,
	1,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 2060
glMultiTexCoord1fARB = platform.createBaseFunction( 
	'glMultiTexCoord1fARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat],
	doc='glMultiTexCoord1fARB( GLenum(target), GLfloat(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 2061
glMultiTexCoord1fvARB = platform.createBaseFunction( 
	'glMultiTexCoord1fvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord1fvARB( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1fvARB = arrays.setInputArraySizeType(
	glMultiTexCoord1fvARB,
	1,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 2062
glMultiTexCoord1iARB = platform.createBaseFunction( 
	'glMultiTexCoord1iARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint],
	doc='glMultiTexCoord1iARB( GLenum(target), GLint(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 2063
glMultiTexCoord1ivARB = platform.createBaseFunction( 
	'glMultiTexCoord1ivARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord1ivARB( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1ivARB = arrays.setInputArraySizeType(
	glMultiTexCoord1ivARB,
	1,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 2064
glMultiTexCoord1sARB = platform.createBaseFunction( 
	'glMultiTexCoord1sARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort],
	doc='glMultiTexCoord1sARB( GLenum(target), GLshort(s) ) -> None', 
	argNames=('target', 's'),
)

# /usr/include/GL/gl.h 2065
glMultiTexCoord1svARB = platform.createBaseFunction( 
	'glMultiTexCoord1svARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord1svARB( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord1svARB = arrays.setInputArraySizeType(
	glMultiTexCoord1svARB,
	1,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 2066
glMultiTexCoord2dARB = platform.createBaseFunction( 
	'glMultiTexCoord2dARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble],
	doc='glMultiTexCoord2dARB( GLenum(target), GLdouble(s), GLdouble(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 2067
glMultiTexCoord2dvARB = platform.createBaseFunction( 
	'glMultiTexCoord2dvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord2dvARB( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2dvARB = arrays.setInputArraySizeType(
	glMultiTexCoord2dvARB,
	2,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 2068
glMultiTexCoord2fARB = platform.createBaseFunction( 
	'glMultiTexCoord2fARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat],
	doc='glMultiTexCoord2fARB( GLenum(target), GLfloat(s), GLfloat(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 2069
glMultiTexCoord2fvARB = platform.createBaseFunction( 
	'glMultiTexCoord2fvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord2fvARB( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2fvARB = arrays.setInputArraySizeType(
	glMultiTexCoord2fvARB,
	2,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 2070
glMultiTexCoord2iARB = platform.createBaseFunction( 
	'glMultiTexCoord2iARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint],
	doc='glMultiTexCoord2iARB( GLenum(target), GLint(s), GLint(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 2071
glMultiTexCoord2ivARB = platform.createBaseFunction( 
	'glMultiTexCoord2ivARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord2ivARB( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2ivARB = arrays.setInputArraySizeType(
	glMultiTexCoord2ivARB,
	2,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 2072
glMultiTexCoord2sARB = platform.createBaseFunction( 
	'glMultiTexCoord2sARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort, GLshort],
	doc='glMultiTexCoord2sARB( GLenum(target), GLshort(s), GLshort(t) ) -> None', 
	argNames=('target', 's', 't'),
)

# /usr/include/GL/gl.h 2073
glMultiTexCoord2svARB = platform.createBaseFunction( 
	'glMultiTexCoord2svARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord2svARB( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord2svARB = arrays.setInputArraySizeType(
	glMultiTexCoord2svARB,
	2,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 2074
glMultiTexCoord3dARB = platform.createBaseFunction( 
	'glMultiTexCoord3dARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble, GLdouble],
	doc='glMultiTexCoord3dARB( GLenum(target), GLdouble(s), GLdouble(t), GLdouble(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 2075
glMultiTexCoord3dvARB = platform.createBaseFunction( 
	'glMultiTexCoord3dvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord3dvARB( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3dvARB = arrays.setInputArraySizeType(
	glMultiTexCoord3dvARB,
	3,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 2076
glMultiTexCoord3fARB = platform.createBaseFunction( 
	'glMultiTexCoord3fARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat, GLfloat],
	doc='glMultiTexCoord3fARB( GLenum(target), GLfloat(s), GLfloat(t), GLfloat(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 2077
glMultiTexCoord3fvARB = platform.createBaseFunction( 
	'glMultiTexCoord3fvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord3fvARB( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3fvARB = arrays.setInputArraySizeType(
	glMultiTexCoord3fvARB,
	3,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 2078
glMultiTexCoord3iARB = platform.createBaseFunction( 
	'glMultiTexCoord3iARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint],
	doc='glMultiTexCoord3iARB( GLenum(target), GLint(s), GLint(t), GLint(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 2079
glMultiTexCoord3ivARB = platform.createBaseFunction( 
	'glMultiTexCoord3ivARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord3ivARB( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3ivARB = arrays.setInputArraySizeType(
	glMultiTexCoord3ivARB,
	3,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 2080
glMultiTexCoord3sARB = platform.createBaseFunction( 
	'glMultiTexCoord3sARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort, GLshort, GLshort],
	doc='glMultiTexCoord3sARB( GLenum(target), GLshort(s), GLshort(t), GLshort(r) ) -> None', 
	argNames=('target', 's', 't', 'r'),
)

# /usr/include/GL/gl.h 2081
glMultiTexCoord3svARB = platform.createBaseFunction( 
	'glMultiTexCoord3svARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord3svARB( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord3svARB = arrays.setInputArraySizeType(
	glMultiTexCoord3svARB,
	3,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 2082
glMultiTexCoord4dARB = platform.createBaseFunction( 
	'glMultiTexCoord4dARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLdouble, GLdouble, GLdouble, GLdouble],
	doc='glMultiTexCoord4dARB( GLenum(target), GLdouble(s), GLdouble(t), GLdouble(r), GLdouble(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 2083
glMultiTexCoord4dvARB = platform.createBaseFunction( 
	'glMultiTexCoord4dvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLdoubleArray],
	doc='glMultiTexCoord4dvARB( GLenum(target), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4dvARB = arrays.setInputArraySizeType(
	glMultiTexCoord4dvARB,
	4,
	arrays.GLdoubleArray,
	'v',
)

# /usr/include/GL/gl.h 2084
glMultiTexCoord4fARB = platform.createBaseFunction( 
	'glMultiTexCoord4fARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLfloat, GLfloat, GLfloat, GLfloat],
	doc='glMultiTexCoord4fARB( GLenum(target), GLfloat(s), GLfloat(t), GLfloat(r), GLfloat(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 2085
glMultiTexCoord4fvARB = platform.createBaseFunction( 
	'glMultiTexCoord4fvARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLfloatArray],
	doc='glMultiTexCoord4fvARB( GLenum(target), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4fvARB = arrays.setInputArraySizeType(
	glMultiTexCoord4fvARB,
	4,
	arrays.GLfloatArray,
	'v',
)

# /usr/include/GL/gl.h 2086
glMultiTexCoord4iARB = platform.createBaseFunction( 
	'glMultiTexCoord4iARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLint, GLint, GLint, GLint],
	doc='glMultiTexCoord4iARB( GLenum(target), GLint(s), GLint(t), GLint(r), GLint(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 2087
glMultiTexCoord4ivARB = platform.createBaseFunction( 
	'glMultiTexCoord4ivARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLintArray],
	doc='glMultiTexCoord4ivARB( GLenum(target), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4ivARB = arrays.setInputArraySizeType(
	glMultiTexCoord4ivARB,
	4,
	arrays.GLintArray,
	'v',
)

# /usr/include/GL/gl.h 2088
glMultiTexCoord4sARB = platform.createBaseFunction( 
	'glMultiTexCoord4sARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLshort, GLshort, GLshort, GLshort],
	doc='glMultiTexCoord4sARB( GLenum(target), GLshort(s), GLshort(t), GLshort(r), GLshort(q) ) -> None', 
	argNames=('target', 's', 't', 'r', 'q'),
)

# /usr/include/GL/gl.h 2089
glMultiTexCoord4svARB = platform.createBaseFunction( 
	'glMultiTexCoord4svARB', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, arrays.GLshortArray],
	doc='glMultiTexCoord4svARB( GLenum(target), arrays.GLshortArray(v) ) -> None', 
	argNames=('target', 'v'),
)

glMultiTexCoord4svARB = arrays.setInputArraySizeType(
	glMultiTexCoord4svARB,
	4,
	arrays.GLshortArray,
	'v',
)

# /usr/include/GL/gl.h 2223
glBlendEquationSeparateATI = platform.createBaseFunction( 
	'glBlendEquationSeparateATI', dll=platform.GL, resultType=None, 
	argTypes=[GLenum, GLenum],
	doc='glBlendEquationSeparateATI( GLenum(modeRGB), GLenum(modeA) ) -> None', 
	argNames=('modeRGB', 'modeA'),
)

