# generated by 'xml2py'
# flags 'gle.xml -l /usr/lib/libgle.so -o simple.py -v'
from OpenGL import platform, arrays
from OpenGL import constants as GLconstants
import ctypes
gleDouble = ctypes.c_double
c_int = ctypes.c_int
c_char = ctypes.c_char


gleAffine = gleDouble * 3 * 2
# /usr/include/GL/gle.h 110
gleGetJoinStyle = platform.createBaseFunction( 
	'gleGetJoinStyle', dll=platform.GLE, resultType=c_int, 
	argTypes=[],
	doc='gleGetJoinStyle(  ) -> c_int', 
	argNames=(),
)

# /usr/include/GL/gle.h 111
gleSetJoinStyle = platform.createBaseFunction( 
	'gleSetJoinStyle', dll=platform.GLE, resultType=None, 
	argTypes=[c_int],
	doc='gleSetJoinStyle( c_int(style) ) -> None', 
	argNames=('style',),
)

# /usr/include/GL/gle.h 114
gleGetNumSides = platform.createBaseFunction( 
	'gleGetNumSides', dll=platform.GLE, resultType=c_int, 
	argTypes=[],
	doc='gleGetNumSides(  ) -> c_int', 
	argNames=(),
)

# /usr/include/GL/gle.h 115
gleSetNumSides = platform.createBaseFunction( 
	'gleSetNumSides', dll=platform.GLE, resultType=None, 
	argTypes=[c_int],
	doc='gleSetNumSides( c_int(slices) ) -> None', 
	argNames=('slices',),
)

# /usr/include/GL/gle.h 121
glePolyCylinder = platform.createBaseFunction( 
	'glePolyCylinder', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLfloatArray, gleDouble],
	doc='glePolyCylinder( c_int(npoints), arrays.GLdoubleArray(point_array), arrays.GLfloatArray(color_array), gleDouble(radius) ) -> None', 
	argNames=('npoints', 'point_array', 'color_array', 'radius'),
)

glePolyCylinder = arrays.setInputArraySizeType(
	glePolyCylinder,
	None, # XXX Could not determine size of argument point_array for glePolyCylinder arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'point_array',
)

glePolyCylinder = arrays.setInputArraySizeType(
	glePolyCylinder,
	None, # XXX Could not determine size of argument color_array for glePolyCylinder arrays.GLfloatArray
	arrays.GLfloatArray, 
	'color_array',
)

# /usr/include/GL/gle.h 127
glePolyCone = platform.createBaseFunction( 
	'glePolyCone', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLfloatArray, arrays.GLdoubleArray],
	doc='glePolyCone( c_int(npoints), arrays.GLdoubleArray(point_array), arrays.GLfloatArray(color_array), arrays.GLdoubleArray(radius_array) ) -> None', 
	argNames=('npoints', 'point_array', 'color_array', 'radius_array'),
)

glePolyCone = arrays.setInputArraySizeType(
	glePolyCone,
	None, # XXX Could not determine size of argument point_array for glePolyCone arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'point_array',
)

glePolyCone = arrays.setInputArraySizeType(
	glePolyCone,
	None, # XXX Could not determine size of argument color_array for glePolyCone arrays.GLfloatArray
	arrays.GLfloatArray, 
	'color_array',
)

glePolyCone = arrays.setInputArraySizeType(
	glePolyCone,
	None, # XXX Could not determine size of argument radius_array for glePolyCone arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'radius_array',
)

# /usr/include/GL/gle.h 136
gleExtrusion = platform.createBaseFunction( 
	'gleExtrusion', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray, c_int, arrays.GLdoubleArray, arrays.GLfloatArray],
	doc='gleExtrusion( c_int(ncp), arrays.GLdoubleArray(contour), arrays.GLdoubleArray(cont_normal), arrays.GLdoubleArray(up), c_int(npoints), arrays.GLdoubleArray(point_array), arrays.GLfloatArray(color_array) ) -> None', 
	argNames=('ncp', 'contour', 'cont_normal', 'up', 'npoints', 'point_array', 'color_array'),
)

gleExtrusion = arrays.setInputArraySizeType(
	gleExtrusion,
	None, # XXX Could not determine size of argument contour for gleExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'contour',
)

gleExtrusion = arrays.setInputArraySizeType(
	gleExtrusion,
	None, # XXX Could not determine size of argument cont_normal for gleExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'cont_normal',
)

gleExtrusion = arrays.setInputArraySizeType(
	gleExtrusion,
	None, # XXX Could not determine size of argument up for gleExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

gleExtrusion = arrays.setInputArraySizeType(
	gleExtrusion,
	None, # XXX Could not determine size of argument point_array for gleExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'point_array',
)

gleExtrusion = arrays.setInputArraySizeType(
	gleExtrusion,
	None, # XXX Could not determine size of argument color_array for gleExtrusion arrays.GLfloatArray
	arrays.GLfloatArray, 
	'color_array',
)

# /usr/include/GL/gle.h 146
gleTwistExtrusion = platform.createBaseFunction( 
	'gleTwistExtrusion', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray, c_int, arrays.GLdoubleArray, arrays.GLfloatArray, arrays.GLdoubleArray],
	doc='gleTwistExtrusion( c_int(ncp), arrays.GLdoubleArray(contour), arrays.GLdoubleArray(cont_normal), arrays.GLdoubleArray(up), c_int(npoints), arrays.GLdoubleArray(point_array), arrays.GLfloatArray(color_array), arrays.GLdoubleArray(twist_array) ) -> None', 
	argNames=('ncp', 'contour', 'cont_normal', 'up', 'npoints', 'point_array', 'color_array', 'twist_array'),
)

gleTwistExtrusion = arrays.setInputArraySizeType(
	gleTwistExtrusion,
	None, # XXX Could not determine size of argument contour for gleTwistExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'contour',
)

gleTwistExtrusion = arrays.setInputArraySizeType(
	gleTwistExtrusion,
	None, # XXX Could not determine size of argument cont_normal for gleTwistExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'cont_normal',
)

gleTwistExtrusion = arrays.setInputArraySizeType(
	gleTwistExtrusion,
	None, # XXX Could not determine size of argument up for gleTwistExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

gleTwistExtrusion = arrays.setInputArraySizeType(
	gleTwistExtrusion,
	None, # XXX Could not determine size of argument point_array for gleTwistExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'point_array',
)

gleTwistExtrusion = arrays.setInputArraySizeType(
	gleTwistExtrusion,
	None, # XXX Could not determine size of argument color_array for gleTwistExtrusion arrays.GLfloatArray
	arrays.GLfloatArray, 
	'color_array',
)

gleTwistExtrusion = arrays.setInputArraySizeType(
	gleTwistExtrusion,
	None, # XXX Could not determine size of argument twist_array for gleTwistExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'twist_array',
)

# /usr/include/GL/gle.h 156
gleSuperExtrusion = platform.createBaseFunction( 
	'gleSuperExtrusion', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray, c_int, arrays.GLdoubleArray, arrays.GLfloatArray, arrays.GLdoubleArray],
	doc='gleSuperExtrusion( c_int(ncp), arrays.GLdoubleArray(contour), arrays.GLdoubleArray(cont_normal), arrays.GLdoubleArray(up), c_int(npoints), arrays.GLdoubleArray(point_array), arrays.GLfloatArray(color_array), arrays.GLdoubleArray(xform_array) ) -> None', 
	argNames=('ncp', 'contour', 'cont_normal', 'up', 'npoints', 'point_array', 'color_array', 'xform_array'),
)

gleSuperExtrusion = arrays.setInputArraySizeType(
	gleSuperExtrusion,
	None, # XXX Could not determine size of argument contour for gleSuperExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'contour',
)

gleSuperExtrusion = arrays.setInputArraySizeType(
	gleSuperExtrusion,
	None, # XXX Could not determine size of argument cont_normal for gleSuperExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'cont_normal',
)

gleSuperExtrusion = arrays.setInputArraySizeType(
	gleSuperExtrusion,
	None, # XXX Could not determine size of argument up for gleSuperExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

gleSuperExtrusion = arrays.setInputArraySizeType(
	gleSuperExtrusion,
	None, # XXX Could not determine size of argument point_array for gleSuperExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'point_array',
)

gleSuperExtrusion = arrays.setInputArraySizeType(
	gleSuperExtrusion,
	None, # XXX Could not determine size of argument color_array for gleSuperExtrusion arrays.GLfloatArray
	arrays.GLfloatArray, 
	'color_array',
)

gleSuperExtrusion = arrays.setInputArraySizeType(
	gleSuperExtrusion,
	None, # XXX Could not determine size of argument xform_array for gleSuperExtrusion arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'xform_array',
)

# /usr/include/GL/gle.h 170
gleSpiral = platform.createBaseFunction( 
	'gleSpiral', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray, gleDouble, gleDouble, gleDouble, gleDouble, arrays.GLdoubleArray, arrays.GLdoubleArray, gleDouble, gleDouble],
	doc='gleSpiral( c_int(ncp), arrays.GLdoubleArray(contour), arrays.GLdoubleArray(cont_normal), arrays.GLdoubleArray(up), gleDouble(startRadius), gleDouble(drdTheta), gleDouble(startZ), gleDouble(dzdTheta), arrays.GLdoubleArray(startXform), arrays.GLdoubleArray(dXformdTheta), gleDouble(startTheta), gleDouble(sweepTheta) ) -> None', 
	argNames=('ncp', 'contour', 'cont_normal', 'up', 'startRadius', 'drdTheta', 'startZ', 'dzdTheta', 'startXform', 'dXformdTheta', 'startTheta', 'sweepTheta'),
)

gleSpiral = arrays.setInputArraySizeType(
	gleSpiral,
	None, # XXX Could not determine size of argument contour for gleSpiral arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'contour',
)

gleSpiral = arrays.setInputArraySizeType(
	gleSpiral,
	None, # XXX Could not determine size of argument cont_normal for gleSpiral arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'cont_normal',
)

gleSpiral = arrays.setInputArraySizeType(
	gleSpiral,
	None, # XXX Could not determine size of argument up for gleSpiral arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

gleSpiral = arrays.setInputArraySizeType(
	gleSpiral,
	None, # XXX Could not determine size of argument startXform for gleSpiral arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'startXform',
)

gleSpiral = arrays.setInputArraySizeType(
	gleSpiral,
	None, # XXX Could not determine size of argument dXformdTheta for gleSpiral arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'dXformdTheta',
)

# /usr/include/GL/gle.h 184
gleLathe = platform.createBaseFunction( 
	'gleLathe', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray, gleDouble, gleDouble, gleDouble, gleDouble, arrays.GLdoubleArray, arrays.GLdoubleArray, gleDouble, gleDouble],
	doc='gleLathe( c_int(ncp), arrays.GLdoubleArray(contour), arrays.GLdoubleArray(cont_normal), arrays.GLdoubleArray(up), gleDouble(startRadius), gleDouble(drdTheta), gleDouble(startZ), gleDouble(dzdTheta), arrays.GLdoubleArray(startXform), arrays.GLdoubleArray(dXformdTheta), gleDouble(startTheta), gleDouble(sweepTheta) ) -> None', 
	argNames=('ncp', 'contour', 'cont_normal', 'up', 'startRadius', 'drdTheta', 'startZ', 'dzdTheta', 'startXform', 'dXformdTheta', 'startTheta', 'sweepTheta'),
)

gleLathe = arrays.setInputArraySizeType(
	gleLathe,
	None, # XXX Could not determine size of argument contour for gleLathe arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'contour',
)

gleLathe = arrays.setInputArraySizeType(
	gleLathe,
	None, # XXX Could not determine size of argument cont_normal for gleLathe arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'cont_normal',
)

gleLathe = arrays.setInputArraySizeType(
	gleLathe,
	None, # XXX Could not determine size of argument up for gleLathe arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

gleLathe = arrays.setInputArraySizeType(
	gleLathe,
	None, # XXX Could not determine size of argument startXform for gleLathe arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'startXform',
)

gleLathe = arrays.setInputArraySizeType(
	gleLathe,
	None, # XXX Could not determine size of argument dXformdTheta for gleLathe arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'dXformdTheta',
)

# /usr/include/GL/gle.h 195
gleHelicoid = platform.createBaseFunction( 
	'gleHelicoid', dll=platform.GLE, resultType=None, 
	argTypes=[gleDouble, gleDouble, gleDouble, gleDouble, gleDouble, arrays.GLdoubleArray, arrays.GLdoubleArray, gleDouble, gleDouble],
	doc='gleHelicoid( gleDouble(rToroid), gleDouble(startRadius), gleDouble(drdTheta), gleDouble(startZ), gleDouble(dzdTheta), arrays.GLdoubleArray(startXform), arrays.GLdoubleArray(dXformdTheta), gleDouble(startTheta), gleDouble(sweepTheta) ) -> None', 
	argNames=('rToroid', 'startRadius', 'drdTheta', 'startZ', 'dzdTheta', 'startXform', 'dXformdTheta', 'startTheta', 'sweepTheta'),
)

gleHelicoid = arrays.setInputArraySizeType(
	gleHelicoid,
	None, # XXX Could not determine size of argument startXform for gleHelicoid arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'startXform',
)

gleHelicoid = arrays.setInputArraySizeType(
	gleHelicoid,
	None, # XXX Could not determine size of argument dXformdTheta for gleHelicoid arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'dXformdTheta',
)

# /usr/include/GL/gle.h 206
gleToroid = platform.createBaseFunction( 
	'gleToroid', dll=platform.GLE, resultType=None, 
	argTypes=[gleDouble, gleDouble, gleDouble, gleDouble, gleDouble, arrays.GLdoubleArray, arrays.GLdoubleArray, gleDouble, gleDouble],
	doc='gleToroid( gleDouble(rToroid), gleDouble(startRadius), gleDouble(drdTheta), gleDouble(startZ), gleDouble(dzdTheta), arrays.GLdoubleArray(startXform), arrays.GLdoubleArray(dXformdTheta), gleDouble(startTheta), gleDouble(sweepTheta) ) -> None', 
	argNames=('rToroid', 'startRadius', 'drdTheta', 'startZ', 'dzdTheta', 'startXform', 'dXformdTheta', 'startTheta', 'sweepTheta'),
)

gleToroid = arrays.setInputArraySizeType(
	gleToroid,
	None, # XXX Could not determine size of argument startXform for gleToroid arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'startXform',
)

gleToroid = arrays.setInputArraySizeType(
	gleToroid,
	None, # XXX Could not determine size of argument dXformdTheta for gleToroid arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'dXformdTheta',
)

# /usr/include/GL/gle.h 215
gleScrew = platform.createBaseFunction( 
	'gleScrew', dll=platform.GLE, resultType=None, 
	argTypes=[c_int, arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray, gleDouble, gleDouble, gleDouble],
	doc='gleScrew( c_int(ncp), arrays.GLdoubleArray(contour), arrays.GLdoubleArray(cont_normal), arrays.GLdoubleArray(up), gleDouble(startz), gleDouble(endz), gleDouble(twist) ) -> None', 
	argNames=('ncp', 'contour', 'cont_normal', 'up', 'startz', 'endz', 'twist'),
)

gleScrew = arrays.setInputArraySizeType(
	gleScrew,
	None, # XXX Could not determine size of argument contour for gleScrew arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'contour',
)

gleScrew = arrays.setInputArraySizeType(
	gleScrew,
	None, # XXX Could not determine size of argument cont_normal for gleScrew arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'cont_normal',
)

gleScrew = arrays.setInputArraySizeType(
	gleScrew,
	None, # XXX Could not determine size of argument up for gleScrew arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

# /usr/include/GL/gle.h 217
gleTextureMode = platform.createBaseFunction( 
	'gleTextureMode', dll=platform.GLE, resultType=None, 
	argTypes=[c_int],
	doc='gleTextureMode( c_int(mode) ) -> None', 
	argNames=('mode',),
)

# /usr/include/GL/gle.h 220
rot_axis = platform.createBaseFunction( 
	'rot_axis', dll=platform.GLE, resultType=None, 
	argTypes=[gleDouble, arrays.GLdoubleArray],
	doc='rot_axis( gleDouble(omega), arrays.GLdoubleArray(axis) ) -> None', 
	argNames=('omega', 'axis'),
)

rot_axis = arrays.setInputArraySizeType(
	rot_axis,
	None, # XXX Could not determine size of argument axis for rot_axis arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'axis',
)

# /usr/include/GL/gle.h 221
rot_about_axis = platform.createBaseFunction( 
	'rot_about_axis', dll=platform.GLE, resultType=None, 
	argTypes=[gleDouble, arrays.GLdoubleArray],
	doc='rot_about_axis( gleDouble(angle), arrays.GLdoubleArray(axis) ) -> None', 
	argNames=('angle', 'axis'),
)

rot_about_axis = arrays.setInputArraySizeType(
	rot_about_axis,
	None, # XXX Could not determine size of argument axis for rot_about_axis arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'axis',
)

# /usr/include/GL/gle.h 222
rot_omega = platform.createBaseFunction( 
	'rot_omega', dll=platform.GLE, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='rot_omega( arrays.GLdoubleArray(axis) ) -> None', 
	argNames=('axis',),
)

rot_omega = arrays.setInputArraySizeType(
	rot_omega,
	None, # XXX Could not determine size of argument axis for rot_omega arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'axis',
)

# /usr/include/GL/gle.h 223
rot_prince = platform.createBaseFunction( 
	'rot_prince', dll=platform.GLE, resultType=None, 
	argTypes=[gleDouble, c_char],
	doc='rot_prince( gleDouble(omega), c_char(axis) ) -> None', 
	argNames=('omega', 'axis'),
)

# /usr/include/GL/gle.h 224
urot_axis = platform.createBaseFunction( 
	'urot_axis', dll=platform.GLE, resultType=None, 
	argTypes=[arrays.GLdoubleArray, gleDouble, arrays.GLdoubleArray],
	doc='urot_axis( arrays.GLdoubleArray(m), gleDouble(omega), arrays.GLdoubleArray(axis) ) -> None', 
	argNames=('m', 'omega', 'axis'),
)

urot_axis = arrays.setInputArraySizeType(
	urot_axis,
	None, # XXX Could not determine size of argument m for urot_axis arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'm',
)

urot_axis = arrays.setInputArraySizeType(
	urot_axis,
	None, # XXX Could not determine size of argument axis for urot_axis arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'axis',
)

# /usr/include/GL/gle.h 225
urot_about_axis = platform.createBaseFunction( 
	'urot_about_axis', dll=platform.GLE, resultType=None, 
	argTypes=[arrays.GLdoubleArray, gleDouble, arrays.GLdoubleArray],
	doc='urot_about_axis( arrays.GLdoubleArray(m), gleDouble(angle), arrays.GLdoubleArray(axis) ) -> None', 
	argNames=('m', 'angle', 'axis'),
)

urot_about_axis = arrays.setInputArraySizeType(
	urot_about_axis,
	None, # XXX Could not determine size of argument m for urot_about_axis arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'm',
)

urot_about_axis = arrays.setInputArraySizeType(
	urot_about_axis,
	None, # XXX Could not determine size of argument axis for urot_about_axis arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'axis',
)

# /usr/include/GL/gle.h 226
urot_omega = platform.createBaseFunction( 
	'urot_omega', dll=platform.GLE, resultType=None, 
	argTypes=[arrays.GLdoubleArray, arrays.GLdoubleArray],
	doc='urot_omega( arrays.GLdoubleArray(m), arrays.GLdoubleArray(axis) ) -> None', 
	argNames=('m', 'axis'),
)

urot_omega = arrays.setInputArraySizeType(
	urot_omega,
	None, # XXX Could not determine size of argument m for urot_omega arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'm',
)

urot_omega = arrays.setInputArraySizeType(
	urot_omega,
	None, # XXX Could not determine size of argument axis for urot_omega arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'axis',
)

# /usr/include/GL/gle.h 227
urot_prince = platform.createBaseFunction( 
	'urot_prince', dll=platform.GLE, resultType=None, 
	argTypes=[arrays.GLdoubleArray, gleDouble, c_char],
	doc='urot_prince( arrays.GLdoubleArray(m), gleDouble(omega), c_char(axis) ) -> None', 
	argNames=('m', 'omega', 'axis'),
)

urot_prince = arrays.setInputArraySizeType(
	urot_prince,
	None, # XXX Could not determine size of argument m for urot_prince arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'm',
)

# /usr/include/GL/gle.h 232
uview_direction = platform.createBaseFunction( 
	'uview_direction', dll=platform.GLE, resultType=None, 
	argTypes=[arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray],
	doc='uview_direction( arrays.GLdoubleArray(m), arrays.GLdoubleArray(v21), arrays.GLdoubleArray(up) ) -> None', 
	argNames=('m', 'v21', 'up'),
)

uview_direction = arrays.setInputArraySizeType(
	uview_direction,
	None, # XXX Could not determine size of argument m for uview_direction arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'm',
)

uview_direction = arrays.setInputArraySizeType(
	uview_direction,
	None, # XXX Could not determine size of argument v21 for uview_direction arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'v21',
)

uview_direction = arrays.setInputArraySizeType(
	uview_direction,
	None, # XXX Could not determine size of argument up for uview_direction arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

# /usr/include/GL/gle.h 237
uviewpoint = platform.createBaseFunction( 
	'uviewpoint', dll=platform.GLE, resultType=None, 
	argTypes=[arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray, arrays.GLdoubleArray],
	doc='uviewpoint( arrays.GLdoubleArray(m), arrays.GLdoubleArray(v1), arrays.GLdoubleArray(v2), arrays.GLdoubleArray(up) ) -> None', 
	argNames=('m', 'v1', 'v2', 'up'),
)

uviewpoint = arrays.setInputArraySizeType(
	uviewpoint,
	None, # XXX Could not determine size of argument m for uviewpoint arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'm',
)

uviewpoint = arrays.setInputArraySizeType(
	uviewpoint,
	None, # XXX Could not determine size of argument v1 for uviewpoint arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'v1',
)

uviewpoint = arrays.setInputArraySizeType(
	uviewpoint,
	None, # XXX Could not determine size of argument v2 for uviewpoint arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'v2',
)

uviewpoint = arrays.setInputArraySizeType(
	uviewpoint,
	None, # XXX Could not determine size of argument up for uviewpoint arrays.GLdoubleArray
	arrays.GLdoubleArray, 
	'up',
)

