Metadata-Version: 1.0
Name: commandline
Version: 0.1.2dev
Summary: Exposes your APIs to the command line.
Home-page: UNKNOWN
Author: David Laban
Author-email: alsuren@gmail.com
License: BSD
Description: This is a helper module for making intuitive command line programs with
        zero effort. It takes a function signature like:
        example_function(string1, string2='something', string3='something else')
        and turns it into a simple command-line app with usage:
        example_program string1 [string2 [string3]]
        
        All you have to do is:
        if __name__ == "__main__":
        import commandline
        commandline.run_as_main(example_function)
        
        Limitations
        ============
        
        Note that it currently can't print help information for arguments other than their default values,
        but it will print your docstring for you if that's of any use.
        
        Help for arguments will probably come with python3000's function annotations.
        http://www.python.org/dev/peps/pep-3107/
        
        Argument types are inferred from the default arguments. Currently supported are:
        int, float, bool, str, commandline.Choice
        If things don't have a default argument, I can't infer the type, so assume str.
        
        Things passed in as positional arguments will currently be passed in as strings,
        and override things passed in as options. I really need to migrate to some
        optparse-like library that understands positional arguments.
        
        
Keywords: command line commandline script
Platform: UNKNOWN
