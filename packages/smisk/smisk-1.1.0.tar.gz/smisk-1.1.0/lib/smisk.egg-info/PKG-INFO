Metadata-Version: 1.0
Name: smisk
Version: 1.1.0
Summary: High-performance web service framework
Home-page: http://trac.hunch.se/smisk
Author: Rasmus Andersson
Author-email: rasmus@flajm.com
License: Copyright (c) 2007-2008 Rasmus Andersson

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
Download-URL: http://trac.hunch.se/smisk/dist/
Description: 
        Smisk
        +++++
        
        .. contents ::
        
        Summary
        =======
        
        Smisk is a simple, high-performance and scalable web service framework
        written in C, but controlled by Python.
        
        It is designed to widen the common bottle necks in heavy-duty web services.
        
        More information at the `Smisk website <http://smisk.hunch.se/>`_
        
        
        Getting Started
        ===============
        
        * Install with ``easy_install smisk`` or download from `PyPI <http://pypi.python.org/pypi/smisk>`_
        * Have a look at a few `examples <http://trac.hunch.se/smisk/browser/examples>`_
        
        
        Examples
        ========
        
        This is a minimal Smisk service::
        
        from smisk.core import Application
        class MyApp(Application):
        def service(self):
        self.response.headers = ['Content-Type: text/plain']
        self.response("Hello World!")
        
        MyApp().run()
        
        And here we have a WSGI compatible application::
        
        from smisk.wsgi import *
        def hello_app(env, start_response):
        start_response("200 OK", [('Content-Type', 'text/plain')])
        return ["Hello, World!"]
        
        main(hello_app)
        
        More examples `available here... <http://trac.hunch.se/smisk/browser/examples>`_
        
        
        Authors & Contributors
        ======================
        * `Rasmus Andersson <http://hunch.se/>`_ rasmus-flajm.com
        * `Eric Moritz <http://themoritzfamily.com/>`_ eric-themoritzfamily.com
        * Ludvig Strigeus
        
        Changes
        =======
        
        1.1.0
        
        * MVC module – smisk.mvc
        * Better unicode support
        * Compatible with Debian Etch
        * Host server URL rewrites now propagating correctly
        
        1.0.1
        
        * Full WSGI support – passes the wsgiref validation tests
        * Iterable request makes reading input data simple
        * Stream implements writelines for optimized sending of chunks of strings.
        * Response implements a Stream.writelines proxy, automatically calling
        begin()
        * Callable response makes responses simpler. Based on writelines
        * Fixed a bug where smisk_multipart_parse_file would try to fclose a
        uninitialized fd. [11c4ffae718f]
        
        1.0.0
        
        * First stable version
        
        License
        =======
        Copyright (c) 2007-2008 Rasmus Andersson
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
        Download
        ========
        
Platform: ALL
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: C
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Development Status :: 5 - Production/Stable
