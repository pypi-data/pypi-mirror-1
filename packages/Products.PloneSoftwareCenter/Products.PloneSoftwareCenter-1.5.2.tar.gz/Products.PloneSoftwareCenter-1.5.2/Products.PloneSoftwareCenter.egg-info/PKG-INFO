Metadata-Version: 1.0
Name: Products.PloneSoftwareCenter
Version: 1.5.2
Summary: Plone Software Center is a tool to keep track of software projects and 
software releases, and is used to power the Products download 
area on plone.org. It was formerly called ArchPackage.

Home-page: http://svn.plone.org/svn/collective/Products.PloneSoftwareCenter
Author: Plone Foundation
Author-email: plone-developers@lists.sourceforge.net
License: GPL
Description: 
        ===================
        PloneSoftwareCenter
        ===================
        
        .. contents::
        
        Code repository: http://svn.plone.org/svn/collective/Products.PloneSoftwareCenter
        
        
        Overview
        --------
        
        Plone Software Center is a tool to keep track of software projects and
        software releases, and is used to power the Products download area on
        plone.org.
        
        It was formerly called ArchPackage.
        
        
        Installation
        ============
        
        To install Products.PloneSoftwareCenter into the global Python environment (or a workingenv),
        using a traditional Zope 2 instance, you can do this:
        
        * When you're reading this you have probably already run
        ``easy_install Products.PloneSoftwareCenter``. Find out how to install setuptools
        (and EasyInstall) here:
        http://peak.telecommunity.com/DevCenter/EasyInstall
        
        * If you are using Zope 2.9 (not 2.10), get pythonproducts at http://plone.org/products/pythonproducts
        and install it via::
        
        python setup.py install --home /path/to/instance
        
        into your Zope instance.
        
        * Create a file called ``Products.PloneSoftwareCenter-configure.zcml`` in the
        ``/path/to/instance/etc/package-includes`` directory.  The file
        should only contain this::
        
        <include package="Products.PloneSoftwareCenter" />
        
        Alternatively, if you are using zc.buildout and the plone.recipe.zope2instance
        recipe to manage your project, you can do this:
        
        * Add ``Products.PloneSoftwareCenter`` to the list of eggs to install, e.g.::
        
        [buildout]
        ...
        eggs =
        ...
        Products.PloneSoftwareCenter
        
        * Tell the plone.recipe.zope2instance recipe to install a ZCML slug::
        
        [instance]
        recipe = plone.recipe.zope2instance
        ...
        zcml =
        Products.PloneSoftwareCenter
        
        * Re-run buildout, e.g. with::
        
        $ ./bin/buildout
        
        You can skip the ZCML slug if you are going to explicitly include the package
        from another package's configure.zcml file.
        
        
        Because its top level Python namespace package is called ``Products``, this
        package can also be installed in Zope 2 as an old style **Zope 2 Product**.
        
        For that, move (or symlink) the ``PloneSoftwareCenter`` folder of this project
        (``Products.PloneSoftwareCenter/Products/PloneSoftwareCenter``) into the ``Products`` directory of
        the Zope instance it has to be installed for, and restart the server.
        
        You can also skip the ZCML slug if you install this package the **Zope 2
        Product** way.
        
        
        
        Changelog
        =========
        
        (name of developer listed in brackets)
        
        1.5.1 (unreleased)
        ::::::::::::::::::
        
        - Added fancyzoom for screenshots.
        [davisagli]
        
        - Don't wipe out list of allowable contained types within
        a PSCProject when PSC is reinstalled.
        [davisagli]
        
        - Tidying of schema to make base_edit less daunting.
        [MatthewWilkes]
        
        - added a migration step to synchronize projects with PyPI.
        [tarek]
        
        - fixed a gs bug: propertiestool.xml now uses purge:False
        [mr_savage]
        
        - now adds 'mailto:' to contact address on uploads
        [tarek]
        
        - now adds 'mailto:' to contact address on uploads.
        [tarek]
        
        - introduced a deprecation warning for the simple
        view. [tarek]
        
        - fixed a bug in uploads of packages to existing
        projects that does not have a distutils id yet
        [tarek]
        
        - added an event that gets triggered if you change the storage
        strategy. It will migrate all files to the new storage.
        [tarek]
        
        - added a ++simple++ namespace to provide a package index API.
        [tarek]
        
        - Moved content/validators.py to validators.py (with deprecation) as
        otherwise the registering of validators was too late due to the
        order of imports.  [maurits]
        
        - Added Products.ArchAddon, Products.AddRemoveWidget and
        Products.DataGridField to the install_requires in setup.py.
        [maurits]
        
        - added a pluggable storage mechanism for downloadable files.
        This can be used to define new storage strategies in independant
        packages. They will then be available in PloneSoftwareCenter
        instances, under the new "storage strategy" field.
        
        PSC provides a default strategy called `archetype` that uses
        a regular ZODB persistency.
        
        Other strategies are available like collective.psc.externalstorage.
        [tarek]
        
        
        1.5 (2008-04-27)
        ::::::::::::::::
        
        - Made the workflow of releases aware of development tags created by distutils
        so if an egg has "dev" or an SVN revision it is marked as an alpha.
        Various tidying of display to handle multiple eggs.
        Switched from CHANGES.txt and CONTRIBUTORS.txt to docs/HISTORY.txt
        [MatthewWilkes]
        
        - Refactoring multiple eggs in one project started by Tarek, added validators.
        [MatthewWilkes]
        
        - Support for multiple eggs in one project
        [tarek]
        
        - Refactored long_description and reorganized text files.
        [tarek]
        
        - PyPI integration, from an initial branch started by Sidnei, refactoring,
        beautification:
        [tarek]
        
        - Development, Maintenance:
        [aclark]
        
        
        Before 1.5 (Taken from CONTRIBUTORS.txt)
        ::::::::::::::::::::::::::::::::::::::::
        
        - Base code for original project:
        Sidnei da Silva, `awkly.org <http://awkly.org>`_
        
        - User Interface, concept, quality assurance and a tiny bit of Python:
        Alexander Limi, `Plone Solutions <http://www.plonesolutions.com>`_
        
        - Architecture, Development:
        `Joel Burton <mailto:joel@joelburton.com>`_
        
        - Archetypes fixes, workflow code, all-over greatness and dedication:
        `Martin Aspeli <mailto:optilude@gmx.net>`_
        
        - Additional code help, Archetypes fixes, clean-up of External Storage:
        Dorneles Trem&eacute;a, `Plone Solutions <http://www.plonesolutions.com>`_
        
        - Additional Assistance:
        Christian Heimes, Daniel Nouri
        
        - Icons:
        Vidar Andersen, `Black Tar <http://www.blacktar.com>`_
        
        - Testing, Feedback, and Bug Fixes:
        Michael Davis
        
        
        
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Framework :: Zope2
Classifier: Framework :: Zope3
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
