>>> from plib.stdlib import any, all, inrange, normalize, slice_len, strtobool, strtodate
>>> any(range(2))
True
>>> any(range(1, 3))
True
>>> any(range(1))
False
>>> any([])
False
>>> all(range(2))
False
>>> all(range(1, 3))
True
>>> all(range(1))
False
>>> all([])
True
>>> def test(n):
...     return n > 0
... 
>>> any(range(2), test)
True
>>> any(range(1, 3), test)
True
>>> any(range(1), test)
False
>>> any([], test)
False
>>> all(range(2), test)
False
>>> all(range(1, 3), test)
True
>>> all(range(1), test)
False
>>> all([], test)
True
>>> inrange(0, 0, 2)
0
>>> inrange(1, 0, 2)
1
>>> inrange(2, 0, 2)
2
>>> inrange(-1, 0, 2)
0
>>> inrange(3, 0, 2)
2
>>> inrange(0, 2, 0)
0
>>> inrange(1, 2, 0)
1
>>> inrange(2, 2, 0)
2
>>> inrange(-1, 2, 0)
0
>>> inrange(3, 2, 0)
2
>>> normalize(6, 0)
0
>>> normalize(6, 5)
5
>>> normalize(6, -1)
5
>>> normalize(6, -6)
0
>>> normalize(6, 6)
Traceback (most recent call last):
...
IndexError: sequence index out of range
>>> normalize(6, -7)
Traceback (most recent call last):
...
IndexError: sequence index out of range
>>> slice_len(slice(1))
1
>>> slice_len(slice(2))
2
>>> slice_len(slice(1, 2))
1
>>> slice_len(slice(2, 4))
2
>>> slice_len(slice(0, 1, 1))
1
>>> slice_len(slice(0, 2, 1))
2
>>> slice_len(slice(0, 2, 2))
1
>>> slice_len(slice(1, 0, -1))
1
>>> slice_len(slice(2, 0, -1))
2
>>> slice_len(slice(2, 0, -2))
1
>>> slice_len(slice(0))
0
>>> slice_len(slice(0, 0))
0
>>> slice_len(slice(0, 0, 0))
Traceback (most recent call last):
...
ValueError: Slice step cannot be zero.
>>> class SliceHack(object):
...     def __getitem__(self, index):
...         if slice_len(index) is None:
...             return "Indefinite slice!"
...
>>> SliceHack()[:]
'Indefinite slice!'
>>> SliceHack()[:-1]
'Indefinite slice!'
>>> SliceHack()[-1:]
'Indefinite slice!'
>>> SliceHack()[-1:-1]
'Indefinite slice!'
>>> for b in (True, False, None):
...     print strtobool(str(b)) is b
... 
True
True
True
>>> s = '2001-05-30'
>>> str(strtodate(s)) == s
True
