JRedirector - Mappings: Set explicit path redirection

    Description

      This view is used to view and delete existing mappings as well as
      add new mappings to the list.

      A mapping consists of three elements: Old Path, New Path, and 
      Response Code. The old path is a path that you want to redirect 
      away from, maybe because the object that is at the end of the path
      has been deleted. The new path is the place where users are going 
      when they are trying to get the old path. The response code determines
      the HTTP response code that will get set for the redirect.

    Controls

     'Delete' -- In order to remove items from the list of mappings you can 
       select one or more checkboxes and hit "Delete" to remove them from the 
       list.

     'Old Path' -- Enter the obsolete path for the redirection here. Do not 
       include the server URL. The format is '/path/to/object'.

     'New Path' -- Where the users will end up when they hit the old path.
       Do not include the server URL. The format is '/path/to/object'.

     'Response Code' -- The HTTP Response code set during the redirection.
       Please see README.txt for an explanation of these codes. If you are 
       unsure what to use simply select 301 for all permanently moved pages
       and 302 if you intend to move the page back to the old path at some
       point.

     'Case-insensitive old path handling' -- If this box is checked then
       the old path coming from the client is matched up without regard to
       uppercase/lowercase.

     'Wildcard Mapping' -- Checking this box will attempt to match 
       all those paths *at or underneath the path specified as Old Path*
       that are not matched by any non-wildcard rule. This enables 
       setting a redirect that matches a multitude of requested paths and
       redirects them to a single new path.

     'Add' -- Add the new mapping to the list of mappings.
