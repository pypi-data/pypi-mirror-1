<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="archetypes.searchwidget">

  <body>

    <metal:view_macro define-macro="view">
      <tal:define define="refs python:here.getReferenceImpl(field.relationship)"
                  condition="refs">

        <tal:block 
               tal:define="obj python:refs[0];
                           obj_path python: '/'.join(obj.getPhysicalPath());
                           can_view python: checkPermission('View', obj)"
               tal:condition="python: not field.multiValued and can_view">

          <img src="#" alt="Image"
              tal:condition="python: obj.portal_type == 'Image'"
              tal:attributes="src string:${obj/absolute_url}/image_thumb" />

          <a href="#"
              tal:attributes="href obj/absolute_url;
                              class python:obj.portal_type.replace(' ', '_')"
              tal:content="python:obj.Title() or obj.absolute_url(relative=1)"
              >Sole target object's title</a>

        </tal:block>

        <ul tal:condition="field/multiValued">
          <tal:block tal:repeat="obj refs">
            <tal:block
                tal:define="
                    obj_path python: '/'.join(obj.getPhysicalPath());
                    can_view python: checkPermission('View', obj)"
                tal:condition="python: can_view or not hide_inaccessible">
              <li>
                <img tal:condition="python:obj.portal_type == 'Image'"
                    tal:attributes="src string:${obj/absolute_url}/image_tile" />
                <a href="#"
                    tal:attributes="
                        href obj/absolute_url;
                        class python:obj.portal_type.replace(' ', '_')"
                    tal:content="
                        python:obj.Title() or obj.absolute_url(relative=1)"
                    >Target Title</a>
              </li>
            </tal:block>
          </tal:block>
        </ul>

      </tal:define>
    </metal:view_macro>

    <metal:reference_edit
           define-macro="reference_edit"
           tal:define="multiValued python:field.multiValued and True or False;">

      <input type="hidden" value=""
             tal:condition="python:not field.required"
             tal:attributes="name string:$fieldName:default:list" />

      <ul class="searchwidget-selected">
        <li tal:repeat="item python:field.widget.references(context, value)"
            tal:content="structure python:field.widget.render_item(item.UID, item.Title, fieldName)" />
      </ul>

      <div style="display: none;"
           tal:attributes="id string:searchwidget-${fieldName}-popup;
                           class python:multiValued and 'searchwidget-popup-multi' or 'searchwidget-popup'">
        <div class="searchwidget-forms"></div>
        <div class="searchwidget-results"></div>
      </div>

      <a class="context" 
         tal:attributes="id string:searchwidget-${fieldName}-button"
         tal:content="python:field.widget.get_property('button_label')">Add / Remove</a> 
      <a class="context"
         tal:attributes="id string:searchwidget-${fieldName}-clearbutton"
         tal:content="python:field.widget.get_property('clearbutton_label')">Clear Selection</a> 
      <script type="text/javascript" tal:content="structure python:field.widget.popup_javascript(context, request, portal_url, fieldName, multiValued)"></script>

    </metal:reference_edit>

    <metal:edit_macro define-macro="edit">
      <metal:use use-macro="field_macro | here/widgets/field/macros/edit">
        <metal:fill fill-slot="widget_body">
          <metal:use use-macro="here/searchwidget/macros/reference_edit" />
        </metal:fill>
      </metal:use>
    </metal:edit_macro>

    <metal:search_macro define-macro="search">
      <div metal:use-macro="here/widgets/reference/macros/edit"></div>
    </metal:search_macro>
  </body>
</html>

