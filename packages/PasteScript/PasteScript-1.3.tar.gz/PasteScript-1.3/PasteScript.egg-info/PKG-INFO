Metadata-Version: 1.0
Name: PasteScript
Version: 1.3
Summary: A pluggable command-line frontend, including commands to setup package file layouts
Home-page: http://pythonpaste.org/script/
Author: Ian Bicking
Author-email: ianb@colorstudy.com
License: MIT
Description: This is a pluggable command-line tool.
        
        It includes some built-in features;
        
        * Create file layouts for packages.  For instance, ``paste create
        --template=basic_package MyPackage`` will create a `setuptools
        <http://peak.telecommunity.com/DevCenter/setuptools>`_-ready
        file layout.
        
        * Serving up web applications, with configuration based on
        `paste.deploy <http://pythonpaste.org/deploy/paste-deploy.html>`_.
        
        The latest version is available in a `Subversion repository
        <http://svn.pythonpaste.org/Paste/Script/trunk#egg=PasteScript-dev>`_.
        
        For the latest changes see the `news file
        <http://pythonpaste.org/script/news.html>`_.  This package requires
        `Cheetah
        <http://cheeseshop.python.org/packages/source/C/Cheetah/Cheetah-1.0.tar.gz>`_
        
        Changes in 1.3
        --------------
        
        * Fixed an exception being raised when shutting down flup servers using
        sockets.
        
        * Fixed the CherryPy 3 WSGI server entry point's handling of SIGHUP
        and SIGTERM.
        
        * The CherryPy wsgiserver is now available at
        ``paste.script.wsgiserver`` (no longer requiring CherryPy to be
        installed).
        
        * Added entry point for twisted server.
        
        * Made ``paste.script.pluginlib:egg_info_dir`` work with packages that
        put the ``Package.egg-info/`` directory in a subdirectory (typically
        ``src/``).
        
        * Remove Cheetah requirement.  Packages using Cheetah templates should
        require Cheetah themselves.  If you are using ``paster make-config``
        and you *don't* want to use Cheetah, you must add ``use_cheetah =
        False`` to your ``Installer`` subclass (it defaults to true for
        backward compatibility).
        
        * Make scripts work when there is no ``setup.py`` (if you aren't
        making a Python/setuptools package).
        
        * When using ``paste.script.copydir.copy_dir`` (as with most ``paster
        create`` templates), you can raise ``SkipTemplate`` (or call the
        ``skip_template()`` function) which will cause the template to be
        skipped.  You can use this to conditionally include files.
        
        * When using ``paster serve c:/...``, it should no longer confuse
        ``c:`` with a scheme (such as ``config:`` or ``egg:``).
        
        * More careful about catching import errors in ``websetup``, so if you
        have a bug in your ``app.websetup`` module it won't swallow it.
        
        
Keywords: web wsgi setuptools framework command-line setup
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Framework :: Paste
