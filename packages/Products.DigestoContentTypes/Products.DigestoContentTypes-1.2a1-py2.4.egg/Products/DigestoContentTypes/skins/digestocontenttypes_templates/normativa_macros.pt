<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="here/main_template/macros/master">

  <head><title></title></head>

  <body>

    <div metal:fill-slot="main">

      <metal:main_macro define-macro="main">

        <metal:body_macro metal:define-macro="body">
          <div tal:replace="structure provider:plone.abovecontentbody" />

          <tal:fields tal:define="field_macro field_macro | here/widgets/field/macros/view"
                      tal:repeat="field python:here.Schema().filterFields(isMetadata=0)">

            <tal:normalfield condition="python: field.getName() not in ['repeals', 'modifies', 'repealedBy']">
            <tal:if_visible define="mode string:view;
                                    visState python:field.widget.isVisible(here, mode);
                                    notEmpty python:field.accessor;
                                    kss_inline_editable python: field.getName() not in ['kind', 'source'];
                                    visCondition python:field.widget.testCondition(context.aq_inner.aq_parent, portal, context);"
                            condition="python:visState == 'visible' and visCondition">

            <tal:notEmpty tal:on-error="string:error" tal:condition="python: getattr(here,notEmpty)()" >
              <metal:use_field use-macro="field_macro" />
            </tal:notEmpty>

            </tal:if_visible>
            </tal:normalfield>

            <tal:referencefield condition="python: field.getName() in ['repeals', 'modifies']">
            <tal:if_visible define="mode string:view;
                                    visState python:field.widget.isVisible(here, mode);
                                    notEmpty python:field.accessor;
                                    widget python:field.widget;
                                    visCondition python:field.widget.testCondition(context.aq_inner.aq_parent, portal, context);"
                            condition="python:visState == 'visible' and visCondition">

            <tal:notEmpty tal:on-error="string:error" tal:condition="python: getattr(here,notEmpty)()" tal:define="label_macro label_macro | here/widgets/field/macros/label" >
              <metal:use_field use-macro="label_macro" />
              <metal:use_field use-macro="here/normativa_fields_macros/macros/referenceview" />
            </tal:notEmpty>

            </tal:if_visible>

            </tal:referencefield>

            <tal:backreferencefield condition="python: field.getName() == 'repealedBy'">
            <tal:if_visible define="mode string:view;
                                    visState python:field.widget.isVisible(here, mode);
                                    notEmpty python:field.accessor;
                                    widget python:field.widget;
                                    visCondition python:field.widget.testCondition(context.aq_inner.aq_parent, portal, context);"
                            condition="python:visState == 'visible' and visCondition">

            <tal:notEmpty  tal:condition="python: getattr(here,notEmpty)()" tal:define="label_macro label_macro | here/widgets/field/macros/label">
              <metal:use_field use-macro="label_macro" />
              <metal:use_field use-macro="here/normativa_fields_macros/macros/backreferenceview" />
            </tal:notEmpty>

            </tal:if_visible>

            </tal:backreferencefield>

          </tal:fields>
        </metal:body_macro>

      </metal:main_macro>

    </div>

  </body>

</html>
