
+ break up the pyrex files better

+ wrap pycairo bindings 

Scope font/attr handling better


+Create Layout object
+   Let it keep lines of PangoText which are attributed text

Easier clip/image from region type code

Pattern Object
    CairoContext.handlesource should handle gradients and pattern
   fills better, parsing from descriptions if need be



For text -- seperate Path from text and attributes a little better
         it would be nice for things like dropshadow
         to be able to reuse text, extract attributes and replace 
              the single color or something
              rather than two full render cycles 




FIX BUFFER READ

size guessing


.show()

make surface primary?
   and have a .context(DPI=xxx, ...)
   that returns the context


if Layout.__add__ returned the text the pattern might be
         l = c.layout()
         t = l + "text"
         t.style="bold"
         l.show()

         still too much?

