// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "CvStringHashNode.pypp.hpp"

namespace bp = boost::python;

struct CvStringHashNode_wrapper : CvStringHashNode, bp::wrapper< CvStringHashNode > {

    CvStringHashNode_wrapper(CvStringHashNode const & arg )
    : CvStringHashNode( arg )
      , bp::wrapper< CvStringHashNode >(){
        // copy constructor
        
    }

    CvStringHashNode_wrapper()
    : CvStringHashNode()
      , bp::wrapper< CvStringHashNode >(){
        // null constructor
        
    }

    static bp::object get_next( ::CvStringHashNode const & inst ){        
        return inst.next? bp::object(inst.next): bp::object();
    }

};

void register_CvStringHashNode_class(){

    bp::class_< CvStringHashNode_wrapper >( "CvStringHashNode" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvStringHashNode >() )    
        .def_readwrite( "hashval", &CvStringHashNode::hashval )    
        .def_readwrite( "str", &CvStringHashNode::str )    
        .add_property( "next", bp::make_function(&::CvStringHashNode_wrapper::get_next) );

}
