// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "CvFileNode.pypp.hpp"

namespace bp = boost::python;

struct CvFileNode_wrapper : CvFileNode, bp::wrapper< CvFileNode > {

    CvFileNode_wrapper(CvFileNode const & arg )
    : CvFileNode( arg )
      , bp::wrapper< CvFileNode >(){
        // copy constructor
        
    }

    CvFileNode_wrapper()
    : CvFileNode()
      , bp::wrapper< CvFileNode >(){
        // null constructor
        
    }

    static bp::object get_info( ::CvFileNode const & inst ){        
        return inst.info? bp::object(inst.info): bp::object();
    }

};

void register_CvFileNode_class(){

    bp::class_< CvFileNode_wrapper >( "CvFileNode" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvFileNode >() )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvFileNode >() )    
        .def_readwrite( "tag", &CvFileNode::tag )    
        .add_property( "info", bp::make_function(&::CvFileNode_wrapper::get_info) );

}
