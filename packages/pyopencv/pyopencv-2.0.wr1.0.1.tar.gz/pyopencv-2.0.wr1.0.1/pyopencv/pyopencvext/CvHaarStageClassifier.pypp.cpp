// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "CvHaarStageClassifier.pypp.hpp"

namespace bp = boost::python;

struct CvHaarStageClassifier_wrapper : CvHaarStageClassifier, bp::wrapper< CvHaarStageClassifier > {

    CvHaarStageClassifier_wrapper(CvHaarStageClassifier const & arg )
    : CvHaarStageClassifier( arg )
      , bp::wrapper< CvHaarStageClassifier >(){
        // copy constructor
        
    }

    CvHaarStageClassifier_wrapper()
    : CvHaarStageClassifier()
      , bp::wrapper< CvHaarStageClassifier >(){
        // null constructor
        
    }

    static bp::object get_classifier( ::CvHaarStageClassifier const & inst ){        
        return inst.classifier? bp::object(inst.classifier): bp::object();
    }

};

void register_CvHaarStageClassifier_class(){

    bp::class_< CvHaarStageClassifier_wrapper >( "CvHaarStageClassifier" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvHaarStageClassifier >() )    
        .def_readwrite( "child", &CvHaarStageClassifier::child )    
        .def_readwrite( "count", &CvHaarStageClassifier::count )    
        .def_readwrite( "next", &CvHaarStageClassifier::next )    
        .def_readwrite( "parent", &CvHaarStageClassifier::parent )    
        .def_readwrite( "threshold", &CvHaarStageClassifier::threshold )    
        .add_property( "classifier", bp::make_function(&::CvHaarStageClassifier_wrapper::get_classifier) );

}
