// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "CvConvexityDefect.pypp.hpp"

namespace bp = boost::python;

struct CvConvexityDefect_wrapper : CvConvexityDefect, bp::wrapper< CvConvexityDefect > {

    CvConvexityDefect_wrapper(CvConvexityDefect const & arg )
    : CvConvexityDefect( arg )
      , bp::wrapper< CvConvexityDefect >(){
        // copy constructor
        
    }

    CvConvexityDefect_wrapper()
    : CvConvexityDefect()
      , bp::wrapper< CvConvexityDefect >(){
        // null constructor
        
    }

    static bp::object get_start( ::CvConvexityDefect const & inst ){        
        return inst.start? bp::object(inst.start): bp::object();
    }

    static bp::object get_end( ::CvConvexityDefect const & inst ){        
        return inst.end? bp::object(inst.end): bp::object();
    }

    static bp::object get_depth_point( ::CvConvexityDefect const & inst ){        
        return inst.depth_point? bp::object(inst.depth_point): bp::object();
    }

};

void register_CvConvexityDefect_class(){

    bp::class_< CvConvexityDefect_wrapper >( "CvConvexityDefect" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvConvexityDefect >() )    
        .def_readwrite( "depth", &CvConvexityDefect::depth )    
        .add_property( "start", bp::make_function(&::CvConvexityDefect_wrapper::get_start) )    
        .add_property( "end", bp::make_function(&::CvConvexityDefect_wrapper::get_end) )    
        .add_property( "depth_point", bp::make_function(&::CvConvexityDefect_wrapper::get_depth_point) );

}
