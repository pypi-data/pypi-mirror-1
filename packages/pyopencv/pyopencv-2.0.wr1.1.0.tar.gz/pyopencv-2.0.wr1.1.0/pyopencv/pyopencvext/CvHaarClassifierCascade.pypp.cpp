// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "CvHaarClassifierCascade.pypp.hpp"

namespace bp = boost::python;

static ::CvHaarStageClassifier * get_stage_classifier( ::CvHaarClassifierCascade const & inst ) { return inst.stage_classifier; }

static ::CvHidHaarClassifierCascade * get_hid_cascade( ::CvHaarClassifierCascade const & inst ) { return inst.hid_cascade; }

void register_CvHaarClassifierCascade_class(){

    bp::class_< CvHaarClassifierCascade >( "CvHaarClassifierCascade" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvHaarClassifierCascade >() )    
        .def_readwrite( "count", &CvHaarClassifierCascade::count )    
        .def_readwrite( "flags", &CvHaarClassifierCascade::flags )    
        .def_readwrite( "orig_window_size", &CvHaarClassifierCascade::orig_window_size )    
        .def_readwrite( "real_window_size", &CvHaarClassifierCascade::real_window_size )    
        .def_readwrite( "scale", &CvHaarClassifierCascade::scale )    
        .add_property( "stage_classifier", bp::make_function(&::get_stage_classifier, bp::return_internal_reference<>()) )    
        .add_property( "hid_cascade", bp::make_function(&::get_hid_cascade, bp::return_internal_reference<>()) );

}
