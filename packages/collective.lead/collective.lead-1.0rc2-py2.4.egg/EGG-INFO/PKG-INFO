Metadata-Version: 1.0
Name: collective.lead
Version: 1.0rc2
Summary: SQLAlchemy/Zope2 transaction integration
Home-page: http://svn.plone.org/collective/collective.lead
Author: Martin Aspeli
Author-email: optilude@gmx.net
License: LGPL
Description: The lead part of the alchemist's toolkit.
        
        Yes, it's Yet Another SQLAlchemy/Zope Integration Package. I'm sorry,
        I really am. Many thanks to Andreas Jung for z3c.sqlalchemy and Kapil
        Thangavelu for ore.alchemist. I borrowed the Zope transaction data
        manager code from Andreas who borrowed it from Kapil, I believe.
        
        The purpose of this package is to be the lead part and the lead part only.
        The gold-making bit is left to SQLAlchemy. That means that are no
        abstractions or lazy initialisaion or table auto-detection for building
        SQLAlchemy table metadata and mappers, no generation of Zope 3 interfaces,
        no CRUD operations, and no dancing polar bears.
        
        You need to understand SQLAlchemy for this package and this README to make
        any sense. See http://sqlalchemy.org/doc.
        
        NOTE: collective.lead 1.0 targets SQLAlchemy 0.3 only. Subsequent versions
        will target SQLAlchemy 0.4.
        
        The use case
        ------------
        
        - You want SQLAlchemy
        
        - You want to look up database connections/sessions as named utilities
        
        - You want to use simple domain/mapper classes, with no particular
        dependencies
        
        - You don't want to worry about transaction and connection handling
        
        - You want to be able to configure SQL connection parameters at run-time,
        e.g. in the ZODB. Well, you don't have to, but it's nice to have the
        option.
        
Platform: UNKNOWN
Classifier: Framework :: Zope2
Classifier: Framework :: Zope3
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
