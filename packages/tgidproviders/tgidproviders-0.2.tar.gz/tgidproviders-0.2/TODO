====Add openid Support====
The articles [http://docs.turbogears.org/1.0/RoughDocs/OpenIDWithIdentity OpenIDWithIdenity] and [http://nxsy.org/blog/archives/2007/03/26/tgopenidlogin---an-openid-consumer-for-turbogears-applications An OpenID Consumer For Turbogears] provide two possibilities to consider, but be wary.. it seems at first glance that these solutions are thicker then they need to be if they'd just use the entry point system.

====Add HTTP Basic, Digest Support====
See [http://httpd.apache.org/docs-2.0/howto/auth.html the Apache guide].  Would it be useful to have a python equivalent to [http://stein.cshl.org/~lstein/user_manage/ user manage] too?  FWIW, the [http://trac.edgewall.org/wiki/TracAuthenticationIntroduction Trac page] on HTTP authentication is worth a read.. we would need documentation like it.

====More Testing====
Test with Active Directory, test SMB, test unix_passwd on something other than Debian Linux.  Let me know how it works out if you try one of these!

===="Fix" Installation Dependancies====
python-ldap needs to be installed manually, because it's CheeseShop entry isn't complete (and I couldn't figure out how to get around it in setuptools `[1]`).

The SMB provider currently relies on the Python Win32 extensions.. is it possible to easy_install these? Also, using these means it will only work on Windows boxes -- is SAMBA compatibility a possibility?

====Auto-Create Users====
Add config option for automatically creating users once they've been authenticated.

====Groups====
Use the groups provided by the external authentication systems for authorization.

===="Blue-Sky"====
 # Add registration support.
 # Add rest of TG's Identity functionality and WSGI-ify it.  Would it be possible to have an auth/auth system worked with both !TurboGears 1 & 2, [http://www.cherrypy.org CherryPy] & [http://www.pylonghq.com Pylons]?  Probably.
 # When [http://authkit.org AuthKit] is stable, consider using it as a base.
 # Rename the project to something more interesting if one of the above is done.


====FOOTNOTES====
 #1 e.g. I thought I'd be able to do something like:
easy_install python_ldap --find-links=http://svn.kmrc.de/download/distribution --verbose --index_url=http://svn.kmrc.de/download/distribution

According to pje, "You can also specify such links in a setup script using
setup(dependency_links=[...]), which bakes them into the .egg.  When
searching for that egg's dependencies, easy_install will pick them up
and use them."  .. but that didn't work for me.  Instead I had to do:
wget http://svn.kmrc.de/download/distribution/python_ldap-2.3.1-py2.4-linux-i686.egg
easy_install python_ldap-2.3.1-py2.4-linux-i686.egg


