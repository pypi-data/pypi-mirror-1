#echo '##############################################################################\n'
# PLONE 3 BUILDOUT
# To develop your application, run the dev.cfg buildout, it extends this one with
# development tools.
#echo '#\n'
# Think you have the most important file of this buildout installation is etc/${project}.cfg
#echo '#\n'
# The original etc/plone3.version.cfg is the original pinned version file for your plone3 release maintened in the official package.
# The original etc/plone3.buildout.cfg is the one maintened by the plone.org's guys through the package ZopeSkel (plone3_buildout).
# The parts in this buildout extends/overwrite this file, you can read it to get additionnal documentation.
# You must enter speicfic project settings in the etc/${project}.cfg file.
#echo '#\n'
# KGS
# We provide a part to generate the etc/${project}-kgs.cfg file.
# This will allow you to freeze software versions known to work with your project and make reproducible environment.
# This file will be generated the first time that you run buildout.
# To un it, just runbin/buildout -vvvvvvv install kgs
# To unlock the versions, comment out the according statement "etc/${project}-kgs}.cf gin the extends option of the buildout section below.
#echo '#\n'
# FOR RELSTORAGE SUPPORT
# * We use the ZODB as an egg which is patched during installation, please see
# the zoopy section and also the minitage.recipe documentation on patching an
# egg.
# The egg is on your cache with a particular version, the classical ZODB3 egg
# wont be touched if you have one.
#echo '#\n'
#  As we support WSGI, there is an important thing to know:
#   'zopelib' is an egg from repoze where live the zope code, we
#   totally do not NEED it, it's useless and make things buggy.
#   We build zopelib as a fake egg, as we have already zope in our
#   PYTHONPATH.
#   If you raelly want zopelib as an egg, (un)comment things in the buildout(develop, patch). But i am use, you dont have to !
#echo '#\n'
#   TO run in wsgi:
#      paster serve etc/dev.ini
#      paster serve etc/prod.ini
#echo '#\n'
#   You can use the minitage.profils.paste-initd to generate init scripts
#   wrappers for paste.

#echo '##############################################################################\n'

[buildout]
# DESACTIVATE THIS IF YOU WANT TO USE YOUR VENV/SYSTEM PYTHON
# the ${project}.cfg file can be generated/updated via the kgs part, it will fix all
# eggs versions used.
extends=
    etc/${project}.cfg
    etc/${mode}.cfg
    etc/minitage.cfg
parts=
#if $mode != 'zeo':
#   etc/zeo.cfg
#end if
#if $mode != 'relstorage':
#   etc/relstorage.cfg
#end if
#if $mode != 'zodb':
#    etc/zodb.cfg
#end if


