<html tal:define="viewname string:kss_triggereventinbinder_demo">
 
  <head>
    
    <link rel="stylesheet" type="text/css"
          tal:attributes="href string:${context/@@absolute_url}/++resource++kss_triggereventinbinder_demo.css"/>

    <!-- This should be included centrally from kss.demo. -->
    <script src="/++resource++firebuglite/firebug.js" type="text/javascript"></script>

    <metal:header use-macro="context/@@header_macros/header_resources" />

    <!-- Include the plugin javascript from here, as it's only used by this plugin. -->
    <script src="/++resource++kss_triggereventinbinder_demo.js" type="text/javascript"></script>
  
  </head>

  <body>
    
    <p metal:use-macro="context/@@body_macros/header">header</p>

    <h2>cacheability-triggerEventInBinder</h2>
    
    <p>
      cacheability-triggerEventInBinder triggers an event on a node, explicititely
      specifying the event binder id in which the event will trigger. In this sense 
      it triggers a continuation event.
    </p>

    <p>
      To compare with continueEvent from the core, continueEvent always continues the processing
      inside the same event binder. In this case, however the processing leaps from one binder
      instance to the other. This is essential in working with complex, stateful events.
    </p>

    <p>
      The next version of kss will provide a simpler, more consistent KSS syntax and javascript
      api for similar tasks.
    </p>

    <div id="triggers">
      <h3>Triggers</h3>
      <p><a class="button click cursorPointer singleton">Click</a>to trigger event in singleton binder</p>
      <p><a class="button click cursorPointer binderid">Click</a>to trigger event in binder id "example"</p>
      <p><a class="button click cursorPointer binderidother">Click</a>to trigger event in binder id "other"</p>
      <h3>Triggers and behaviour: rules</h3>
      <p><a class="button click cursorPointer singleton-behav">Click</a>to trigger in singleton binder, to behaviour rule</p>
      <p><a class="button click cursorPointer binderid-behav">Click</a>to trigger in binder with id "example", to behaviour rule</p>
      <p><a class="button click cursorPointer binderidother-behav">Click</a>to trigger in binder with id "other", to behaviour rule</p>
    </div>

    <div class="log">
      <h3>Log</h3>
      <p id="log-reset"><a class="clickable">Reset</a></p>

      <div id="logger"></div>
    </div>
  </body>
</html>
