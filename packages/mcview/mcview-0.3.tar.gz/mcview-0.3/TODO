mcview TODOs
============

* Also visualize LHEF events
   This will require writing a C++ LHEF parser library and SWIG-wrapping it. One
   for a rainy day, I think...

* Distribution on PyPI
   Would allow installation via easy_install. Needs to happen for pyhepmc, too.

* Use Soya for 3D
   Looks cool: http://home.gna.org/oomadness/en/soya3d/

* Make graphviz interactive (base on xdot.py)
   xdot doesn't work properly for me (the version downloaded end Oct 2008).

* Improve particle grouping in graphviz output
   The Python code does place the initial and FS particles in separate
   subgraphs. Maybe the failure to display as such is a flaw in pydot.

* Exit cleanly (ESC works... how to make "q" hook the same behaviour?)

* Auto-scrolling and auto-reading (with specified time intervals)
   So the UI can be left alone and make a nice display demo.

* Colourize colour-charged and singlet lines in different schemes 
   In graphviz, that is.

* Colourize mesons and baryons differently
   In 3D and graph...

* Print status info on scene (not in the 3D space)
   Event num, num particles...

* Interactive particles
   Click on a line for info box with PDG ID, mass, energy, mom.

* Embed in a GTK application
   It would be nice to have integrated viewing of the graph and 3D structures
   from one UI. Soya may play more nicely with the GTK embedding than visual
   does.
