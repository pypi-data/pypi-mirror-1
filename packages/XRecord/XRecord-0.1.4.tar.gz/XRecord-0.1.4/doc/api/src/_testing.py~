#!/bin/env python
from sqlite import XRecordSqlite
from mysql import XRecordMySQL
from postgresql import XRecordPostgreSQL
from db import XRecordFK

## db = XRecordSqlite ( name="_testing.db" )

## author = db.Manager.author(1)

## print author
## print author.blog_entry_author

## entry = db.Manager.blog_entry(1)

## print entry.author.ref

## print entry.entry_category

## for r in db.LazyXArray("blog_entry"):
##     print r

## for r in db.ArrayObject ( "SELECT * FROM blog_entry", __ucase_attr=1 ):
##     for a,v in r:
##         print a, v

## db.Close()

import sys

db = XRecordMySQL ( name = "netcon", user = "netcon" )

db.XRecordRefCacheEnable ( "customer", "cos" )

c1 = db.Manager.customer ( "p127a/110" )

#print c1.customer_ip_device

#db.SQLLog ( sys.stdout )

#print c1.cos, c1.cos.ref

#c1.cos = 1

#print c1.cos, c1.cos.ref
#c1.name = "+" + c1.name
#c1.save()

print "COS=", c1.cos
print c1.cos.ref

c1.save()
c1.name = "Helena D."
c1.save()

print c1.name
print c1.cos.ref

db.Close()

import sys

print "\nPOSTGRES\n";

db = XRecordPostgreSQL ( name = "xrecord_testing", user="postgres" )

#print db._info.GetForTable("author")

#db.SQLLog ( sys.stdout )
author = db.XRecord("author", 1)
print author
print author.blog_entry_author

l = db.XArray ( "blog_entry", "SELECT *, id as xxx from blog_entry" )
for r in l:
    print r['xxx']

db.Close()
