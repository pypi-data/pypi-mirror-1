import sys
from mysql import XRecordMySQL
from sqlite import XRecordSqlite

class MysqlDatabase(XRecordMySQL):

    connection_defaults = { 'name' : 'netcon', 'user': 'netcon' }
    
    def Initialize(self):
        pass

class SqliteDatabase(XRecordSqlite):

    connection_defaults = { 'name' : 'blog.sqlite' }

    def Initialize(self):
        @self.CustomXRecord("author")
        class author:
            def __repr__(self):
                return "Blog author: " + self.name

        @self.CustomXSchema("author")
        class author:
            def initialize(self):
                self.rename_child_reference ( "article_author", "articles" )

        @self.CustomXSchema("article")
        class article:
            def initialize(self):
                self.rename_mtm ( "article_category", "categories" )

                
db = SqliteDatabase.getInstance()
db.CheckConnection()

categories = db.XArrayIndexed ( "category", "id" )
print categories

#db.SQLLog ( sys.stdout )
for a in db.XArray ( "author" ):
    for i in range(5):
        art = db.Manager.article ( author=a, title="Some Title " + str(i), content = "AAAA" )
        art.Save()
    print a
    print a.articles
    for ar in a.articles:        
        print ar.categories
        #ar.add_categories = categories[1]
    
db.XArray ( "category", "SELECT * FROM category")

db.Close()


