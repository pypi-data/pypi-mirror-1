Implementation of PEP 362 (Function Signature Objects)
++++++++++++++++++++++++++++++++++++++++++++++++++++++

What is this?
====================

An implementation of `PEP 362`_; an object representation of the call signature
of functions/methods.

Hopefully this code will end up in Python's standard library at some point
(aiming for Python 2.6).

.. _PEP 362: http://www.python.org/dev/peps/pep-0362/


Where is the documentation
==========================

`PEP 362`_ is considered the official documentation for this code.


Why package it up?
====================

There has been some interest in the work now.  I am still hoping to get the code
into Python's standard library, but until then there is no reason for the code
to not be used by others immediately.


What versions of Python does it work with?
==========================================

Running the unit tests suggests that Python 2.4 and greater work with the code.
But this is NOT a guarantee this will hold for future versions of this code!

The code, as-is, also runs on Python 3.0a1.


What is the version history?
============================

The version number will get bumped as open issues in the PEP are closed.

0.6
---

* Removed all ``has_*`` methods.

* Added __getitem__ and __iter__ method to Signature.  That led to the removal
  of Signature.parameters.

* Fixed a bug in setting the annotation for variable keyword arguments.


0.4
----

Initial release.  Corresponds to verion 58051 of PEP 362.
