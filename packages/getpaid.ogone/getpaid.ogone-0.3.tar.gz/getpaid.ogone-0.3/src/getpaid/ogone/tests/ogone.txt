Ogone Payment processor
=======================

   Let's have a look at the basic methods first, the one that are used to
   create the url and parameters to ogone

   At first let's create a fake Store:
     >>> from zope.interface import directlyProvides
     >>> from getpaid.core.interfaces import IStore
     >>> class SitePropertiesStub(object):
     ...     default_language = 'en'
     >>> class PortalPropertiesStub(object):
     ...     site_properties = SitePropertiesStub()
     >>> from zope.interface import implements
     >>> from zope.app.annotation.interfaces import IAttributeAnnotatable
     >>> class StoreStub(object):
     ...     "A stub store"
     ...     implements(IAttributeAnnotatable)
     ...     portal_properties = PortalPropertiesStub()

     >>> store = StoreStub()
     >>> directlyProvides(store, IStore)

   We fetch the defined processor:

     >>> from getpaid.core.interfaces import IPaymentProcessor
     >>> from zope.component import getAdapter
     >>> processor_name = 'Ogone Payments'
     >>> processor = getAdapter(store,
     ...                        IPaymentProcessor,
     ...                        processor_name)
     >>> processor
     <getpaid.ogone.ogone.OgoneStandardProcessor object ...>

  Let's test the language that will be requested in the ogone transaction.
  With no parameter the default language will be the default language of the
  store:

     >>> from zope.publisher.browser import TestRequest
     >>> request = TestRequest()
     >>> store.request = request
     >>> processor.getLanguage()
     'en_en'

  So if we change the default language in the store:
     >>> store.portal_properties.site_properties.default_language = 'fr'

  We get a transation in french:
     >>> processor.getLanguage()
     'fr_fr'

  Now if query the store with an English request:

     >>> english_request = TestRequest(environ={'HTTP_ACCEPT_LANGUAGE':'en,de'})
     >>> store.request = english_request
     >>> processor.getLanguage()
     'en_en'
     >>> german_request = TestRequest(environ={'HTTP_ACCEPT_LANGUAGE':'de,fr'})
     >>> store.request = german_request
     >>> processor.getLanguage()
     'de_de'

  Let's test now the SHA1 In Signature
  At first, we define some important parameters in the standard options of
  the Ogone processor:

     >>> from getpaid.ogone.interfaces import IOgoneStandardOptions
     >>> ogone_parameters = IOgoneStandardOptions(store)
     >>> ogone_parameters
     <getpaid.core.options.OgoneStandardOptions object ...>
     >>> ogone_parameters.shain = 'Mysecretsig'
     >>> ogone_parameters.currency = 'EUR'
     >>> ogone_parameters.pspid = 'MyPSPID'

  We create a fake order:

     >>> class OrderStub(object):
     ...    """
     ...    This is a fake order
     ...    """
     ...    order_id = 1234
     ...
     ...    def getTotalPrice(self):
     ...        "return the total price of the order"
     ...        return 15.00

  We can now ask for the SHA Signature of this order:

     >>> order = OrderStub()
     >>> processor.createSHASignature(order)
     'CC88E974F684C0804FD98BEA2FE403E9D11534BB'



