
Outstanding tasks
-----------------

. Add an RPC handler to provide data about source code in VCS.

. Add some GViz providers to offer the data managed by VCS.

- Implement data source provider for Ticket->Query

+ Retrieve events related to ticket attachments for Timeline->Events

+ Implement data source provider for Ticket->Info

- Add an option in GViz milestones in order to only show data about 
  active milestones.

- Cache the requests and optimize the call/response life cycle by 
  using the `reqId` parameter.

+ Remove unnecessary imports.

- Implement various gadget border providers.

- Allow people to upload and use their own image and CSS borders in
  gadgets.

- Ensure that pictures submitted for image-based gadget borders have 
  the proper dimensions.

- Implement local gadget borders with the help of Trac Resources.

- Implement preview capabilities for gadgets and borders.

- Implement navigation to Trac Gadgets area.

- Implement context navigation contributors to Trac Gadgets area.

+ Add a page to view the images in a gadget border.

+ Add a page to list available borders.

- Add support for CSS-based and external (HTTP) gadget borders.

- Separate GVizSystem and GVizModule ?

. Provide default border images for gadgets.

+ Provide an interface so that plugins and extensions can 
  contribute with other checksum algorithms.

+ Add checksum algorithms in `zlib` module: adler32, crc32

- Write tests for the different features included in the plugin.

- Add labels to the data sources. bah!

- Include formatted values for dates in JSON result.

+ Fix the issue with selecting changed tickets since timestamp.

- Ensure that columns are always arranged in the same order (i.e. use 
  ordered dicts)

- GViz API QL: Allow to select the columns to be returned, their 
  order, and labels.

- GViz API QL: Add support for limitting the number of returned rows, 
  as well as skipping a given number of first rows.

- GViz API QL: Add tasks to support `from`, `where`, `group by`, 
  `pivot`, `order by`, `format` and `options` clauses.

+ Add support for retrieving table data in reStructuredText (rst).

- Allow data source providers to control the details needed to handle 
  queries.

+ Fix MIME types returned by MoinMoin and reStructuredText encoders.
