
Outstanding tasks
-----------------

- Add IPermissionRequestor to TracGVizSystem and others

- Implement data source provider for Ticket->Query

- Implement data source provider for Ticket->Recent Changes

- Implement data source provider for Ticket->Info

- Add an option in GViz milestones in order to only show data about 
  active milestones.

- Cache the requests and optimize the call/response life cycle by 
  using the `reqId` parameter.

- Implement GViz queries.

- Remove unnecessary imports.

- Implement various gadget border providers.

- Allow people to upload and use their own image and CSS borders in
  gadgets.

- Ensure that pictures submitted for image-based gadget borders have 
  the proper dimensions.

- Implement local gadget borders with the help of Trac Resources.

- Implement preview capabilities for gadgets and borders.

- Implement navigation to Trac Gadgets area.

- Implement context navigation contributors to Trac Gadgets area.

- Add a page to view the images in a gadget border.

- Add a page to list available borders.

- Add support for CSS-based and external (HTTP) gadget borders.

- Separate GVizSystem and GVizModule ?

- Provide default border images for gadgets.

- Add checksum algorithms in `zlib` module: adler32, crc32

- Write tests for the different features included in the plugin.

- Add labels to the data sources. bah!

- Include formatted values for dates in JSON result.

+ Fix the issue with selecting changed tickets since timestamp.

- Ensure that columns are always arranged in the same order (i.e. use 
  ordered dicts)

- Support fnmatch (and possibly other ;) patterns in `name` parameter 
  for the different Wiki providers.

- Add tasks for GViz SQL support.
