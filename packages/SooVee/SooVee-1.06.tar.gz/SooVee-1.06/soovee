#!/usr/bin/python
#
# (c) 2009 Jeremy AustinBardo <tjaustinbardo AT gmail DOT com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
"""
SooVee Serial Audio Player - This file loads the interface. It 
imports the interface either from L{soovee.gui} or L{soovee.cli}. Intialize 
chosen interface for SooVee by first passed arg or absence of one.

Usage:
======
    - soovee: Load graphical, then if fails load command, else stop with error.
    - soovee term: Load command, else stop with error. Also works when script is
        named svterm either by linking or duplication.
    - soovee view: Load graphical, else stop with error. Also works when script 
        is named svview either by linking or duplication.
"""
import sys

def _LoadGui():
    """
    Wrap import of soovee.gui in try-except to catch possiblity of gui not being
    installed on this system.
    
    @return: soovee.gui object if installed
    @rtype: object
    """
    try: 
        import soovee_app.gui as app
        return app

    except ImportError as error:
        pass

def _LoadCli():
    """
    Wrap import of soovee.cli in try-except to catch possiblity of cli not being
    installed on this system.
    
    @return: soovee.cli object if installed
    @rtype: object
    """
    try: 
        import soovee_app.cli as app
        return app

    except ImportError as error:
        pass

if __name__ == "__main__":
    #
    #{ Try to set switch by script name
    #
    
    switch = (
        "term" if sys.argv[0].endswith("svterm")
        else "view" if sys.argv[0].endswith("svview") else None
        )
    argoptions = sys.argv[1:] if switch else sys.argv[2:]
    #
    #{ Try to set switch to first argument
    #
    try: 
        switch = switch if switch else sys.argv[1]
        
        if switch.lower() == "term": #: Load soovee.cli
            App = _LoadCli()

            if not App: #: Watch for an uninstalled cli interface
                print("Error: SooVee command interface not installed")
                exit(-1)

        elif switch.lower() == "view": #: Load soove.gui
            App = _LoadGui()
            
            if not App: #: Watch for an uninstalled gui interface
                print("Error: SooVee grapical interface not installed")
                exit(-1)
        
        else: #: Catch all other unqualified first command arguments
            print("SooVee:","Command Line: sv term or Graphical Interface: sv view")
            exit()
    #
    #{ Try to first soove.gui, second soove.cli, finally fail
    #
    except IndexError:
        App = _LoadGui()

        if not App: #: Watch for an uninstalled gui interface
            App = _LoadCli()

            if not App: #: Watch for an uninstalled cli interface
                print("Error: SooVee interface not installed")
                exit(-1)

    #
    #{ Execute chosen soovee interface
    #
    App.Exec(optargs=argoptions if argoptions else [])
