<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="example.customization">

    <!-- We need to include the package of the portlets we are customising -->
    <include package="plone.app.portlets" />

    <!-- 
        Customize a browser resource: We use the same name, but a new layer,
        and reference a different file. The image path is relative to the
        directory where this ZCML file is found. For non-image resources,
        we would use 'file' instead of 'image' as the attribute.
     -->
    <browser:resource
        name="checkout.png"
        image="ugly_checkout.png"
        layer=".interfaces.IExampleCustomization"
        />
        
    <!-- 
        Customize a browser view/page for a new context type: We use the 
        same class as the original (from plone.app.content), but feed it a 
        new template. 
        
        In other scenarios, we may want to implement a custom view class, or 
        use a template only, or use a class only (no template).
    -->
    <browser:page
        for="Products.ATContentTypes.interface.document.IATDocument"
        class="plone.app.content.browser.reviewlist.FullReviewListView"
        name="full_review_list"
        template="document_full_review_list.pt"
        permission="cmf.ReviewPortalContent" />
        
    <!-- Here we override the default view, for our layer only -->
        
    <browser:page
        for="*"
        class="plone.app.content.browser.reviewlist.FullReviewListView"
        name="full_review_list"
        template="standard_full_review_list.pt"
        layer=".interfaces.IExampleCustomization"
        permission="cmf.ReviewPortalContent" />
    
    
    <!--
        Customize a viewlet: We use a new layer for a template-only viewlet
        configured in plone.app.layout.viewlets. It is also possible to
        specify a class (which will have update() and render() methods, the
        former used to update the viewlet before rendering and the latter
        used to return its rendered HTML).
    -->
    <browser:viewlet
        name="plone.colophon"
        for="*"
        manager="plone.app.layout.viewlets.interfaces.IPortalFooter"
        template="funny_colophon.pt"
        permission="zope.Public"
        layer=".interfaces.IExampleCustomization"
        />
    
    
    <!-- Customize a portlet renderer -->
    <plone:portletRenderer
        portlet="plone.app.portlets.portlets.recent.IRecentPortlet"
        layer=".interfaces.IExampleCustomization"
        template="mostly_recent.pt"
        />


</configure>
