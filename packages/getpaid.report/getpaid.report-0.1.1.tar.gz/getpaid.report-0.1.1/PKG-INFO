Metadata-Version: 1.0
Name: getpaid.report
Version: 0.1.1
Summary: Relational Reports For getpaid.core.
Home-page: http://code.google.com/p/getpaid
Author: Kapil Thangavelu
Author-email: kapil.foss@gmail.com
License: X11
Description: This package contains report for getpaid.
        
        
        =======
        CHANGES
        =======
        
        0.1 (2008-12-31)
        ----------------
        
        * add buildout for testing, make new order serialization reentrant,
        switch default db connection to in sqlite in memory, db must be
        set by app consumer [kapilt]
        * Changed the lenght of some of the schema fields so they match more
        realistic expectations, also used unicode for some of the fields
        instead of string, beter unicode than string (go python 3000)
        [horacio.duran]
        
        
        
        Detailed Documentation
        **********************
        
        getpaid.report
        ==============
        
        a one way synchronization of getpaid data structures to a rdbms for
        the purpose of constructing reports.
        
        setup
        =====
        
        setup the database schema
        -------------------------
        
        installing this getpaid.warehouse also creates a script, in a buildout
        its installed to $(buildout-directory)/bin/setup-report-db
        
        the script is invoked with the sqlalchemy database url. for example,
        to setup a postgres database:
        
        # createdb is the standard postgres tool for creating databases
        $ createdb getpaid
        $ ./bin/setup-report-db postgres://localhost/getpaid
        ... output of database creation script
        
        
        setting up the zope database connection
        ---------------------------------------
        
        you must configure the database url ... currently done in python from
        an existing product.
        
        >> from getpaid.report import schema
        >> from sqlalchemy import create_engine
        
        create a database connection to the database we're using
        
        >> db = create_engine('postgres://localhost/getpaid')
        
        bind it to the metadata
        
        >> schema.metadata.bind = db
        
        
        Download
        **********************
        
Keywords: zope zope3
Platform: UNKNOWN
