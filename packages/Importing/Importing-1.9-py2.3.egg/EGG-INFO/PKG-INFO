Metadata-Version: 1.0
Name: Importing
Version: 1.9
Summary: Import objects dynamically, lazily, "weakly", and more.
Home-page: http://peak.telecommunity.com/DevCenter/Importing
Author: Phillip J. Eby
Author-email: peak@eby-sarna.com
License: PSF or ZPL
Description: Need to import an object when all you've got is its name?  Need to lazily
        import modules, such that they don't actually get loaded until you use them?
        Want to have some code in a module that only gets run *if* another module is
        imported?  Then you need the "Importing" toolkit.
        
        Installing the toolkit (using ``"easy_install Importing"`` or
        ``"setup.py install"``) allows you to access the ``peak.util.imports`` module.
        This module was previously bundled for years inside of the general PEAK
        distribution, but is now available as a standalone module for your convenience.
        
        The "Importing" toolkit does not install or use any special import hooks, and
        is compatible with zipfile imports, ``py2exe``, etc.  Lazy and weak imports
        require should be compatible with almost any import hooks or hacks, as long as
        they have reasonable support for the ``reload()`` builtin.  The dynamic import
        utilities, however, require only that ``__import__()`` work correctly.
        
        
Platform: UNKNOWN
