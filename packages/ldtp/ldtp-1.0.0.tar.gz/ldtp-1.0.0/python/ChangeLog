2008-02-24  Nagappan A  <nagappan@gmail.com>

	* ldtpeditor (LdtpEditorGui.aboutClicked): Added about dialog
	interface.
	(LdtpEditorGui.convert_clicked): Just raise the exception in the
	generated code directly.

	* ldtprunner (executescript): Added one second delay between each
	script in a group.
	(replace_accessibility): If we are executing in a local box, then
	try to enable accessibility.

	* ldtputils.py (getFullPath): Moved function from ldtprunner to
	this file.

2008-02-23  Nagappan A  <nagappan@gmail.com>

	* ldtp.py, ldtpcodegen, ldtpeditor: Updated LDTP version and
	maintainer info.

	* ooldtp.py: Updated list of API wrappers.

2008-02-18  Nagappan A  <nagappan@gmail.com>

	* ooldtp.py: Updated list of API wrappers.

	* ldtp.py: Added INPUT and OUTPUT for all the API.

2008-02-11  Nagappan A  <nagappan@gmail.com>

	* ldtputils.py (imagecapture): Made the function to accept
	optional arguments. If the output file name is not provided a temp
	file, will be created and the user has to delete it. If window
	name is not provided, then the complete X root window is captured.

	* ldtpcodegen (packet.sendpacket): Fixed a crash, when the window
	title is 'Save as...'. ... was given as an unicode data. Did a
	workaround, just by capturing the exception.
	(packet.recvpacket): Fixed hang, during exception, lock was not
	released.

	* ldtp.py (parsexml): If, the XML data transfered from server to
	client is more than 512, the data part is written to a file and
	the file name, with path is sent to the client. This function,
	parses the new tag and reads the contents of file too.
	(getchild): Added new function to get a list of childrens matchin
	the component name or role name or both.

	* Makefile.am: Added ooldtp.py entry.

	* ooldtp.py : Added new file - Object oriented LDTP. A wrapper
	over the existing LDTP architecture.

2008-01-29  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (launchapp): Raised exception, if the application does
	not exist. Back ported to work with python 2.3.

2008-01-15  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (expandtablecell): Fixed component name argument, which
	is being passed to the ldtp service.

2008-01-04  Nagappan A  <nagappan@gmail.com>

	* ldtprunner (executescript): Added optional tag, testcasename, if
	this tag is present, then teststart, testend, pass, fail logs will
	be generated. To simplify the logging functions in the LDTP test
	scripts.

	* ldtpeditor (convert_clicked): Removed the generation of
	teststart, testend, pass, fail log functions.

	* ldtpeditor.glade: Modified quit1 as quit.

	* ldtp.py (releasecontext): Modified arguments as optional.

2007-12-06  Nagappan A  <nagappan@gmail.com>

	* ldtpcodegen: Fixed minor bug fixes in parsing the received packet.

	* ldtpeditor, ldtpeditor.glade: Added new files.

	* ldtputils.py: Fixed importing of statgrab library.

	* ldtp.py: Moved logging related functions to ldtpcommon.py.

2007-11-09  Harishankaran K <sp2hari@gmail.com>
	
	* ldtpeditor: Implemented the code for Play button.

2007-09-03  Nagappan A  <anagappan@novell.com>

	* ldtprunner, *.py, ldtpcodegen, ldtprecord: Updated all the files
	for the new address in LGPL license.

2007-08-20  Nagappan A  <anagappan@novell.com>

	* ldtp.py (PollServer.start_polling_server): Updated the code to
	call os._exit, instead of sys.exit as it was throwing an exception
	when shutting down.

2007-08-14  Nagappan A  <anagappan@novell.com>

	* ldtp.py (log): In Solaris, the msg received with the exception
	is an instance. So, we just need to interpret the instance and use
	the respective string.

	* ldtputils.py (waitnanoseconds): Implemented new function, which
	will sleep for specified nano seconds.

2007-08-09  Nagappan A  <anagappan@novell.com>

	* ldtpcodegen (PollServer.handlePacket): Thread should exit
	properly when stop command issued.

	* ldtprecord (processDataFunction): Implemented code generation
	for table cell, tree table cell, panel, right click.

	* ldtp.py (setloglevel): Removed unnecessary print statements.

2007-07-27  Nagappan A  <anagappan@novell.com>

	* ldtp.py (log): Should handle cases, if priority is passed with
	empty string or with a type other than string.

2007-06-26  Nagappan A  <anagappan@novell.com>

	* ldtprecord: Updated all the print statements to use " instead of '.

2007-05-16  Nagappan A  <anagappan@novell.com>

	* README: Added new file.

2007-05-14  Nagappan A  <anagappan@novell.com>

	* ldtprecord, ldtpcodegen: Added new code for recording.

	* ldtplib: Created new ldtplib directory.

	* ldtputils.py (pstats): Re-added the code for, capturing memory and
	CPU utilization statistics for an application and its related
	processes.

	* ldtp.py: Removed code related to recording. Updated code to use
	thread index and command index, instead of a random number
	generated at run-time. Which was a perfomance issue.
	(launchapp): If not a TCP environment, then launch the application
	locally.

2007-03-07  Guofu Xu <Guofu.Xu@palmsource.com>

	* ldtprunner (getElapsedTime): The number of hour was error when
	_endTime great then 60. Bug # 415160 fixed.

2007-02-14  Nagappan A  <anagappan@novell.com>

	* ldtp.py (objtimeout, guitimeout): Added function to change the
	default global timeout period for an object and a window.

	* ldtp.py: Bumped version to 0.8.0.

2007-02-14  Guofu Xu <Guofu.Xu@palmsource.com>

	* ldtprunner (executegroup): Added to track test case status, like
	entering into test case, running a test case and exiting a test
	case. So with this we can save and restore the status of given
	test-case.

2007-01-30  Nagappan A  <anagappan@novell.com>

	* ldtprunner (executescript): Escape unicode message string.

	* ldtp.py (guiexist): Now this function can be used to check
	whether an object exist inside the given window.

2007-01-22  Nagappan A  <anagappan@novell.com>

	* ldtp.py (removecallback): Added new function to remove callback
	functions that are registered through onwindowcreate.

2007-01-18  Nagappan A  <anagappan@novell.com>

	* ldtprunner (executeldtp): Log level can be set using ldtprunner
	input XML file.

	* ldtp.py (setloglevel): Now takes argument as string (CRITICAL,
	DEBUG, INFO, WARNING) or python logging types.
	(generatemouseevent): Modified the format of x and y from string
	to int.

2007-01-04  Nagappan A  <anagappan@novell.com>

	* ldtprunner (executecategories): Added code to handle category
	XML tag. Also now generates categorystart, end, status,
	totaltimeinfo for a category.
	(executegroup): Now generates groupstart, end, status, timeinfo
	for a group.
	(getElapsedTime): Modified the implementation to calculate time
	[hours, minutes, seconds] and days.

	* ldtp.py (LDTP_LOG_CATEGORYSTART, LDTP_LOG_CATEGORYEND)
	(LDTP_LOG_CATEGORYSTATUS, LDTP_LOG_TIMEINFO)
	(LDTP_LOG_TOTALTIMEINFO): Added new log levels, used by ldtprunner
	as proposed by Palm Source.

2006-12-22  Nagappan A  <anagappan@novell.com>

	* ldtprunner (getElapsedTime): Added new function to calculate the
	time elapsed.

2006-12-21  Nagappan A  <anagappan@novell.com>

	* ldtp.py (display): When DISPLAY is None, don't proceed further.
	(TIMEINFO): Added timeinfo log, to log the elapsed time.

	* ldtprunner (executegroup): Added timeinfo to calculate the time
	elapsed to complete a group execution.
	(executescript): Modified groupstatus / testcasestatus output
	format.

2006-12-15  Nagappan A  <anagappan@novell.com>

	* ldtp.py (makeRecord, LdtpLogRecord, LdtpLogger): Added custom
	logger functions and classes.

	* ldtprunner (executegroup, executescript): Modified log argument
	from warning to info.

2006-12-13  Nagappan A  <anagappan@novell.com>

	* ldtprunner: Fixes bug # 385416 - Need to connect remote ldtp by
	ldtprunner.

2006-12-05  Prashanth Mohan  <prashmohan@gmail.com>

	* ldtp.py (setcursorposition): Corrected typo for command name
	(getcursorposition): Corrected typo for command name
	(stateenabled): Corrected typo for command name

2006-11-23  Nagappan A  <anagappan@novell.com>

	* ldtprunner (executecategories): Palm Source QA team suggested to
	have 'category' level above group level. Also they want to have
	'testcase' as tag name instead of 'group' tag.

	* ldtp.py (log): Based on suggestion from Palm Source added
	testcase start, stop, status.

2006-11-20  Rodney Dawes  <dobey@novell.com>

	* ldtp.py (class command): New class to enum the commands as integers
	(generatexml): Take commandId integer argument instead of a string for
	the command name, so that we can do less work in the engine
	Convert the commandId to a string for writing to the XML
	(class state): Enum the commands as integers instead of strings
	Remove the __or__ override as python won't bitwise OR strings anyway,
	and we don't need to change the behavior for integers
	(other API method calls): Replace string command names with integer
	enumeration values from the command class
	
2006-10-17  Rodney Dawes  <dobey@novell.com>

	* ldtp.py (press): New method so that we can press, without a full
	click, on widgets. Currently only implemented for toggle buttons
	(objectexist): New method to check that an object exists in the
	widget hierarchy for a window

2006-10-25  Nagappan A  <anagappan@novell.com>

	* ldtp.py (invokemenu): Implemented new function to handle
	embedded component object type

2006-10-12  Nagappan A  <anagappan@novell.com>

	* ldtp.py (bindtext): Set locale from client side, instead of
	interpreting it from LDTP engine
	(startldtplog, stopldtplog, ldtplog): Existing functions have been
	renamed to new name
	(startlog, stoplog, log): Now uses Python logging module
	(setloglevel): Added new function to set the python logging module
	log level explicitly, though the default is warning
	(addlogger): User can add their own python logger by passing a
	configuration file as an argument
	(setlocale): Added new function to set the locale by user, though
	the environment variable LANG is different
	* ldtprunner: Modified command line parser to use OptionParser
	python module
	(executeldtp): Added a new tag to get the logger configuration
	file

2006-09-28  Rodney Dawes  <dobey@novell.com>

	* Makefile.am: Need to pass $@ as the second argument to the compile
	method in python, so that the output goes to the right place

2006-09-28  Rodney Dawes  <dobey@novell.com>

	* Makefile.am: Add bits to byte-compile the modules and install the
	byte-compiled cache files as well

2006-09-27  Myron Walker <myron.walker@gmail.com>

	* ldtp.py: Added the singleclickrow API implemented by Puneet
	Mishra <punmish211@yahoo.com>.

2006-09-27  Nagappan A  <anagappan@novell.com>

	* ldtp.py (selectrow): Patched selectrow to take nMatches and the
	default match is to find the first match (0th index).
	(generatemouseevent): Added new function to generate mouse event
	on the given X and Y coordinates
	(generatekeyevent): Generate keyboard events on the currently
	focused window.
	(launchapp): Now takes the default arugment as 1, which will
	enable accessibility (set accessibility environment variables)and
	then start the application.

	* ldtpcodegen.py (parsexml): Parses the sleep interval command
	from XML and generates LDTP wait command.
	(generate_python_code): Removed license.txt dependency.

	* ldtprecord (parsexml): Modified the XML parsing tag from RECORD
	to RESPONSE

2006-09-21  Rodney Dawes  <dobey@novell.com>

	* ldtp.py (remap): Update the documentation as undoremap () no longer
	needs to be called after calling remap () and using the updated map
	(undoremap): Add this method back in for compatibility, so that scripts
	which already use it won't fail complaining that undoremap is undefined
	Document undoremap as deprecated

2006-09-18  Nagappan A  <anagappan@novell.com>

	* ldtputils.py (execute): Throw exception if LTFX command not
	found in the default executable PATH

2006-09-12  Nagappan A  <anagappan@novell.com>

	* ldtp.py (launchapp): launchapp can now take optional command
	line argument

2006-09-11  Nagappan A  <anagappan@novell.com>

	* ldtp.py (launchapp): Moved launchapp from ldtputils.py to
	ldtp.py

2006-08-31  Nagappan A  <anagappan@novell.com>

	* ldtp.py: Added functionality to ldtp to work from a remote
	location. Thanks to Punit Mishra of Palm Source for providing the
	patch.

2006-08-18  Nagappan A  <anagappan@novell.com>

	* ldtp.py (verifysetvalue): Fixed command argument

2006-08-17  Nagappan A  <anagappan@novell.com>

	* ldtp.py (getapplist): Implemented new function to get the list
	of accessibility application window title, that are currently
	opened.

2006-08-14  Harishankaran <sp2hari@gmail.com>

	* ldtpcodegen.py (generatecommand): Generates dlg for font
	chooser, file chooser, alert windows

2006-08-13  Nagappan A  <anagappan@novell.com>

	* ldtp.py: Now LdtpExecutionError will be raised with reason for
	failure.

2006-08-01  Rodney Dawes <dobey@novell.com>

	* Makefile.am (install-data-local): Installation will now obey
	prefix path.

2006-08-01  Harishankaran <sp2hari@gmail.com>

	* ldtprunner (executldtp) : Implemented check for logfile to include
	~ , ., and .. in the log file path.
	
2006-08-01  Nagappan A  <anagappan@novell.com>

	* ldtp.py (generatexml, getresponse): Verbose text will be printed
	on the console, iff LDTP_DEBUG environment variable is set.

	* ldtputils.py (LdtpDataFileParser.setfilename): Verbose text will
	be printed on the console, iff LDTP_DEBUG environment variable is
	set.

2006-07-27  Prashanth Mohan  <prashmohan@gmail.com>

	* ldtp.py (parsexml): Fixed to encode response data as utf-8
	encoding

2006-07-23  Nagappan A  <nagappan@gmail.com>

	* ldtputils.py (wait): Added wait function again.

2006-07-21  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (hasstate): Implemented new function.
	* ldtp.py (state): Added new class.

2006-07-07 S.Venkateswaran <wenkat.s@gmail.com>

	* parsexml.py: Parser for the XML from the server to produce the
	python action script

	* genxml.py: Produces the data XML file for a recording
	
2006-07-07 S.Theyagarajan <theyaga@gmail.com>

	* record.py: Client for recording.Used to pass commands to ldtp
	server

2006-07-05  Prashanth Mohan  <prashmohan@gmail.com>

	* ldtp.py (generatexml): According to XML Specs, CDATA should not
	be escaped. It was wrongly escaped earlier.
	(remap): The Application Name is rundundant Input and the
	application name instead of the window title was assumed to be the
	pattern.

2006-06-27  Prashanth Mohan  <prashmohan@gmail.com>

	* ldtp.py (generatexml): XML strings sent to the server are not
	escaped using the saxutils.escape function

2006-06-27  Nagappan A  <nagappan@gmail.com>

	* gldap.py (executegroup): Added comment, testcaseid tag to
	logging based on Alex request Hao.Yu@palmsource.com

2006-06-19  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (getresponse): Handle TypeError exception
	* Makefile.am: Fixed installing to path by removing DESTDIR

2006-06-15  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (stopscriptserver): New function implemented

2006-06-12  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (parsexml): Fixed argument name as it was conflicting
	with the xml module

2006-05-30  Nagappan A  <nagappan@gmail.com>

	* ldtputils.py (launchapp): Fixed issues in invoking the
	application.

	* ldtp.py (invokeltfxcallback): Initial ltfx callback handling
	code has been implemented.
	(getlabelatindex): New function has implemented.

2006-05-13  Prashanth Mohan  <prashmohan@gmail.com>

	* ldtp.py (gettabcount): Fixed Bug #341612

2006-05-11  Nagappan A  <nagappan@gmail.com>

	* ldtputils.py (launchapp): Modified os.execvp to
	commands.getstatusoutput as the previous one is not working in few
	distributions.

2006-05-11  Prashanth Mohan  <prashmohan@gmail.com>

	* ldtp.py (getcursorposition, setcursorposition): Added these
	functions to close Bug #341391

2006-05-07  Prashanth Mohan  <prashmohan@gmail.com>
	
	* ldtp.py (mouseleftclick, mouserightclick, mousemove): Mouse
	Registry events. Takes window name and object as argument
	returning nothing.
	* ldtp.py (enterstring): Keyboard registry event to enter string
	
2006-05-02  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (parseobjectlist): If no elements in XML, just return
	None

2006-04-26  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (bindtext): Implemented new function
	* ldtputils.py (launchapp, execute): Added new functions from
	preivous releases and also all LTFX functions

2006-04-24  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (startlog): Modified to overwrite the log file by
	default

2006-04-21  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (menucheck, menuuncheck): Added new function to check /
	uncheck menu

2006-04-18  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (reinitldtp): Implemented reinitldtp function

2006-04-17  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (handle_client): Handle keyboard interrupts

2006-04-14  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (invokecallback): New socket connection created when the
	callback is invoked and all the send and received of the callback
	functions are through the new socket fd
	* ldtp.py (start_polling_server): Poll all the newly created
	sockets. When handle_client returns None, polling will be quit
	* ldtp.py (handle_client): Return None, when no data available

2006-04-12  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (sendpacket, recvpacket): Implemented events lock to
	avoid dead lock condtion and synchornize between threads

2006-04-10  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (sendpacket, recvpacket): Use pool fd, for sending and
	receiving data from / to ldtp engine

2006-04-03  Nagappan A  <nagappan@gmail.com>

	* ldtp.py (parsexml): Added LDTP_DELAY_CMD to delay each command
	with the specified seconds

2006-03-29  Nagappan <nagappan@gmail.com>

	* gldap.py (executescript): Pass / fail report of a group are now
	logged in the XML.

2006-03-28  Nagappan <nagappan@gmail.com>

	* ldtp.py (selectlabelsparentbyname): New API's implemented based
	on bug # 336458.

2006-03-27  Nagappan <nagappan@gmail.com>

	* ldtp.py (selecttextbyname): New API's implemented based on bug #
	316044.

2006-03-16  Nagappan <nagappan@gmail.com>

	* ldtp.py (PollServer.run): Handle all exception under a poll
	thread

2006-03-15  Nagappan <nagappan@gmail.com>

	* ldtp.py (PollServer.start_polling_server): Patch to fix
	TypeError based on comment #6 in bug # 333090
	* ldtp.py (generatexml, parsexml): Patch to fix bug # 333096 and
	bug # 334512
	* ldtp.py (getCData, parseobjectlist): New function implemented
	due to above changes
	* ldtp.py (getwindowlist, getobjectlist, getobjectinfo): Updated
	to use parseobjectlist function
	* ldtp.py (verifysettext): Patch to fix bug # 334396, Argument
	variable name mismatch fix

2006-03-09  Nagappan <nagappan@gmail.com>

	* ldtp.py (parsexml): Returns one more value, object handle to
	data. Reason: If return value is in XML format and the respective
	function needs to process it, then this object is requirement.
	* ldtp.py (handle_packet): If self._peekResponsePacket is None,
	then we directly checked _responseType, which is not initialized
	and hit with an unbound exception. Fixed with a default value as
	None to _responseType.
	* ldtp.py (getwindowlist, getobjectlist, getobjectinfo,
	getobjectproperty): Added new functions - Fix Bug # 333221.
	* ldtp.py (start_polling_server): Fixed Bug # 333090 comment # 3.

2006-03-03  Nagappan <nagappan@gmail.com>

	* ldtp.py (selectrowpartialmatch): Fixes bug # 333090

2006-02-24  Nagappan <nagappan@gmail.com>

	* ldtp.py (selecttext): Added new API selecttext - bug #323445

2006-02-15  Nagappan A <nagappan@gmail.com>

	* ldtp.py: Removed keyboardinterrupted function, _keyboardIntFlag,
	_notificationflag variables.

2006-02-06  Veerapuram Varadhan <v.varadhan@novell.com>

	* Makefile.am: Install in $DESTDIR
	
2006-02-06  Veerapuram Varadhan <v.varadhan@novell.com>

	* Makefile.am: Initial version.
	* Makefile: Removed from cvs.
	
2006-01-30  Nagappan A <nagappan@gmail.com>

	* glday.py: Added traceback log incase of any unexpected failure
	* ldtp.py: Process packet if its not equal to None to avoid an
	exception

2006-01-27  Nagappan A <nagappan@gmail.com>

	* gldap.py (executescript), (executeldtp): Handled
	KeyboardInterrupt exception
	* *.py: Updated Copyright license year
	* ldtp.py: Implemented all the missing functions, Modified the
	code based on Varadhan suggestion. All the packets will be peeked
	from socket and if its appropriate for the current called
	function, then the actual packet will be retrieved from the
	socket. A new randomId logic has been introduced. Each calling
	function should send a random id and should wait for the random id
	in the response. Callback invocation happens in a new thread. At
	any point of time, only one callback method can be invoked. Code
	to handle, If ldtp server is not running, then invoke it.

2006-01-12  Nagappan A <nagappan@gmail.com>

	* Updated gldap.py to new ldtp exception format
	* Modified return values in functions in ldap.py
	* Added setcontext, selectrow, selectrowindex functions

2005-12-06  Prasanth Mohan <prashmohan@gmail.com>
2005-12-06  Venkateswaran S <wenkat.s@gmail.com>

	* Implemented initial version of new python wrapper to LDTP
