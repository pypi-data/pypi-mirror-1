Metadata-Version: 1.0
Name: mkvimproject
Version: 0.4.2.1
Summary: Create a VIM Project file
Home-page: http://www.eletztrick.de/software
Author: Stefan Eletzhofer
Author-email: stefan.eletzhofer@inquant.de
License: GPL
Description: ============
        mkvimproject
        ============
        
        :Author:    $Author: seletz $
        :Date:      $Date: 2007-06-30 16:21:48 +0200 (Sat, 30 Jun 2007) $
        :Revision:  $Revision: 2383 $
        
        Abstract
        ========
        
        This is an python utility to deal with VIM_ project files which
        are used by the project_ VIM plug-in.
        
        .. _VIM: http://vim.org
        .. _project: http://www.vim.org/scripts/script.php?script_id=69
        
        Usage
        =====
        
        This egg provides two python scripts, **mkvimproject** and **pproject**.
        The first is to create a project file from a directory tree, the second is
        a shortcut which creates a project file of the current directory and then
        launches VIM_ with that project file load.
        
        mkvimproject
        ------------
        
        **mkvimproject** creates a project file from a given directory. You can
        optionally provide a filters and predefined filter sets.
        
        The project file generated may be directly used with the project_ VIM
        plug-in.
        
        ::
        
        usage: mkvimproject [options]
        
        options:
        -h, --help            show this help message and exit
        -d DIR, --dir=DIR     the directory to scan
        -o OUT, --out=OUT     The output file
        -f FILTER, --filter=FILTER
        The extensions to allow.
        -s FILTERSET, --filterset=FILTERSET
        The filterset to use: one of python,c,none,plone,objc
        
        example::
        
        user@host: ~/develop/plone $ mkvimproject -d . -o plone.vpj -s plone
        user@host: ~/develop/plone $ ls -la plone.vpj
        -rw-r--r-- 1 seletz seletz 3279254 Jun 30 16:02 plone.vpj
        user@host: ~/develop/plone $ head plone.vpj
        plone="/Users/seletz/develop/plone" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        ArchGenXML_trunk="ArchGenXML_trunk" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        build="build" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        bdist.darwin-8.9.1-i386="bdist.darwin-8.9.1-i386" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        }
        bdist.macosx-10.3-fat="bdist.macosx-10.3-fat" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        }
        lib="lib" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        archgenxml="archgenxml" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        argouml="argouml" CD=. filter="*.diff *.patch *.py *.pt *.txt *.zcml *.xml *.cpt *.cpy *.vpy *.metadata *.dtml" {
        
        
        pproject
        --------
        
        **pproject** calls **mkvimproject** for the current directory and then launches VIM
        with that project file loaded. The project file is named like the name of the
        parent directory, with ".vpj" added.  If this file already exists, no new
        project file is created, VIM is directly launched (please see also the **-U**
        and **-X** options).
        
        ::
        
        usage: pproject [options]
        
        options:
        -h, --help            show this help message and exit
        -U, --update          Update projectfile.
        -X, --nolaunch        Do noit launch vim. Use with -U.
        -f FILTER, --filter=FILTER
        The extensions to allow.
        -s FILTERSET, --filterset=FILTERSET
        The filterset to use: one of python,c,none,plone,objc
        
        
        ::
        
        vim: set ft=rst tw=75 nocin nosi ai sw=4 ts=4 expandtab spell spelllang=en:
        
Keywords: vim project development tool python
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Text Editors :: Integrated Development Environments (IDE)
