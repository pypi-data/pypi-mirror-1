Metadata-Version: 1.0
Name: z3c.dav
Version: 1.0b2
Summary: Implementation of the WebDAV protocol for Zope3
Home-page: http://launchpad.net/z3c.dav
Author: Michael Kerrin
Author-email: michael.kerrin@openapp.ie
License: ZPL
Description: ======
        WebDAV
        ======
        
        The *z3c.dav* package is an implementation of the WebDAV protocol for Zope3.
        *z3c.dav* supports the *zope.app.folder* content type, within the scope of the
        core RFC2518 protocol. *z3c.dav* also contains a number of components that
        help developers support WebDAV in their application. These components include
        the ability to handle WebDAV specific errors, to generate multi-status
        responses, and an implementation of all core WebDAV methods exist that use
        zope component to lookup specific adapters that perform the required action.
        For example locking parses the request and then looks up a IDAVLockmanager
        adapter to perform the locking and unlocking of objects. But if the required
        adapter does not exist then a `405 Method Not Allowed` response is returned
        to the client.
        
        Add-on packages exist to support other standard Zope3 content types and
        services. These include:
        
        * z3c.davapp.zopeappfile
        
        Defines a common WebDAV data model for zope.app.file.file.File, and
        zope.app.file.file.Image content objects.
        
        * z3c.davapp.zopefile
        
        Defines a common WebDAV data model for zope.file.file.File content objects.
        
        * z3c.davapp.zopelocking
        
        Implements wrappers around the zope.locking utility to integrate with
        z3c.dav.
        
        Each of these packages uses an other Zope3 package to provide the underlying
        functionality.
        
        
        ==================
        Changes in z3c.dav
        ==================
        
        1.0b2
        =====
        
        - Be more pedantic in parsing `IF' conditional header. Raise `BadRequest'
        exception when no conditions are present in the header. Handle condition
        when there are no state tokens known by the system, here the conditional
        request should fail.
        
        - Improved the handling of `Unauthorized' and `Forbidden' errors during the
        processing of `PROPFIND' requests. Basically we return a `Unauthorized'
        response requesting the user to log-in when the problem occurs on the
        requested resource otherwise we render the problem into the `multistatus'
        response. In the case where we aren't allowed to list a folder we ignore
        the contents, unless it is the requested resource.
        
        - Register views for the `zope.security.interfaces.Forbidden' exceptions.
        
        - Remove all the deprecation warnings.
        
        1.0b1
        =====
        
        - Fix bug in COPY / MOVE methods when the destination URL contained quoted
        characters - https://bugs.launchpad.net/z3c.dav/+bug/163150
        
        - MKCOL and PROPFIND methods needed to expect a string as a value for the
        content-length header - https://bugs.launchpad.net/z3c.dav/+bug/163153
        
        0.9.1
        =====
        
        - Stricter property validation
        
        - Some servers pass the `Content-Length` header value as a string
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Zope Public License
Classifier: Programming Language :: Python
Classifier: Framework :: Zope3
