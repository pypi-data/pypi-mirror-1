# PySNMP SMI module. Autogenerated from smidump -f python OSPF-TRAP-MIB
# by libsmi2pysnmp-0.0.9-alpha at Thu Mar 26 19:36:31 2009,
# Python version (2, 4, 4, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( ospf, ospfAddressLessIf, ospfAreaId, ospfAreaNssaTranslatorState, ospfExtLsdbLimit, ospfIfIpAddress, ospfIfState, ospfLsdbAreaId, ospfLsdbLsid, ospfLsdbRouterId, ospfLsdbType, ospfNbrAddressLessIndex, ospfNbrIpAddr, ospfNbrRestartHelperAge, ospfNbrRestartHelperExitReason, ospfNbrRestartHelperStatus, ospfNbrRtrId, ospfNbrState, ospfRestartExitReason, ospfRestartInterval, ospfRestartStatus, ospfRouterId, ospfVirtIfAreaId, ospfVirtIfNeighbor, ospfVirtIfState, ospfVirtNbrArea, ospfVirtNbrRestartHelperAge, ospfVirtNbrRestartHelperExitReason, ospfVirtNbrRestartHelperStatus, ospfVirtNbrRtrId, ospfVirtNbrState, ) = mibBuilder.importSymbols("OSPF-MIB", "ospf", "ospfAddressLessIf", "ospfAreaId", "ospfAreaNssaTranslatorState", "ospfExtLsdbLimit", "ospfIfIpAddress", "ospfIfState", "ospfLsdbAreaId", "ospfLsdbLsid", "ospfLsdbRouterId", "ospfLsdbType", "ospfNbrAddressLessIndex", "ospfNbrIpAddr", "ospfNbrRestartHelperAge", "ospfNbrRestartHelperExitReason", "ospfNbrRestartHelperStatus", "ospfNbrRtrId", "ospfNbrState", "ospfRestartExitReason", "ospfRestartInterval", "ospfRestartStatus", "ospfRouterId", "ospfVirtIfAreaId", "ospfVirtIfNeighbor", "ospfVirtIfState", "ospfVirtNbrArea", "ospfVirtNbrRestartHelperAge", "ospfVirtNbrRestartHelperExitReason", "ospfVirtNbrRestartHelperStatus", "ospfVirtNbrRtrId", "ospfVirtNbrState")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Integer32, IpAddress, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")

# Objects

ospfTrap = ModuleIdentity((1, 3, 6, 1, 2, 1, 14, 16)).setRevisions(("2006-11-10 00:00","1995-01-20 12:25",))
if mibBuilder.loadTexts: ospfTrap.setOrganization("IETF OSPF Working Group")
if mibBuilder.loadTexts: ospfTrap.setContactInfo("WG E-Mail: ospf@ietf.org\n\nWG Chairs: acee@cisco.com\n           rohit@gmail.com\n\nEditors:   Dan Joyal\n           Nortel\n           600 Technology Park Drive\n           Billerica, MA  01821\n           djoyal@nortel.com\n\n           Piotr Galecki\n           Airvana\n           19 Alpha Road\n           Chelmsford, MA 01824\n           pgalecki@airvana.com\n\n           Spencer Giacalone\n           CSFB\n           Eleven Madison Ave\n           New York, NY 10010-3629\n\n\n           spencer.giacalone@gmail.com")
if mibBuilder.loadTexts: ospfTrap.setDescription("The MIB module to describe traps for the OSPF\nVersion 2 Protocol.\n\nCopyright (C) The IETF Trust (2006).\nThis version of this MIB module is part of\nRFC 4750;  see the RFC itself for full legal\nnotices.")
ospfTrapControl = MibIdentifier((1, 3, 6, 1, 2, 1, 14, 16, 1))
ospfSetTrap = MibScalar((1, 3, 6, 1, 2, 1, 14, 16, 1, 1), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfSetTrap.setDescription("A 4-octet string serving as a bit map for\nthe trap events defined by the OSPF traps.  This\nobject is used to enable and disable specific\nOSPF traps where a 1 in the bit field\nrepresents enabled.  The right-most bit (least\nsignificant) represents trap 0.\n\nThis object is persistent and when written\n\n\n\nthe entity SHOULD save the change to non-volatile\nstorage.")
ospfConfigErrorType = MibScalar((1, 3, 6, 1, 2, 1, 14, 16, 1, 2), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,9,11,1,6,13,4,10,8,2,12,5,7,)).subtype(namedValues=namedval.NamedValues(("badVersion", 1), ("optionMismatch", 10), ("mtuMismatch", 11), ("duplicateRouterId", 12), ("noError", 13), ("areaMismatch", 2), ("unknownNbmaNbr", 3), ("unknownVirtualNbr", 4), ("authTypeMismatch", 5), ("authFailure", 6), ("netMaskMismatch", 7), ("helloIntervalMismatch", 8), ("deadIntervalMismatch", 9), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfConfigErrorType.setDescription("Potential types of configuration conflicts.\nUsed by the ospfConfigError and\nospfConfigVirtError traps.  When the last value\nof a trap using this object is needed, but no\ntraps of that type have been sent, this value\npertaining to this object should be returned as\nnoError.")
ospfPacketType = MibScalar((1, 3, 6, 1, 2, 1, 14, 16, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(5,3,6,4,2,1,)).subtype(namedValues=namedval.NamedValues(("hello", 1), ("dbDescript", 2), ("lsReq", 3), ("lsUpdate", 4), ("lsAck", 5), ("nullPacket", 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfPacketType.setDescription("OSPF packet types.  When the last value of a trap\nusing this object is needed, but no traps of\nthat type have been sent, this value pertaining\nto this object should be returned as nullPacket.")
ospfPacketSrc = MibScalar((1, 3, 6, 1, 2, 1, 14, 16, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfPacketSrc.setDescription("The IP address of an inbound packet that cannot\nbe identified by a neighbor instance.  When\nthe last value of a trap using this object is\nneeded, but no traps of that type have been sent,\nthis value pertaining to this object should\nbe returned as 0.0.0.0.")
ospfTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 14, 16, 2))
ospfTrapConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 14, 16, 3))
ospfTrapGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 14, 16, 3, 1))
ospfTrapCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 14, 16, 3, 2))

# Augmentions

# Notifications

ospfLsdbOverflow = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 14)).setObjects(("OSPF-MIB", "ospfExtLsdbLimit"), ("OSPF-MIB", "ospfRouterId"), )
ospfVirtIfRxBadPacket = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 9)).setObjects(("OSPF-MIB", "ospfVirtIfAreaId"), ("OSPF-MIB", "ospfVirtIfNeighbor"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-TRAP-MIB", "ospfPacketType"), )
ospfNbrStateChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 2)).setObjects(("OSPF-MIB", "ospfNbrAddressLessIndex"), ("OSPF-MIB", "ospfNbrState"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfNbrIpAddr"), ("OSPF-MIB", "ospfNbrRtrId"), )
ospfVirtIfTxRetransmit = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 11)).setObjects(("OSPF-TRAP-MIB", "ospfPacketType"), ("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbType"), ("OSPF-MIB", "ospfVirtIfNeighbor"), ("OSPF-MIB", "ospfLsdbRouterId"), ("OSPF-MIB", "ospfVirtIfAreaId"), ("OSPF-MIB", "ospfRouterId"), )
ospfVirtNbrStateChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 3)).setObjects(("OSPF-MIB", "ospfVirtNbrRtrId"), ("OSPF-MIB", "ospfVirtNbrState"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfVirtNbrArea"), )
ospfNssaTranslatorStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 17)).setObjects(("OSPF-MIB", "ospfAreaNssaTranslatorState"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfAreaId"), )
ospfVirtNbrRestartHelperStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 20)).setObjects(("OSPF-MIB", "ospfVirtNbrRtrId"), ("OSPF-MIB", "ospfVirtNbrArea"), ("OSPF-MIB", "ospfVirtNbrRestartHelperStatus"), ("OSPF-MIB", "ospfVirtNbrRestartHelperAge"), ("OSPF-MIB", "ospfVirtNbrRestartHelperExitReason"), ("OSPF-MIB", "ospfRouterId"), )
ospfVirtIfAuthFailure = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 7)).setObjects(("OSPF-MIB", "ospfVirtIfAreaId"), ("OSPF-MIB", "ospfVirtIfNeighbor"), ("OSPF-TRAP-MIB", "ospfConfigErrorType"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-TRAP-MIB", "ospfPacketType"), )
ospfIfAuthFailure = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 6)).setObjects(("OSPF-MIB", "ospfIfIpAddress"), ("OSPF-TRAP-MIB", "ospfPacketType"), ("OSPF-TRAP-MIB", "ospfConfigErrorType"), ("OSPF-MIB", "ospfAddressLessIf"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-TRAP-MIB", "ospfPacketSrc"), )
ospfVirtIfConfigError = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 5)).setObjects(("OSPF-MIB", "ospfVirtIfAreaId"), ("OSPF-MIB", "ospfVirtIfNeighbor"), ("OSPF-TRAP-MIB", "ospfConfigErrorType"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-TRAP-MIB", "ospfPacketType"), )
ospfIfConfigError = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 4)).setObjects(("OSPF-MIB", "ospfIfIpAddress"), ("OSPF-TRAP-MIB", "ospfPacketType"), ("OSPF-TRAP-MIB", "ospfConfigErrorType"), ("OSPF-MIB", "ospfAddressLessIf"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-TRAP-MIB", "ospfPacketSrc"), )
ospfTxRetransmit = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 10)).setObjects(("OSPF-MIB", "ospfIfIpAddress"), ("OSPF-TRAP-MIB", "ospfPacketType"), ("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbType"), ("OSPF-MIB", "ospfNbrRtrId"), ("OSPF-MIB", "ospfLsdbRouterId"), ("OSPF-MIB", "ospfAddressLessIf"), ("OSPF-MIB", "ospfRouterId"), )
ospfRestartStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 18)).setObjects(("OSPF-MIB", "ospfRestartExitReason"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfRestartInterval"), ("OSPF-MIB", "ospfRestartStatus"), )
ospfVirtIfStateChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 1)).setObjects(("OSPF-MIB", "ospfVirtIfAreaId"), ("OSPF-MIB", "ospfVirtIfNeighbor"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfVirtIfState"), )
ospfIfStateChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 16)).setObjects(("OSPF-MIB", "ospfIfState"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfIfIpAddress"), ("OSPF-MIB", "ospfAddressLessIf"), )
ospfMaxAgeLsa = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 13)).setObjects(("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbRouterId"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfLsdbType"), ("OSPF-MIB", "ospfLsdbAreaId"), )
ospfIfRxBadPacket = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 8)).setObjects(("OSPF-TRAP-MIB", "ospfPacketSrc"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfIfIpAddress"), ("OSPF-TRAP-MIB", "ospfPacketType"), ("OSPF-MIB", "ospfAddressLessIf"), )
ospfLsdbApproachingOverflow = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 15)).setObjects(("OSPF-MIB", "ospfExtLsdbLimit"), ("OSPF-MIB", "ospfRouterId"), )
ospfOriginateLsa = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 12)).setObjects(("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbRouterId"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfLsdbType"), ("OSPF-MIB", "ospfLsdbAreaId"), )
ospfNbrRestartHelperStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 14, 16, 2, 19)).setObjects(("OSPF-MIB", "ospfNbrRestartHelperStatus"), ("OSPF-MIB", "ospfNbrRestartHelperExitReason"), ("OSPF-MIB", "ospfNbrRtrId"), ("OSPF-MIB", "ospfNbrAddressLessIndex"), ("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfNbrIpAddr"), ("OSPF-MIB", "ospfNbrRestartHelperAge"), )

# Groups

ospfTrapControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 14, 16, 3, 1, 1)).setObjects(("OSPF-TRAP-MIB", "ospfSetTrap"), ("OSPF-TRAP-MIB", "ospfConfigErrorType"), ("OSPF-TRAP-MIB", "ospfPacketType"), ("OSPF-TRAP-MIB", "ospfPacketSrc"), )
ospfTrapEventGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 14, 16, 3, 1, 2)).setObjects(("OSPF-TRAP-MIB", "ospfLsdbOverflow"), ("OSPF-TRAP-MIB", "ospfVirtIfRxBadPacket"), ("OSPF-TRAP-MIB", "ospfNbrStateChange"), ("OSPF-TRAP-MIB", "ospfVirtIfTxRetransmit"), ("OSPF-TRAP-MIB", "ospfVirtNbrStateChange"), ("OSPF-TRAP-MIB", "ospfNssaTranslatorStatusChange"), ("OSPF-TRAP-MIB", "ospfVirtNbrRestartHelperStatusChange"), ("OSPF-TRAP-MIB", "ospfVirtIfAuthFailure"), ("OSPF-TRAP-MIB", "ospfIfAuthFailure"), ("OSPF-TRAP-MIB", "ospfVirtIfConfigError"), ("OSPF-TRAP-MIB", "ospfIfConfigError"), ("OSPF-TRAP-MIB", "ospfTxRetransmit"), ("OSPF-TRAP-MIB", "ospfRestartStatusChange"), ("OSPF-TRAP-MIB", "ospfVirtIfStateChange"), ("OSPF-TRAP-MIB", "ospfIfStateChange"), ("OSPF-TRAP-MIB", "ospfMaxAgeLsa"), ("OSPF-TRAP-MIB", "ospfIfRxBadPacket"), ("OSPF-TRAP-MIB", "ospfLsdbApproachingOverflow"), ("OSPF-TRAP-MIB", "ospfOriginateLsa"), ("OSPF-TRAP-MIB", "ospfNbrRestartHelperStatusChange"), )

# Exports

# Module identity
mibBuilder.exportSymbols("OSPF-TRAP-MIB", PYSNMP_MODULE_ID=ospfTrap)

# Objects
mibBuilder.exportSymbols("OSPF-TRAP-MIB", ospfTrap=ospfTrap, ospfTrapControl=ospfTrapControl, ospfSetTrap=ospfSetTrap, ospfConfigErrorType=ospfConfigErrorType, ospfPacketType=ospfPacketType, ospfPacketSrc=ospfPacketSrc, ospfTraps=ospfTraps, ospfTrapConformance=ospfTrapConformance, ospfTrapGroups=ospfTrapGroups, ospfTrapCompliances=ospfTrapCompliances)

# Notifications
mibBuilder.exportSymbols("OSPF-TRAP-MIB", ospfLsdbOverflow=ospfLsdbOverflow, ospfVirtIfRxBadPacket=ospfVirtIfRxBadPacket, ospfNbrStateChange=ospfNbrStateChange, ospfVirtIfTxRetransmit=ospfVirtIfTxRetransmit, ospfVirtNbrStateChange=ospfVirtNbrStateChange, ospfNssaTranslatorStatusChange=ospfNssaTranslatorStatusChange, ospfVirtNbrRestartHelperStatusChange=ospfVirtNbrRestartHelperStatusChange, ospfVirtIfAuthFailure=ospfVirtIfAuthFailure, ospfIfAuthFailure=ospfIfAuthFailure, ospfVirtIfConfigError=ospfVirtIfConfigError, ospfIfConfigError=ospfIfConfigError, ospfTxRetransmit=ospfTxRetransmit, ospfRestartStatusChange=ospfRestartStatusChange, ospfVirtIfStateChange=ospfVirtIfStateChange, ospfIfStateChange=ospfIfStateChange, ospfMaxAgeLsa=ospfMaxAgeLsa, ospfIfRxBadPacket=ospfIfRxBadPacket, ospfLsdbApproachingOverflow=ospfLsdbApproachingOverflow, ospfOriginateLsa=ospfOriginateLsa, ospfNbrRestartHelperStatusChange=ospfNbrRestartHelperStatusChange)

# Groups
mibBuilder.exportSymbols("OSPF-TRAP-MIB", ospfTrapControlGroup=ospfTrapControlGroup, ospfTrapEventGroup=ospfTrapEventGroup)
