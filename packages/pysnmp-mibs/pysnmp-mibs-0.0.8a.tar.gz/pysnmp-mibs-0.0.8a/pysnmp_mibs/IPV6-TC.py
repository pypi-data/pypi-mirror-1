# PySNMP SMI module. Autogenerated from smidump -f python IPV6-TC
# by libsmi2pysnmp-0.0.9-alpha at Thu Mar 26 19:36:26 2009,
# Python version (2, 4, 4, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( Bits, Integer32, Integer32, MibIdentifier, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "MibIdentifier", "TimeTicks")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class Ipv6Address(TextualConvention, OctetString):
    displayHint = "2x:"
    subtypeSpec = OctetString.subtypeSpec+constraint.ValueSizeConstraint(16,16)
    fixedLength = 16
    pass

class Ipv6AddressIfIdentifier(TextualConvention, OctetString):
    displayHint = "2x:"
    subtypeSpec = OctetString.subtypeSpec+constraint.ValueSizeConstraint(0,8)
    pass

class Ipv6AddressPrefix(TextualConvention, OctetString):
    displayHint = "2x:"
    subtypeSpec = OctetString.subtypeSpec+constraint.ValueSizeConstraint(0,16)
    pass

class Ipv6IfIndex(TextualConvention, Integer32):
    displayHint = "d"
    subtypeSpec = Integer32.subtypeSpec+constraint.ValueRangeConstraint(1,2147483647L)
    pass

class Ipv6IfIndexOrZero(TextualConvention, Integer32):
    displayHint = "d"
    subtypeSpec = Integer32.subtypeSpec+constraint.ValueRangeConstraint(0,2147483647L)
    pass


# Exports

# Types
mibBuilder.exportSymbols("IPV6-TC", Ipv6Address=Ipv6Address, Ipv6AddressIfIdentifier=Ipv6AddressIfIdentifier, Ipv6AddressPrefix=Ipv6AddressPrefix, Ipv6IfIndex=Ipv6IfIndex, Ipv6IfIndexOrZero=Ipv6IfIndexOrZero)

