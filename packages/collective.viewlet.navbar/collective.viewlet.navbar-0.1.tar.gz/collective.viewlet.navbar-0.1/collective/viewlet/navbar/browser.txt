collective.viewlet.navbar
****************************

The collective.viewlet.navbar is a navigation viewlet for secondlevel. 
By default Plone takes care of the first level navigation with the portal_tabs.  

To test that the navigation is correct there needs to be some content second level content
in the site to show.
The structure that is build looks like:
				               siteRoot
				                 |                
				     "second level folder one"      
				             /       \
     "third level folder one"       "third level folder two"


  >>> from Products.Five.testbrowser import Browser
  >>> from Products.PloneTestCase.setup import portal_owner, default_password
  >>> browser = Browser()
  >>> browser.handleErrors = False
  >>> portal_url = self.portal.absolute_url()
  >>> browser.open(portal_url)
  >>> browser.getLink('Log in').click()
  >>> form = browser.getForm(id='login_form')
  >>> form.getControl('Login Name').value = portal_owner
  >>> form.getControl('Password').value =  default_password
  >>> form.getControl('Log in').click()
  >>> second_folder = 'slfone'
  >>> third_level_one = 'tlfone'
  >>> third_level_two = 'tlftwo'
  >>> browser.open(portal_url + '/createObject?type_name=Folder')
  >>> browser.getControl('Title').value = second_folder
  >>> browser.getControl('Save').click()
  
  >>> browser.open(portal_url + '/' + second_folder + '/createObject?type_name=Folder')
  >>> browser.getControl('Title').value = third_level_one
  >>> browser.getControl('Save').click()
  
    >>> browser.open(portal_url + '/' + second_folder + '/createObject?type_name=Folder')
  >>> browser.getControl('Title').value = third_level_two
  >>> browser.getControl('Save').click()

Ok the content is there now lets go to the first second level folder and make sure that the
viewlet is there and shows the two third level folders but not second level stuff.

  >>> browser.open(portal_url + '/' + second_folder)
  >>> ('subnav-%s' % second_folder) in browser.contents
  False
  >>> ('subnav-%s' % third_level_one) in browser.contents
  True
  >>> ('subnav-%s' % third_level_two) in browser.contents
  True
  
That is great, now lets select one of the third_level folders and make sure that the correct folder
is 'selected'. But first make sure that no third level folders are selected.

  >>> start = browser.contents.find('subnav-%s' % third_level_one)
  >>> end = browser.contents.find('subnav-%s' % third_level_two)
  >>> 'class="plain"' in browser.contents[start: end]
  True
  >>> start = browser.contents.find('subnav-%s' % third_level_two)
  >>> end = start + 30
  >>> 'class="plain"' in browser.contents[start: end]
  True
  >>> browser.open(portal_url + '/' + second_folder + '/' + third_level_one)
  >>> start = browser.contents.find('subnav-%s' % third_level_one)
  >>> end = browser.contents.find('subnav-%s' % third_level_two)
  >>> 'class="selected"' in browser.contents[start: end]
  True
  
  >>> start = browser.contents.find('subnav-%s' % third_level_two)
  >>> end = start + 40
  >>> 'class="plain"' in browser.contents[start:end]
  True
