DocTest for the vdex module
--------------------------------
(c) 2007 by Martin Raspe (hertzhaft@biblhertz.it)

    >>> from vdex import VDEXManager, VDEXError
    >>> from StringIO import StringIO

Parse a test XML string

    >>> file=open('test.xml')
    >>> vm=VDEXManager(file)

    >>> vm.getVocabName()
    'Person'

    >>> vm.getVocabName(lang='it')
    'Persona'

    >>> vm.getVocabIdentifier()
    'it.biblhertz.zuccaro.vocabs.person_person'

    >>> vm.getTermCaptionById('relative',lang='de')
    'ist verwandt mit'

    >>> vm.getTermCaptionById('relative',lang='en')
    'is relative of'

    >>> vm.getTermCaptionById('relative')
    'is relative of'

For lang='*' return a dictionary with all translations keyed by language

    >>> vm.getTermCaptionById('relative',lang='*')
    {'fr': 'est parent avec', 'de': 'ist verwandt mit', 'en': 'is relative of', 'it': u'\xe8 parente di'}

    >>> vm.getTermDescriptionById('relative',lang='*')
    {}

Get it all (for Archetypes)

    >>> vm.getVocabularyDict(lang='de')
    {'identical': ('(unnamed term)', None), 'relative': ('ist verwandt mit', {'child': ('ist Kind von', None)})}

A variant

    >>> file=open('test.xml')

    >>> vm=VDEXManager(file,fallback="True")

Don't return "(unnamed term)" for a missing term, return the caption in the default language instead

    >>> vm.getTermCaptionById('identical')
    'is identical with'

    >>> vm.getTermCaptionById('identical',lang='de')
    'is identical with'

    >>> e = vm.getTermWildcardById('identical', 'ns:zuccaro.biblhertz.it', 'test')
    >>> e[0].text
    'Schas'

Try to parse from a string

    >>> file = open('test.xml')
    >>> xmlstring = file.read()
    >>> vm=VDEXManager(xmlstring)

Try to parse an empty string

    >>> xmlstring = ''
    >>> try:
    ...  vm=VDEXManager(xmlstring)
    ... except VDEXError:
    ...  result = 'error'
    >>> result
    'error'

