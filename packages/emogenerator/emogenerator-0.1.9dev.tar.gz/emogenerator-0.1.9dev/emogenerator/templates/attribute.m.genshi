@dynamic ${property.name};
{% if property.CType %}\
- (${property.CType})${property.name}
{
return([[self ${property.name}Value] ${property.toCTypeConverter}]);
}

- (void)set${C(property.name)}:(${property.CType})${parameterName}
{
[self set${C(property.name)}Value:[NSNumber ${property.toCocoaTypeConverter}:${parameterName}]];
}

@dynamic ${property.name}Value;

- (${property.CocoaType})${property.name}Value
{
[self willAccessValueForKey:@"${property.name}"];
${property.CocoaType}theResult = [self primitiveValueForKey:@"${property.name}"];
[self didAccessValueForKey:@"${property.name}"];
return(theResult);
}

- (void)set${C(property.name)}Value:(${property.CocoaType})${parameterName}
{
[self willChangeValueForKey:@"${property.name}"];
[self setPrimitiveValue:${parameterName} forKey:@"${property.name}"];
[self didChangeValueForKey:@"${property.name}"];
}
{% end %}{# endif property.CType #}\
{% if property.CType == None and property.CocoaType %}\
{% if options['suppressAccessorDefinitions'] == False %}\
- (${property.CocoaType})${property.name}
{
[self willAccessValueForKey:@"${property.name}"];
${property.CocoaType}theResult = [self primitiveValueForKey:@"${property.name}"];
[self didAccessValueForKey:@"${property.name}"];
return(theResult);
}

- (void)set${C(property.name)}:(${property.CocoaType})in${C(property.name)}
{
[self willChangeValueForKey:@"${property.name}"];
[self setPrimitiveValue:${parameterName} forKey:@"${property.name}"];
[self didChangeValueForKey:@"${property.name}"];
}
{% end %){# if options['suppressAccessorDefinitions'] == False #}\
{% end %}{# endif property.CType == None and property.CocoaType #}\
