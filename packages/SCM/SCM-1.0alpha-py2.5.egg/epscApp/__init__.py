#!/usr/bin/env python## \mainpage Elasto-Plastic Self Consistent (EPSC) Modeling## \section intro_sec Introduction# The goal of EPSC modeling is to obtain phase specific constitutive# laws for given crystal systems. This model generates grain# averaged stress and strain data based on Eshelby theory, i.e. 1) macro# stress-strain curve, and 2) hkl specific stress-strain curves.# As the neutron diffraction provides hkl elastic strain for given stress# conditions, those experimental data can be directly compared with EPSC# model results. The "voce" plastic law is implemented at current stage.## \section install_sec Installation## \subsection obtain Obtaining the Code# Download instructions and files will be available in Engineering Diffraction web site after December 15, 2007:# \verbatim# http://www.engdiff.org# \endverbatim## For those of you who want to test the current codes# \verbatim# $ svn co svn://danse.us/engdiffraction/epsc/trunk/epscApp# \endverbatim## \subsection layout Layout of the Directories# The directories are listed according to the class hierarchy.# \verbatim# epscApp-espcComp-epscCore# \endverbatim## "epscApp" is the main package folder.## "epscApp" contains epscGUI files and epscController file.## "epscComp" contains esps library components necessary to# setup model, import experiment data, and run optimization.## "epscCore" contains fortran based epsc binary executable and# basic input templates and output files. This is beyond our# system boundary, which is kind of black box.## \subsection depends External Dependencies# You must first install:# \arg python 2.5 http://www.python.org/# \arg numpy 1.0.3 http://numpy.scipy.org/# \arg scipy 0.6 http://scipy.org/# \arg matplotlib 0.90 http://matplotlib.sourceforge.net/# \arg wxPython 2.8 http://www.wxpython.org## \subsection build Building the code# The standard python package can be built with distutils.## But now, modules are placed according to class hierarchy,# you don't have to do any build procedure at the moment.## In order to run program via GUI, do the follwing:# \verbatim# $ python epscGui.py# \endverbatim## In order to run program via script mode, do the follwing:# \verbatim# $ python epscController.py -model_particle FILE_NAME -model_matrix FILE_NAME# \endverbatim## \subsubsection platform Working Platform# \arg WindowsXP (Cygwin included)# \arg MacOS## \subsubsection class Class Diagram:# \image html epsc_class_diagram.gif#