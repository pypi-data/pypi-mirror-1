<!--
ZMI Tab "Users" for portal_mlangotool.
This view list all users registered in the mlango_tool, for every board registered in the tool.

The loops are as followed:
* #1 Make column (+headers) for every dashboard
* #2 Loop over users (1 per row)
    * #3 Loop over dashboards
	* #4 Loop over settings user for dashboard Settings: (col1: viewlet1, col2: viewlet2, etc)
	* #5 Loop over viewlets per settings-key and print them in format:  key : viewlet.Title, Viewlet.Title


-->

<html>
  <div tal:replace="structure here/manage_page_header"/>
    <body bgcolor="#ffffff" link="#000099" alink="#000099" 
      vlink="#000099">
      <div tal:replace="structure here/manage_tabs"/>
    <table class="main" border="1" width="80%"
	tal:define="allBoards python: here.listAllBoardsWithSettings()">
	
	<!-- #1 Make Table headers, UserId is static , dashboards are dynamic-->
      <thead>
        <tr>
          <th>User id</th>
          <th tal:repeat="board allBoards" tal:content="string: Dashbaord- ${board}">Board</th>
        </tr>
      </thead>
      <tbody>
	    <!-- #2 Loop over all registered users -->
	    <tal:repeat repeat="uid python: here.listUsers()">
	    <!-- Get all settings registered for this user-->
	    <tr tal:define="usersettings python: here.listBoardSettings(uid)">
		
		<td tal:content="uid"/>
		
		<!-- #3 Start looping over all known dashboard (and for which there are columns) -->
		<div tal:omit-tag="" tal:repeat="board allBoards">
		    
		    <!-- Fetch the usersettings for the current board-->
		    <td tal:define="boardsettings python: usersettings.get(board)">
			
			<!-- #4 Loop over the settings for this board and print them -->
			  <span tal:omit-tag="" class="columns" 
			  tal:define="keys python: boardsettings.keys();
				      dummy python: keys.sort()" 			  
			  tal:repeat="key python: keys">
			
			    <!-- Print the key of the current settings -->
			    <span tal:omit-tag="" class="key" tal:content="key"/>:
			    
			   <div tal:omit-tag="" tal:condition="python: boardsettings.get(key) != ''">
				
				<!-- #5 Loop over the viewlet ids for the current setting key and print their title.
				    [:-1] is used since there's an 'ghost' ('') at the end of each list.
				    This ghost is product of the line ending on '--' (always) and split not recognizing the EOF after te last '--'.-->				
				<span tal:omit-tag="" tal:repeat="viewletid python: boardsettings.get(key).split('--')[:-1]">
				    
				    <!-- Check if the viewlet exists then print it's title and a comma if not end of repeat and viewlet is valid -->
				    <span tal:omit-tag="" tal:condition="python: here.getViewlet(viewletid)" tal:content="python: here.getViewlet(viewletid).Title()"/>
				    <span tal:condition="python: here.getViewlet(viewletid)">				    
					<span tal:omit-tag="" tal:content="string: ," tal:condition="not: repeat/viewletid/end"/>
				    </span>
				</span>
			    </div>
			    <br>
			</span>
		    </td>
		</div>
     	    </tr>
	    </tal:repeat>
	  </tbody>
    </table>
      
    </body>
  </html>
