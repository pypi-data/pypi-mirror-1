# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.41
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _libgearman.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_libgearman', [dirname(__file__)])
        except ImportError:
            import _libgearman
            return _libgearman
        if fp is not None:
            try:
                _mod = imp.load_module('_libgearman', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _libgearman = swig_import_helper()
    del swig_import_helper
else:
    import _libgearman
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


GEARMAN_DEFAULT_TCP_HOST = _libgearman.GEARMAN_DEFAULT_TCP_HOST
GEARMAN_DEFAULT_TCP_PORT = _libgearman.GEARMAN_DEFAULT_TCP_PORT
GEARMAN_DEFAULT_SOCKET_TIMEOUT = _libgearman.GEARMAN_DEFAULT_SOCKET_TIMEOUT
GEARMAN_DEFAULT_SOCKET_SEND_SIZE = _libgearman.GEARMAN_DEFAULT_SOCKET_SEND_SIZE
GEARMAN_DEFAULT_SOCKET_RECV_SIZE = _libgearman.GEARMAN_DEFAULT_SOCKET_RECV_SIZE
GEARMAN_DEFAULT_BACKLOG = _libgearman.GEARMAN_DEFAULT_BACKLOG
GEARMAN_DEFAULT_MAX_QUEUE_SIZE = _libgearman.GEARMAN_DEFAULT_MAX_QUEUE_SIZE
GEARMAN_MAX_ERROR_SIZE = _libgearman.GEARMAN_MAX_ERROR_SIZE
GEARMAN_PACKET_HEADER_SIZE = _libgearman.GEARMAN_PACKET_HEADER_SIZE
GEARMAN_JOB_HANDLE_SIZE = _libgearman.GEARMAN_JOB_HANDLE_SIZE
GEARMAN_OPTION_SIZE = _libgearman.GEARMAN_OPTION_SIZE
GEARMAN_UNIQUE_SIZE = _libgearman.GEARMAN_UNIQUE_SIZE
GEARMAN_MAX_COMMAND_ARGS = _libgearman.GEARMAN_MAX_COMMAND_ARGS
GEARMAN_ARGS_BUFFER_SIZE = _libgearman.GEARMAN_ARGS_BUFFER_SIZE
GEARMAN_SEND_BUFFER_SIZE = _libgearman.GEARMAN_SEND_BUFFER_SIZE
GEARMAN_RECV_BUFFER_SIZE = _libgearman.GEARMAN_RECV_BUFFER_SIZE
GEARMAN_SERVER_CON_ID_SIZE = _libgearman.GEARMAN_SERVER_CON_ID_SIZE
GEARMAN_JOB_HASH_SIZE = _libgearman.GEARMAN_JOB_HASH_SIZE
GEARMAN_MAX_FREE_SERVER_CON = _libgearman.GEARMAN_MAX_FREE_SERVER_CON
GEARMAN_MAX_FREE_SERVER_PACKET = _libgearman.GEARMAN_MAX_FREE_SERVER_PACKET
GEARMAN_MAX_FREE_SERVER_JOB = _libgearman.GEARMAN_MAX_FREE_SERVER_JOB
GEARMAN_MAX_FREE_SERVER_CLIENT = _libgearman.GEARMAN_MAX_FREE_SERVER_CLIENT
GEARMAN_MAX_FREE_SERVER_WORKER = _libgearman.GEARMAN_MAX_FREE_SERVER_WORKER
GEARMAN_TEXT_RESPONSE_SIZE = _libgearman.GEARMAN_TEXT_RESPONSE_SIZE
GEARMAN_WORKER_WAIT_TIMEOUT = _libgearman.GEARMAN_WORKER_WAIT_TIMEOUT
GEARMAN_PIPE_BUFFER_SIZE = _libgearman.GEARMAN_PIPE_BUFFER_SIZE
GEARMAN_CONF_MAX_OPTION_SHORT = _libgearman.GEARMAN_CONF_MAX_OPTION_SHORT
GEARMAN_CONF_DISPLAY_WIDTH = _libgearman.GEARMAN_CONF_DISPLAY_WIDTH
GEARMAN_SUCCESS = _libgearman.GEARMAN_SUCCESS
GEARMAN_IO_WAIT = _libgearman.GEARMAN_IO_WAIT
GEARMAN_SHUTDOWN = _libgearman.GEARMAN_SHUTDOWN
GEARMAN_SHUTDOWN_GRACEFUL = _libgearman.GEARMAN_SHUTDOWN_GRACEFUL
GEARMAN_ERRNO = _libgearman.GEARMAN_ERRNO
GEARMAN_EVENT = _libgearman.GEARMAN_EVENT
GEARMAN_TOO_MANY_ARGS = _libgearman.GEARMAN_TOO_MANY_ARGS
GEARMAN_NO_ACTIVE_FDS = _libgearman.GEARMAN_NO_ACTIVE_FDS
GEARMAN_INVALID_MAGIC = _libgearman.GEARMAN_INVALID_MAGIC
GEARMAN_INVALID_COMMAND = _libgearman.GEARMAN_INVALID_COMMAND
GEARMAN_INVALID_PACKET = _libgearman.GEARMAN_INVALID_PACKET
GEARMAN_UNEXPECTED_PACKET = _libgearman.GEARMAN_UNEXPECTED_PACKET
GEARMAN_GETADDRINFO = _libgearman.GEARMAN_GETADDRINFO
GEARMAN_NO_SERVERS = _libgearman.GEARMAN_NO_SERVERS
GEARMAN_LOST_CONNECTION = _libgearman.GEARMAN_LOST_CONNECTION
GEARMAN_MEMORY_ALLOCATION_FAILURE = _libgearman.GEARMAN_MEMORY_ALLOCATION_FAILURE
GEARMAN_JOB_EXISTS = _libgearman.GEARMAN_JOB_EXISTS
GEARMAN_JOB_QUEUE_FULL = _libgearman.GEARMAN_JOB_QUEUE_FULL
GEARMAN_SERVER_ERROR = _libgearman.GEARMAN_SERVER_ERROR
GEARMAN_WORK_ERROR = _libgearman.GEARMAN_WORK_ERROR
GEARMAN_WORK_DATA = _libgearman.GEARMAN_WORK_DATA
GEARMAN_WORK_WARNING = _libgearman.GEARMAN_WORK_WARNING
GEARMAN_WORK_STATUS = _libgearman.GEARMAN_WORK_STATUS
GEARMAN_WORK_EXCEPTION = _libgearman.GEARMAN_WORK_EXCEPTION
GEARMAN_WORK_FAIL = _libgearman.GEARMAN_WORK_FAIL
GEARMAN_NOT_CONNECTED = _libgearman.GEARMAN_NOT_CONNECTED
GEARMAN_COULD_NOT_CONNECT = _libgearman.GEARMAN_COULD_NOT_CONNECT
GEARMAN_SEND_IN_PROGRESS = _libgearman.GEARMAN_SEND_IN_PROGRESS
GEARMAN_RECV_IN_PROGRESS = _libgearman.GEARMAN_RECV_IN_PROGRESS
GEARMAN_NOT_FLUSHING = _libgearman.GEARMAN_NOT_FLUSHING
GEARMAN_DATA_TOO_LARGE = _libgearman.GEARMAN_DATA_TOO_LARGE
GEARMAN_INVALID_FUNCTION_NAME = _libgearman.GEARMAN_INVALID_FUNCTION_NAME
GEARMAN_INVALID_WORKER_FUNCTION = _libgearman.GEARMAN_INVALID_WORKER_FUNCTION
GEARMAN_NO_REGISTERED_FUNCTIONS = _libgearman.GEARMAN_NO_REGISTERED_FUNCTIONS
GEARMAN_NO_JOBS = _libgearman.GEARMAN_NO_JOBS
GEARMAN_ECHO_DATA_CORRUPTION = _libgearman.GEARMAN_ECHO_DATA_CORRUPTION
GEARMAN_NEED_WORKLOAD_FN = _libgearman.GEARMAN_NEED_WORKLOAD_FN
GEARMAN_PAUSE = _libgearman.GEARMAN_PAUSE
GEARMAN_UNKNOWN_STATE = _libgearman.GEARMAN_UNKNOWN_STATE
GEARMAN_PTHREAD = _libgearman.GEARMAN_PTHREAD
GEARMAN_PIPE_EOF = _libgearman.GEARMAN_PIPE_EOF
GEARMAN_QUEUE_ERROR = _libgearman.GEARMAN_QUEUE_ERROR
GEARMAN_FLUSH_DATA = _libgearman.GEARMAN_FLUSH_DATA
GEARMAN_SEND_BUFFER_TOO_SMALL = _libgearman.GEARMAN_SEND_BUFFER_TOO_SMALL
GEARMAN_IGNORE_PACKET = _libgearman.GEARMAN_IGNORE_PACKET
GEARMAN_UNKNOWN_OPTION = _libgearman.GEARMAN_UNKNOWN_OPTION
GEARMAN_MAX_RETURN = _libgearman.GEARMAN_MAX_RETURN
GEARMAN_VERBOSE_FATAL = _libgearman.GEARMAN_VERBOSE_FATAL
GEARMAN_VERBOSE_ERROR = _libgearman.GEARMAN_VERBOSE_ERROR
GEARMAN_VERBOSE_INFO = _libgearman.GEARMAN_VERBOSE_INFO
GEARMAN_VERBOSE_DEBUG = _libgearman.GEARMAN_VERBOSE_DEBUG
GEARMAN_VERBOSE_CRAZY = _libgearman.GEARMAN_VERBOSE_CRAZY
GEARMAN_VERBOSE_MAX = _libgearman.GEARMAN_VERBOSE_MAX
GEARMAN_ALLOCATED = _libgearman.GEARMAN_ALLOCATED
GEARMAN_NON_BLOCKING = _libgearman.GEARMAN_NON_BLOCKING
GEARMAN_DONT_TRACK_PACKETS = _libgearman.GEARMAN_DONT_TRACK_PACKETS
GEARMAN_CON_ALLOCATED = _libgearman.GEARMAN_CON_ALLOCATED
GEARMAN_CON_READY = _libgearman.GEARMAN_CON_READY
GEARMAN_CON_PACKET_IN_USE = _libgearman.GEARMAN_CON_PACKET_IN_USE
GEARMAN_CON_EXTERNAL_FD = _libgearman.GEARMAN_CON_EXTERNAL_FD
GEARMAN_CON_IGNORE_LOST_CONNECTION = _libgearman.GEARMAN_CON_IGNORE_LOST_CONNECTION
GEARMAN_CON_CLOSE_AFTER_FLUSH = _libgearman.GEARMAN_CON_CLOSE_AFTER_FLUSH
GEARMAN_CON_STATE_ADDRINFO = _libgearman.GEARMAN_CON_STATE_ADDRINFO
GEARMAN_CON_STATE_CONNECT = _libgearman.GEARMAN_CON_STATE_CONNECT
GEARMAN_CON_STATE_CONNECTING = _libgearman.GEARMAN_CON_STATE_CONNECTING
GEARMAN_CON_STATE_CONNECTED = _libgearman.GEARMAN_CON_STATE_CONNECTED
GEARMAN_CON_SEND_STATE_NONE = _libgearman.GEARMAN_CON_SEND_STATE_NONE
GEARMAN_CON_SEND_STATE_PRE_FLUSH = _libgearman.GEARMAN_CON_SEND_STATE_PRE_FLUSH
GEARMAN_CON_SEND_STATE_FORCE_FLUSH = _libgearman.GEARMAN_CON_SEND_STATE_FORCE_FLUSH
GEARMAN_CON_SEND_STATE_FLUSH = _libgearman.GEARMAN_CON_SEND_STATE_FLUSH
GEARMAN_CON_SEND_STATE_FLUSH_DATA = _libgearman.GEARMAN_CON_SEND_STATE_FLUSH_DATA
GEARMAN_CON_RECV_STATE_NONE = _libgearman.GEARMAN_CON_RECV_STATE_NONE
GEARMAN_CON_RECV_STATE_READ = _libgearman.GEARMAN_CON_RECV_STATE_READ
GEARMAN_CON_RECV_STATE_READ_DATA = _libgearman.GEARMAN_CON_RECV_STATE_READ_DATA
GEARMAN_PACKET_ALLOCATED = _libgearman.GEARMAN_PACKET_ALLOCATED
GEARMAN_PACKET_COMPLETE = _libgearman.GEARMAN_PACKET_COMPLETE
GEARMAN_PACKET_FREE_DATA = _libgearman.GEARMAN_PACKET_FREE_DATA
GEARMAN_MAGIC_TEXT = _libgearman.GEARMAN_MAGIC_TEXT
GEARMAN_MAGIC_REQUEST = _libgearman.GEARMAN_MAGIC_REQUEST
GEARMAN_MAGIC_RESPONSE = _libgearman.GEARMAN_MAGIC_RESPONSE
GEARMAN_COMMAND_TEXT = _libgearman.GEARMAN_COMMAND_TEXT
GEARMAN_COMMAND_CAN_DO = _libgearman.GEARMAN_COMMAND_CAN_DO
GEARMAN_COMMAND_CANT_DO = _libgearman.GEARMAN_COMMAND_CANT_DO
GEARMAN_COMMAND_RESET_ABILITIES = _libgearman.GEARMAN_COMMAND_RESET_ABILITIES
GEARMAN_COMMAND_PRE_SLEEP = _libgearman.GEARMAN_COMMAND_PRE_SLEEP
GEARMAN_COMMAND_UNUSED = _libgearman.GEARMAN_COMMAND_UNUSED
GEARMAN_COMMAND_NOOP = _libgearman.GEARMAN_COMMAND_NOOP
GEARMAN_COMMAND_SUBMIT_JOB = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB
GEARMAN_COMMAND_JOB_CREATED = _libgearman.GEARMAN_COMMAND_JOB_CREATED
GEARMAN_COMMAND_GRAB_JOB = _libgearman.GEARMAN_COMMAND_GRAB_JOB
GEARMAN_COMMAND_NO_JOB = _libgearman.GEARMAN_COMMAND_NO_JOB
GEARMAN_COMMAND_JOB_ASSIGN = _libgearman.GEARMAN_COMMAND_JOB_ASSIGN
GEARMAN_COMMAND_WORK_STATUS = _libgearman.GEARMAN_COMMAND_WORK_STATUS
GEARMAN_COMMAND_WORK_COMPLETE = _libgearman.GEARMAN_COMMAND_WORK_COMPLETE
GEARMAN_COMMAND_WORK_FAIL = _libgearman.GEARMAN_COMMAND_WORK_FAIL
GEARMAN_COMMAND_GET_STATUS = _libgearman.GEARMAN_COMMAND_GET_STATUS
GEARMAN_COMMAND_ECHO_REQ = _libgearman.GEARMAN_COMMAND_ECHO_REQ
GEARMAN_COMMAND_ECHO_RES = _libgearman.GEARMAN_COMMAND_ECHO_RES
GEARMAN_COMMAND_SUBMIT_JOB_BG = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB_BG
GEARMAN_COMMAND_ERROR = _libgearman.GEARMAN_COMMAND_ERROR
GEARMAN_COMMAND_STATUS_RES = _libgearman.GEARMAN_COMMAND_STATUS_RES
GEARMAN_COMMAND_SUBMIT_JOB_HIGH = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB_HIGH
GEARMAN_COMMAND_SET_CLIENT_ID = _libgearman.GEARMAN_COMMAND_SET_CLIENT_ID
GEARMAN_COMMAND_CAN_DO_TIMEOUT = _libgearman.GEARMAN_COMMAND_CAN_DO_TIMEOUT
GEARMAN_COMMAND_ALL_YOURS = _libgearman.GEARMAN_COMMAND_ALL_YOURS
GEARMAN_COMMAND_WORK_EXCEPTION = _libgearman.GEARMAN_COMMAND_WORK_EXCEPTION
GEARMAN_COMMAND_OPTION_REQ = _libgearman.GEARMAN_COMMAND_OPTION_REQ
GEARMAN_COMMAND_OPTION_RES = _libgearman.GEARMAN_COMMAND_OPTION_RES
GEARMAN_COMMAND_WORK_DATA = _libgearman.GEARMAN_COMMAND_WORK_DATA
GEARMAN_COMMAND_WORK_WARNING = _libgearman.GEARMAN_COMMAND_WORK_WARNING
GEARMAN_COMMAND_GRAB_JOB_UNIQ = _libgearman.GEARMAN_COMMAND_GRAB_JOB_UNIQ
GEARMAN_COMMAND_JOB_ASSIGN_UNIQ = _libgearman.GEARMAN_COMMAND_JOB_ASSIGN_UNIQ
GEARMAN_COMMAND_SUBMIT_JOB_HIGH_BG = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB_HIGH_BG
GEARMAN_COMMAND_SUBMIT_JOB_LOW = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB_LOW
GEARMAN_COMMAND_SUBMIT_JOB_LOW_BG = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB_LOW_BG
GEARMAN_COMMAND_SUBMIT_JOB_SCHED = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB_SCHED
GEARMAN_COMMAND_SUBMIT_JOB_EPOCH = _libgearman.GEARMAN_COMMAND_SUBMIT_JOB_EPOCH
GEARMAN_COMMAND_MAX = _libgearman.GEARMAN_COMMAND_MAX
GEARMAN_TASK_ALLOCATED = _libgearman.GEARMAN_TASK_ALLOCATED
GEARMAN_TASK_SEND_IN_USE = _libgearman.GEARMAN_TASK_SEND_IN_USE
GEARMAN_TASK_STATE_NEW = _libgearman.GEARMAN_TASK_STATE_NEW
GEARMAN_TASK_STATE_SUBMIT = _libgearman.GEARMAN_TASK_STATE_SUBMIT
GEARMAN_TASK_STATE_WORKLOAD = _libgearman.GEARMAN_TASK_STATE_WORKLOAD
GEARMAN_TASK_STATE_WORK = _libgearman.GEARMAN_TASK_STATE_WORK
GEARMAN_TASK_STATE_CREATED = _libgearman.GEARMAN_TASK_STATE_CREATED
GEARMAN_TASK_STATE_DATA = _libgearman.GEARMAN_TASK_STATE_DATA
GEARMAN_TASK_STATE_WARNING = _libgearman.GEARMAN_TASK_STATE_WARNING
GEARMAN_TASK_STATE_STATUS = _libgearman.GEARMAN_TASK_STATE_STATUS
GEARMAN_TASK_STATE_COMPLETE = _libgearman.GEARMAN_TASK_STATE_COMPLETE
GEARMAN_TASK_STATE_EXCEPTION = _libgearman.GEARMAN_TASK_STATE_EXCEPTION
GEARMAN_TASK_STATE_FAIL = _libgearman.GEARMAN_TASK_STATE_FAIL
GEARMAN_TASK_STATE_FINISHED = _libgearman.GEARMAN_TASK_STATE_FINISHED
GEARMAN_JOB_ALLOCATED = _libgearman.GEARMAN_JOB_ALLOCATED
GEARMAN_JOB_ASSIGNED_IN_USE = _libgearman.GEARMAN_JOB_ASSIGNED_IN_USE
GEARMAN_JOB_WORK_IN_USE = _libgearman.GEARMAN_JOB_WORK_IN_USE
GEARMAN_JOB_FINISHED = _libgearman.GEARMAN_JOB_FINISHED
GEARMAN_JOB_PRIORITY_HIGH = _libgearman.GEARMAN_JOB_PRIORITY_HIGH
GEARMAN_JOB_PRIORITY_NORMAL = _libgearman.GEARMAN_JOB_PRIORITY_NORMAL
GEARMAN_JOB_PRIORITY_LOW = _libgearman.GEARMAN_JOB_PRIORITY_LOW
GEARMAN_JOB_PRIORITY_MAX = _libgearman.GEARMAN_JOB_PRIORITY_MAX
GEARMAN_CLIENT_ALLOCATED = _libgearman.GEARMAN_CLIENT_ALLOCATED
GEARMAN_CLIENT_NON_BLOCKING = _libgearman.GEARMAN_CLIENT_NON_BLOCKING
GEARMAN_CLIENT_TASK_IN_USE = _libgearman.GEARMAN_CLIENT_TASK_IN_USE
GEARMAN_CLIENT_UNBUFFERED_RESULT = _libgearman.GEARMAN_CLIENT_UNBUFFERED_RESULT
GEARMAN_CLIENT_NO_NEW = _libgearman.GEARMAN_CLIENT_NO_NEW
GEARMAN_CLIENT_FREE_TASKS = _libgearman.GEARMAN_CLIENT_FREE_TASKS
GEARMAN_CLIENT_STATE_IDLE = _libgearman.GEARMAN_CLIENT_STATE_IDLE
GEARMAN_CLIENT_STATE_NEW = _libgearman.GEARMAN_CLIENT_STATE_NEW
GEARMAN_CLIENT_STATE_SUBMIT = _libgearman.GEARMAN_CLIENT_STATE_SUBMIT
GEARMAN_CLIENT_STATE_PACKET = _libgearman.GEARMAN_CLIENT_STATE_PACKET
GEARMAN_WORKER_ALLOCATED = _libgearman.GEARMAN_WORKER_ALLOCATED
GEARMAN_WORKER_NON_BLOCKING = _libgearman.GEARMAN_WORKER_NON_BLOCKING
GEARMAN_WORKER_PACKET_INIT = _libgearman.GEARMAN_WORKER_PACKET_INIT
GEARMAN_WORKER_GRAB_JOB_IN_USE = _libgearman.GEARMAN_WORKER_GRAB_JOB_IN_USE
GEARMAN_WORKER_PRE_SLEEP_IN_USE = _libgearman.GEARMAN_WORKER_PRE_SLEEP_IN_USE
GEARMAN_WORKER_WORK_JOB_IN_USE = _libgearman.GEARMAN_WORKER_WORK_JOB_IN_USE
GEARMAN_WORKER_CHANGE = _libgearman.GEARMAN_WORKER_CHANGE
GEARMAN_WORKER_GRAB_UNIQ = _libgearman.GEARMAN_WORKER_GRAB_UNIQ
GEARMAN_WORKER_STATE_START = _libgearman.GEARMAN_WORKER_STATE_START
GEARMAN_WORKER_STATE_FUNCTION_SEND = _libgearman.GEARMAN_WORKER_STATE_FUNCTION_SEND
GEARMAN_WORKER_STATE_CONNECT = _libgearman.GEARMAN_WORKER_STATE_CONNECT
GEARMAN_WORKER_STATE_GRAB_JOB_SEND = _libgearman.GEARMAN_WORKER_STATE_GRAB_JOB_SEND
GEARMAN_WORKER_STATE_GRAB_JOB_RECV = _libgearman.GEARMAN_WORKER_STATE_GRAB_JOB_RECV
GEARMAN_WORKER_STATE_PRE_SLEEP = _libgearman.GEARMAN_WORKER_STATE_PRE_SLEEP
GEARMAN_WORKER_FUNCTION_PACKET_IN_USE = _libgearman.GEARMAN_WORKER_FUNCTION_PACKET_IN_USE
GEARMAN_WORKER_FUNCTION_CHANGE = _libgearman.GEARMAN_WORKER_FUNCTION_CHANGE
GEARMAN_WORKER_FUNCTION_REMOVE = _libgearman.GEARMAN_WORKER_FUNCTION_REMOVE
GEARMAN_WORKER_WORK_STATE_GRAB_JOB = _libgearman.GEARMAN_WORKER_WORK_STATE_GRAB_JOB
GEARMAN_WORKER_WORK_STATE_FUNCTION = _libgearman.GEARMAN_WORKER_WORK_STATE_FUNCTION
GEARMAN_WORKER_WORK_STATE_COMPLETE = _libgearman.GEARMAN_WORKER_WORK_STATE_COMPLETE
GEARMAN_WORKER_WORK_STATE_FAIL = _libgearman.GEARMAN_WORKER_WORK_STATE_FAIL
GEARMAN_SERVER_ALLOCATED = _libgearman.GEARMAN_SERVER_ALLOCATED
GEARMAN_SERVER_PROC_THREAD = _libgearman.GEARMAN_SERVER_PROC_THREAD
GEARMAN_SERVER_QUEUE_REPLAY = _libgearman.GEARMAN_SERVER_QUEUE_REPLAY
GEARMAN_SERVER_THREAD_ALLOCATED = _libgearman.GEARMAN_SERVER_THREAD_ALLOCATED
GEARMAN_SERVER_CON_SLEEPING = _libgearman.GEARMAN_SERVER_CON_SLEEPING
GEARMAN_SERVER_CON_EXCEPTIONS = _libgearman.GEARMAN_SERVER_CON_EXCEPTIONS
GEARMAN_SERVER_CON_DEAD = _libgearman.GEARMAN_SERVER_CON_DEAD
GEARMAN_SERVER_FUNCTION_ALLOCATED = _libgearman.GEARMAN_SERVER_FUNCTION_ALLOCATED
GEARMAN_SERVER_CLIENT_ALLOCATED = _libgearman.GEARMAN_SERVER_CLIENT_ALLOCATED
GEARMAN_SERVER_WORKER_ALLOCATED = _libgearman.GEARMAN_SERVER_WORKER_ALLOCATED
GEARMAN_SERVER_JOB_ALLOCATED = _libgearman.GEARMAN_SERVER_JOB_ALLOCATED
GEARMAN_SERVER_JOB_QUEUED = _libgearman.GEARMAN_SERVER_JOB_QUEUED
GEARMAN_SERVER_JOB_IGNORE = _libgearman.GEARMAN_SERVER_JOB_IGNORE
GEARMAND_LISTEN_EVENT = _libgearman.GEARMAND_LISTEN_EVENT
GEARMAND_WAKEUP_EVENT = _libgearman.GEARMAND_WAKEUP_EVENT
GEARMAND_WAKEUP_PAUSE = _libgearman.GEARMAND_WAKEUP_PAUSE
GEARMAND_WAKEUP_SHUTDOWN = _libgearman.GEARMAND_WAKEUP_SHUTDOWN
GEARMAND_WAKEUP_SHUTDOWN_GRACEFUL = _libgearman.GEARMAND_WAKEUP_SHUTDOWN_GRACEFUL
GEARMAND_WAKEUP_CON = _libgearman.GEARMAND_WAKEUP_CON
GEARMAND_WAKEUP_RUN = _libgearman.GEARMAND_WAKEUP_RUN
GEARMAND_THREAD_WAKEUP_EVENT = _libgearman.GEARMAND_THREAD_WAKEUP_EVENT
GEARMAND_THREAD_LOCK = _libgearman.GEARMAND_THREAD_LOCK
GEARMAN_CONF_ALLOCATED = _libgearman.GEARMAN_CONF_ALLOCATED
GEARMAN_CONF_MODULE_ALLOCATED = _libgearman.GEARMAN_CONF_MODULE_ALLOCATED

def version():
  return _libgearman.version()
version = _libgearman.version

def bugreport():
  return _libgearman.bugreport()
bugreport = _libgearman.bugreport
class Gearman(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _libgearman.Gearman_swiginit(self,_libgearman.new_Gearman())
    __swig_destroy__ = _libgearman.delete_Gearman
Gearman.copy = new_instancemethod(_libgearman.Gearman_copy,None,Gearman)
Gearman.error = new_instancemethod(_libgearman.Gearman_error,None,Gearman)
Gearman.errno = new_instancemethod(_libgearman.Gearman_errno,None,Gearman)
Gearman.setOptions = new_instancemethod(_libgearman.Gearman_setOptions,None,Gearman)
Gearman_swigregister = _libgearman.Gearman_swigregister
Gearman_swigregister(Gearman)

class Client(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _libgearman.Client_swiginit(self,_libgearman.new_Client())
    __swig_destroy__ = _libgearman.delete_Client
Client.copy = new_instancemethod(_libgearman.Client_copy,None,Client)
Client.error = new_instancemethod(_libgearman.Client_error,None,Client)
Client.errno = new_instancemethod(_libgearman.Client_errno,None,Client)
Client.setOptions = new_instancemethod(_libgearman.Client_setOptions,None,Client)
Client.addServer = new_instancemethod(_libgearman.Client_addServer,None,Client)
Client.addServers = new_instancemethod(_libgearman.Client_addServers,None,Client)
Client.do = new_instancemethod(_libgearman.Client_do,None,Client)
Client.doHigh = new_instancemethod(_libgearman.Client_doHigh,None,Client)
Client.doLow = new_instancemethod(_libgearman.Client_doLow,None,Client)
Client.jobHandle = new_instancemethod(_libgearman.Client_jobHandle,None,Client)
Client.status = new_instancemethod(_libgearman.Client_status,None,Client)
Client_swigregister = _libgearman.Client_swigregister
Client_swigregister(Client)

class Worker(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _libgearman.Worker_swiginit(self,_libgearman.new_Worker())
    __swig_destroy__ = _libgearman.delete_Worker
Worker.copy = new_instancemethod(_libgearman.Worker_copy,None,Worker)
Worker.error = new_instancemethod(_libgearman.Worker_error,None,Worker)
Worker.errno = new_instancemethod(_libgearman.Worker_errno,None,Worker)
Worker.setOptions = new_instancemethod(_libgearman.Worker_setOptions,None,Worker)
Worker.addServer = new_instancemethod(_libgearman.Worker_addServer,None,Worker)
Worker.addServers = new_instancemethod(_libgearman.Worker_addServers,None,Worker)
Worker.registerFunction = new_instancemethod(_libgearman.Worker_registerFunction,None,Worker)
Worker.unregister = new_instancemethod(_libgearman.Worker_unregister,None,Worker)
Worker.unregisterAll = new_instancemethod(_libgearman.Worker_unregisterAll,None,Worker)
Worker.grabJob = new_instancemethod(_libgearman.Worker_grabJob,None,Worker)
Worker.addFunction = new_instancemethod(_libgearman.Worker_addFunction,None,Worker)
Worker.work = new_instancemethod(_libgearman.Worker_work,None,Worker)
Worker_swigregister = _libgearman.Worker_swigregister
Worker_swigregister(Worker)

class Job(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        _libgearman.Job_swiginit(self,_libgearman.new_Job())
    __swig_destroy__ = _libgearman.delete_Job
Job.status = new_instancemethod(_libgearman.Job_status,None,Job)
Job.fail = new_instancemethod(_libgearman.Job_fail,None,Job)
Job.getHandle = new_instancemethod(_libgearman.Job_getHandle,None,Job)
Job.functionName = new_instancemethod(_libgearman.Job_functionName,None,Job)
Job.getUniqueID = new_instancemethod(_libgearman.Job_getUniqueID,None,Job)
Job.getWorkload = new_instancemethod(_libgearman.Job_getWorkload,None,Job)
Job_swigregister = _libgearman.Job_swigregister
Job_swigregister(Job)

Worker.register = new_instancemethod(_libgearman.Worker_registerFunction,None,Worker)




