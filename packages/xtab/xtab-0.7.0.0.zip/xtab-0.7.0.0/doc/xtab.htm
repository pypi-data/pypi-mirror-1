<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>xtab -- Crosstabulate Data in a Text File</title>
<style type="text/css">
html, body {
	padding: 0;
	margin: 0;
	font-family: Arial, Helvetica, sans-serif;
	color: black;
	/*background-color: #FFEBCD;*/
	background-color: rgb(242, 236, 209);
}
div#topheader {
	position: absolute;
	top: 0; left: 10%; width: 65%;
	background-color: rgb(228, 215, 152);
	border-bottom: 4px solid #814324;
	border-left: 4px solid #814324;
	border-right: 4px solid #814324;
	height: 6em;
	}
div#title {
	position: relative;
	top: 0.5em; left: 5%; width: 75%;
	padding: 0.5em 3em 0.5em 0em;
	text-align: center;
	font-family: Arial, Helvetica, sans-serif;
	font-size: 1.5em;
	font-weight: bold;
	word-spacing: 0.05em;
	color: #814324;
	background-color: rgb(250, 250, 210);
	border: 1px solid #814324;
	filter: alpha(opacity=80);
	opacity: 0.8;
	}
div#subtitle {
	position: absolute;
	bottom: 0.5em; width: 100%;
	text-align: center;
	font-family: Arial, Helvetica, sans-serif;
	font-size: 0.8em;
	font-weight: bold;
	color: #814324;
	}
#content {
	margin: 5.5em 20px 0 20px;
	}
p {
	text-indent: 2em;
	margin: 0.2em 0 0 0;
	word-spacing: 0.05em;
	max-width: 55em;
	}
p.initial {
	text-indent: 0;
	margin: 0 0;
	}
li {
	max-width: 50em;
	margin-top: 0.3em;
	}
table {
	margin: 1em 40px;
	}
td, th {
	padding: 0 10px;
	text-align: center;
	}
div.code {
	margin: 0.5em 2em;
	padding: 0.25em 0.25em;
	border: 1px dotted rgb(123, 108, 34);
	font-family: "Courier New", Courier, fixed;
	font-size: 0.9em;
	/*background-color: rgb(250, 250, 210);*/
	background-color: rgb(252, 252, 226);
	/*color: rgb(129, 113, 36);*/
	color: rgb(123, 108, 34);
	white-space: pre;
	}
span.code {
	font-family: "Courier New", Courier, fixed;
	}
</style>
</head>
<body>
<div id="topheader"><div id="subtitle">Crosstabulate Data in a Text File</div></div>
<div id="title">xtab.py</div>
<div id="content">
<p class="initial"><span class="code">xtab.py</span> is a Python module and command-line program that 
rearranges data from a normalized format to a crosstabulated format.  It takes data in this form:</p>

<table>
<tr><thead>
<tr><th>Station</th><th>Date</th><th>Value</th></tr></thead>

<tbody><tr><td>WQ-01</td><td>2006-05-23</td><td>4.5</td></tr>
<tr><td>WQ-02</td><td>2006-05-23</td><td>3.7</td></tr>
<tr><td>WQ-03</td><td>2006-05-23</td><td>6.8</td></tr>
<tr><td>WQ-01</td><td>2006-06-15</td><td>9.7</td></tr>
<tr><td>WQ-02</td><td>2006-05-15</td><td>5.1</td></tr>

<tr><td>WQ-03</td><td>2006-06-15</td><td>7.2</td></tr>
<tr><td>WQ-01</td><td>2006-07-19</td><td>10</td></tr>
<tr><td>WQ-02</td><td>2006-07-19</td><td>6.1</td></tr>
<tr><td>WQ-03</td><td>2006-07-19</td><td>8.8</td></tr></tbody>
</table>

<p class="initial">and rearranges it into this form:
<table>
<thead><tr><th>Station</th><th>2006-05-23</th><th>2006-06-15</th><th>2006-07-19</th></tr></thead>
<tbody>
<tr><td>WQ-01</td><td>4.5</td><td>3.7</td><td>6.8</td></tr>
<tr><td>WQ-02</td><td>9.7</td><td>5.1</td><td>7.2</td></tr>

<tr><td>WQ-03</td><td>10</td><td>6.1</td><td>8.8</td></tr>
</tbody>
</table>

<p class="initial">Input and output are both text (CSV) files.</p>

<h2>Capabilities</h2>

<p class="initial">You can use the <span class="code">xtab</span>
program to:</p>

<ul><li>Rearrange data exported from a database to better suit its subsequent
usage in statistical, modeling, graphics, or other software, or for easier browsing.</li>

<li>Convert a single file of data to a SQLite database.</li>

<li>Check for multiple rows of data in a text file with the same key values.</li>
</ul>

<h2>Required and Optional Arguments</h2>
<h3>Required Arguments</h3>
<div class="code">
   -i &lt;filename&gt;
      The name of the input file from which to read data.
      This must be a text file, with data in a normalized format.
      The first line of the file must contain column names.
   -o &lt;filename&gt;
      The name of the output file to create.
      The output file will be created as a .csv file.
      Required argument.
   -r &lt;column_name1&gt; [column_name2 [...]]
      One or more column names to use as row headers (space delimited).
      Unique values of these columns will appear at the beginning of every
      output line.
   -c &lt;column_name1&gt; [column_name2 [...]]
      One or more column names to use as column headers in the output (space
      delimited).  A crosstab column (or columns) will be created for every
      unique combination of values of these fields in the input.
   -v &lt;column_name1&gt; [column_name2 [...]]
      One or more column names with values to be used to fill the cells
      of the cross-table.  If n columns names are specified, then there will
      be n columns in the output table for each of the column headers
      corresponding to values of the -c argument.  The column names specified
      with the -v argument will be appended to the output column headers
      created from values of the -c argument.  There should be only one value
      of the -v column(s) for each combination of the -r and -c columns;
      if there is more than one, a warning will be printed and only the first
      value will appear in the output.  (That is, values are not combined in
      any way when there are multiple values for each output cell.)
</div>
<h3>Optional Arguments</h3>
<div class="code">
   -d
      Prints output column headers in two rows.  The first row contains values
      of the columns specified by the -c argument, and the second row contains
      the column names specified by the -v argument. If this is not specified,
      output column headers are printed in one row, with elements joined by
      underscores to facilitate parsing by other programs.
   -f
      Use a temporary (sqlite) file instead of memory for intermediate
      storage.
   -k
      Keep (i.e., do not delete) the sqlite file.  Only useful with the
      "-f" option.  Unless the "-t" option is also used, the table name will
      be "src".
   -t &lt;tablename&gt;
      Name to use for the table in the intermediate sqlite database.  Only
      useful with the "-f" and "-k" options.
   -e [filename]
      Log all error messages, to a file if the filename is specified or to the
      console if the filename is not specified.
   -q &lt;filename&gt;
      Log the sequence of SQL commands used to extract data from the input
      file to write the output file, including the result of each command.
   -h
      Print this help and exit.
</div>

<h2>Notes</h2>

<ul><li>The <span class="code">xtab</span> program does not carry out any summarization or
calculation on the data values, and therefore there should be no more than one data value
to be placed in each cell of the output table.  More than one value per cell is regarded
as an error, and in such cases only one of the multiple values will be put in the cell.</li>

<li>Multiple data values can be crosstabbed, as specified by multiple column names supplied
with the <span class="code">-c</span> argument.</li>

<li>Column names should be specified in the same case as they appear in the input file.</li>

<li>The <span class="code">-f</span> option creates a temporary file in the same directory as the output file.  This file
has the same name as the input file, but an extension of '.sqlite'.</li>

<li>There are no inherent limits to the number of rows or columns in the input or output files.
(So the output may exceed the limits of some other software.)</li>

<li>Missing required arguments will result in an exception rather than an error message, whatever 
the error logging option.  If no error logging option is specified, then if there are multiple 
values to be put in a cell (the most likely data error), a single message will be printed on the 
console.  If an error logging option is specified, then the SQL for all individual cases where
there are multiple values per cell will be logged.  The occurrence of multiple values for a cell
can also be seen in the output from the <span class="code">-q</span> option.</li>

<li>The <span class="code">-d</span> option produces output in a format that is intended to 
facilitate visual examination, rather than automated processing by subsequent software.</li>
</ul>


<h2>Copyright and License</h2>
<p class="initial">Copyright (c) 2008, R.Dreas Nielsen</p>
<p>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
The GNU General Public License is available at 
<a href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</a>.</p>
</ol>
</div>
</body>
</html>
