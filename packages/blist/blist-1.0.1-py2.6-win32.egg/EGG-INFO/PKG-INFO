Metadata-Version: 1.1
Name: blist
Version: 1.0.1
Summary: a list-like type with better asymptotic performance and similar performance on small lists
Home-page: http://stutzbachenterprises.com/blist/
Author: Stutzbach Enterprises, LLC
Author-email: daniel@stutzbachenterprises.com
License: BSD
Description: 
        BList: a list-like type with better performance
        ===============================================
        
        The BList is a type that looks, acts, and quacks like a Python list,
        but has better performance for for modifying large lists.
        
        For small lists (fewer than 128 elements), BLists and the built-in
        list have very similar performance, although BLists are memory
        inefficient if you need to create a larger number of small lists.
        
        Here are some of the use cases where the BLists is dramatically faster
        than the built-in list:
        
        1. Insertion into or removal from a large list (O(log n) vs. O(n))
        2. Taking large slices of large lists (O(log n) vs O(n))
        3. Making shallow copies of large lists (O(1) vs. O(n))
        4. Changing large slices of large lists (O(log n + log k) vs. O(n + k))
        5. Multiplying a list to make a large, sparse list (O(log k) vs. O(kn))
        
        You've probably noticed that we keep referring to "large lists".
        
        So you can see the performance of the BList in more detail, several
        performance graphs available at the following link: http://stutzbachenterprises.com/blist/
        
        Example usage:
        
        >>> from blist import *
        >>> x = blist([0])             # x is a BList with one element
        >>> x *= 2**29                 # x is a BList with > 500 million elements
        >>> x.append(5)                # append to x
        >>> y = x[4:-234234]           # Take a 500 million element slice from x
        >>> del x[3:1024]              # Delete a few thousand elements from x
        
        For comparison, on most systems the built-in list just raises
        MemoryError and calls it a day.
        
Keywords: blist list b+tree btree fast copy-on-write sparse array
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: C
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Provides: blist
