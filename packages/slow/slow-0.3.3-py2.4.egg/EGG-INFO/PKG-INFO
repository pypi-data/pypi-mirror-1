Metadata-Version: 1.0
Name: slow
Version: 0.3.3
Summary: SLOW - The SLOSL Overlay Workbench
Home-page: http://developer.berlios.de/projects/slow/
Author: Stefan Behnel
Author-email: scoder@users.berlios.de
License: UNKNOWN
Description: SLOW - The SLOSL Overlay Workbench
        
        What is SLOW?
        -------------
        
        SLOW is a visual, integrated, rapid development environment for Internet
        overlay networks and Peer-to-Peer systems.  It is strongly focused on the
        design of local topology decisions based on SLOSL and concepts from the
        database area.  SLOW allows you to visually design and specify topologies and
        protocols in a platform and language neutral way.  You can test them against
        different scenarios from within the workbench before you bet your money on
        their implementation.  At any time, you can save the specification in OverML
        and generate a source code implementation from it.
        
        What are SLOSL and OverML?
        --------------------------
        
        SLOW is based on the domain specific languages OverML_ and SLOSL_.  The
        Overlay Modelling Language OverML is an XML language for the specification of
        overlay protocols, topologies and node data.  The SQL-Like Overlay
        Specification Language SLOSL is the topology specification language of OverML.
        It is based on SQL.  There is also some `additional information`_ on the web.
        
        .. _`additional information`: http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/
        
        .. _OverML: http://www.dvs1.informatik.tu-darmstadt.de/publications/pdf/behnel2005overlaylanguages.pdf
        .. _SLOSL:  http://www.dvs1.informatik.tu-darmstadt.de/publications/pdf/behnel2005overlayspecification.pdf
        
        Current status of SLOW:
        -----------------------
        
        The workbench is currently in alpha state.  Some screenshots_ from the
        running system are on the Berlios developer site.
        
        .. _screenshots: http://developer.berlios.de/screenshots/?group_id=5525
        
        The complete workflow for design and testing is implemented, a number of
        overlay topologies were implemented (see the file example.xod in the
        source distribution).  There is a preliminary Python execution environment
        for the specified overlays.  Source code generation is unfinished.  It
        obviously requires a generator for the target language.  Current focus is
        on the languages Java and Python.
        
        Requirements:
        -------------
        
        The workbench is written in Python 2.4.  It requires PyQt3_, lxml_ and
        MathDOM_.  Note that PyQt cannot be automatically installed by easy_install_.
        If it is not yet available on your platform, you must install it manually
        before installing slow.
        
        .. _Python:  http://www.python.org/
        .. _PyQt3:   http://www.riverbankcomputing.co.uk/pyqt/
        .. _lxml:    http://codespeak.net/lxml/
        .. _MathDOM: http://mathdom.sourceforge.net/
        
        SLOW 0.3.2 and later require lxml 0.9 and MathDOM 0.7. Note that lxml
        requires libxml2_ and libxslt_ to be installed.
        
        .. _libxml2: http://xmlsoft.org/
        .. _libxslt: http://xmlsoft.org/XSLT/
        
        Running Slow:
        -------------
        
        To run it, install the egg distribution with easy_install_. This should
        generate a runnable script for your platform.  On Linux, this is commonly
        /usr/bin/slow or ~/bin/slow or something similar.
        
        .. _easy_install: http://peak.telecommunity.com/DevCenter/EasyInstall
        
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Environment :: X11 Applications :: Qt
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Communications
Classifier: Topic :: Internet
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: System :: Distributed Computing
Classifier: Topic :: System :: Networking
