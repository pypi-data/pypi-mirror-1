<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:doc="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/annotate" xmlns:edsl="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/edsl" xmlns:xsd="http://www.w3.org/2001/XMLSchema-datatypes" xmlns:himdel="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/himdel" xmlns:slosl="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/slosl" xmlns:slowgui="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/slow-gui" xmlns:slow="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/slow" xmlns:nala="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/nala" xmlns:overml="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="identifier_string">
    <data type="Name"/>
  </define>
  <define name="type_string">
    <data type="QName"/>
  </define>
  <define name="identifier_attribute">
    <attribute name="access_name">
      <ref name="identifier_string"/>
    </attribute>
  </define>
  <define name="name_attribute">
    <attribute name="name">
      <ref name="identifier_string"/>
    </attribute>
  </define>
  <define name="type_attribute">
    <attribute name="type_name">
      <ref name="type_string"/>
    </attribute>
  </define>
  <define name="readable_name_attribute">
    <attribute name="readable_name"/>
  </define>
  <define name="anyOtherElement">
    <element>
      <anyName>
        <except>
          <nsName ns="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/slow"/>
          <nsName ns="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/nala"/>
          <nsName ns="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/slosl"/>
          <nsName ns="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/himdel"/>
          <nsName ns="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/edsl"/>
        </except>
      </anyName>
      <zeroOrMore>
        <choice>
          <attribute>
            <anyName/>
          </attribute>
          <text/>
          <ref name="anyOtherElement"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="math_expression">
    <choice>
      <element name="math:math">
        <ref name="math_expression_content"/>
      </element>
      <ref name="math_expression_content"/>
    </choice>
  </define>
  <define name="math_expression_content">
    <choice>
      <ref name="math_apply"/>
      <ref name="math_number"/>
      <ref name="math_constant"/>
    </choice>
  </define>
  <define name="math_interval">
    <choice>
      <element name="math:math">
        <ref name="math_interval_content"/>
      </element>
      <ref name="math_interval_content"/>
    </choice>
  </define>
  <define name="math_interval_content">
    <element name="math:interval">
      <attribute name="closure">
        <choice>
          <value>open</value>
          <value>closed</value>
          <value>open-closed</value>
          <value>closed-open</value>
        </choice>
      </attribute>
      <ref name="math_expression_content"/>
      <ref name="math_expression_content"/>
    </element>
  </define>
  <define name="math_list">
    <choice>
      <element name="math:math">
        <ref name="math_list_content"/>
      </element>
      <ref name="math_list_content"/>
    </choice>
  </define>
  <define name="math_list_content">
    <element name="math:list">
      <zeroOrMore>
        <attribute>
          <anyName/>
        </attribute>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="math_expression_content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="math_apply">
    <element name="math:apply">
      <ref name="anyMathML"/>
      <oneOrMore>
        <ref name="anyMathML"/>
      </oneOrMore>
    </element>
  </define>
  <define name="math_number">
    <element name="math:cn">
      <zeroOrMore>
        <attribute>
          <anyName/>
        </attribute>
      </zeroOrMore>
      <text/>
    </element>
  </define>
  <define name="math_constant">
    <element name="math:ci">
      <zeroOrMore>
        <attribute>
          <anyName/>
        </attribute>
      </zeroOrMore>
      <text/>
    </element>
  </define>
  <define name="anyMathML">
    <choice>
      <element>
        <nsName ns="http://www.w3.org/1998/Math/MathML"/>
        <empty/>
      </element>
      <ref name="math_list"/>
      <ref name="math_interval"/>
      <ref name="math_apply"/>
      <ref name="math_number"/>
      <ref name="math_constant"/>
    </choice>
  </define>
  <start>
    <doc:documentation xml:lang="en">OverML Schema 0.1 - SUBJECT TO CHANGES!</doc:documentation>
    <ref name="slow_file"/>
  </start>
  <define name="slow_file">
    <element name="slow:file">
      <interleave>
        <optional>
          <ref name="nala_types"/>
        </optional>
        <choice>
          <zeroOrMore>
            <ref name="nala_attribute"/>
          </zeroOrMore>
          <ref name="nala_attributes"/>
        </choice>
        <choice>
          <zeroOrMore>
            <ref name="slosl_statement"/>
          </zeroOrMore>
          <ref name="slosl_statements"/>
        </choice>
        <ref name="message_hierarchy"/>
        <ref name="edsl_graph"/>
        <ref name="slow_gui"/>
      </interleave>
    </element>
  </define>
  <define name="slow_gui">
    <element name="slowgui:gui">
      <zeroOrMore>
        <ref name="anyGuiElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="anyGuiElement">
    <element>
      <nsName ns="http://www.dvs1.informatik.tu-darmstadt.de/research/OverML/slow-gui"/>
      <zeroOrMore>
        <choice>
          <attribute>
            <anyName/>
          </attribute>
          <text/>
          <ref name="anyGuiElement"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="nala_types">
    <element name="nala:types">
      <zeroOrMore>
        <ref name="anyOtherElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="nala_attributes">
    <element name="nala:attributes">
      <zeroOrMore>
        <ref name="nala_attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="nala_attribute">
    <zeroOrMore>
      <element name="nala:attribute">
        <attribute name="name">
          <ref name="identifier_string"/>
        </attribute>
        <attribute name="type_name">
          <ref name="type_string"/>
        </attribute>
        <optional>
          <attribute name="selected">
            <data type="boolean"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <element name="nala:static">
              <empty/>
            </element>
          </optional>
          <optional>
            <element name="nala:transferable">
              <empty/>
            </element>
          </optional>
          <optional>
            <element name="nala:identifier">
              <empty/>
            </element>
          </optional>
          <optional>
            <ref name="nala_depends"/>
          </optional>
        </interleave>
      </element>
    </zeroOrMore>
  </define>
  <define name="nala_depends">
    <element name="nala:depends">
      <choice>
        <interleave>
          <attribute name="type">
            <value>math</value>
          </attribute>
          <ref name="nala_attribute_refs"/>
          <ref name="math_expression"/>
        </interleave>
        <interleave>
          <attribute name="type">
            <value>external</value>
          </attribute>
          <ref name="nala_attribute_refs"/>
          <optional>
            <element name="nala:call">
              <ref name="identifier_string"/>
            </element>
          </optional>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="nala_attribute_refs">
    <ref name="nala_attribute_ref"/>
    <zeroOrMore>
      <ref name="nala_attribute_ref"/>
    </zeroOrMore>
  </define>
  <define name="nala_attribute_ref">
    <element name="attribute-ref">
      <attribute name="name">
        <ref name="identifier_string"/>
      </attribute>
    </element>
  </define>
  <define name="message_hierarchy">
    <element name="himdel:message_hierarchy">
      <interleave>
        <zeroOrMore>
          <ref name="toplevel_container"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="header"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="protocol"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="toplevel_container">
    <element name="himdel:container">
      <optional>
        <ref name="readable_name_attribute"/>
      </optional>
      <ref name="type_attribute"/>
      <zeroOrMore>
        <ref name="content_field"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="container">
    <element name="himdel:container">
      <optional>
        <ref name="readable_name_attribute"/>
      </optional>
      <optional>
        <ref name="type_attribute"/>
      </optional>
      <zeroOrMore>
        <ref name="content_field"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="header">
    <element name="himdel:header">
      <optional>
        <ref name="readable_name_attribute"/>
      </optional>
      <optional>
        <ref name="identifier_attribute"/>
      </optional>
      <interleave>
        <zeroOrMore>
          <ref name="header"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="content_field"/>
        </zeroOrMore>
        <oneOrMore>
          <ref name="message"/>
        </oneOrMore>
      </interleave>
    </element>
  </define>
  <define name="message">
    <element name="himdel:message">
      <optional>
        <ref name="readable_name_attribute"/>
      </optional>
      <ref name="type_attribute"/>
      <zeroOrMore>
        <ref name="content_field"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="protocol">
    <element name="himdel:protocol">
      <ref name="content_attributes"/>
      <zeroOrMore>
        <element name="himdel:message-ref">
          <ref name="type_attribute"/>
        </element>
      </zeroOrMore>
    </element>
  </define>
  <define name="content_field">
    <choice>
      <element name="himdel:attribute">
        <ref name="content_attributes"/>
      </element>
      <element name="himdel:content">
        <ref name="content_attributes"/>
      </element>
      <ref name="container"/>
      <element name="himdel:container-ref">
        <ref name="content_attributes"/>
      </element>
      <element name="himdel:viewdata">
        <attribute name="structured">
          <data type="boolean"/>
        </attribute>
        <ref name="content_attributes"/>
      </element>
    </choice>
  </define>
  <define name="content_attributes">
    <ref name="identifier_attribute"/>
    <ref name="type_attribute"/>
    <optional>
      <ref name="readable_name_attribute"/>
    </optional>
  </define>
  <define name="slosl_statements">
    <element name="slosl:statements">
      <zeroOrMore>
        <ref name="slosl_statement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="slosl_statement">
    <element name="slosl:statement">
      <ref name="name_attribute"/>
      <optional>
        <attribute name="selected">
          <data type="boolean"/>
        </attribute>
      </optional>
      <interleave>
        <oneOrMore>
          <ref name="slosl_select"/>
        </oneOrMore>
        <optional>
          <ref name="slosl_ranked"/>
        </optional>
        <oneOrMore>
          <ref name="slosl_parent"/>
        </oneOrMore>
        <zeroOrMore>
          <ref name="slosl_with"/>
        </zeroOrMore>
        <optional>
          <ref name="slosl_where"/>
        </optional>
        <optional>
          <choice>
            <ref name="slosl_inherit_buckets"/>
            <interleave>
              <optional>
                <ref name="slosl_having"/>
              </optional>
              <ref name="slosl_buckets"/>
            </interleave>
          </choice>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="slosl_select">
    <element name="slosl:select">
      <ref name="name_attribute"/>
      <optional>
        <choice>
          <text/>
          <ref name="math_expression"/>
        </choice>
      </optional>
    </element>
  </define>
  <define name="slosl_parent">
    <element name="slosl:parent">
      <ref name="identifier_string"/>
    </element>
  </define>
  <define name="slosl_ranked">
    <element name="slosl:ranked">
      <ref name="f_parameter"/>
      <ref name="f_parameter"/>
      <choice>
        <attribute name="function">
          <choice>
            <value>lowest</value>
            <value>highest</value>
          </choice>
        </attribute>
        <group>
          <attribute name="function">
            <choice>
              <value>closest</value>
              <value>furthest</value>
            </choice>
          </attribute>
          <ref name="f_parameter"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="f_parameter">
    <element name="slosl:parameter">
      <ref name="math_expression"/>
    </element>
  </define>
  <define name="slosl_with">
    <element name="slosl:with">
      <ref name="name_attribute"/>
      <optional>
        <ref name="math_expression"/>
      </optional>
    </element>
  </define>
  <define name="slosl_where">
    <element name="slosl:where">
      <ref name="math_expression"/>
    </element>
  </define>
  <define name="slosl_having">
    <element name="slosl:having">
      <ref name="math_expression"/>
    </element>
  </define>
  <define name="slosl_inherit_buckets">
    <element name="slosl:buckets">
      <attribute name="inherit">
        <value>true</value>
      </attribute>
    </element>
  </define>
  <define name="slosl_buckets">
    <element name="slosl:buckets">
      <optional>
        <attribute name="inherit">
          <value>false</value>
        </attribute>
      </optional>
      <oneOrMore>
        <element name="slosl:foreach">
          <ref name="name_attribute"/>
          <choice>
            <ref name="math_list"/>
            <ref name="math_interval"/>
          </choice>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="edsl_graph">
    <element name="edsl:edsm">
      <interleave>
        <ref name="edsl_states"/>
        <ref name="edsl_transitions"/>
      </interleave>
    </element>
  </define>
  <define name="edsl_states">
    <element name="edsl:states">
      <interleave>
        <zeroOrMore>
          <ref name="edsl_state"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="edsl_subgraph"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="edsl_transitions">
    <element name="edsl:transitions">
      <zeroOrMore>
        <ref name="edsl_transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="edsl_subgraph">
    <element name="edsl:subgraph">
      <interleave>
        <ref name="name_attribute"/>
        <attribute name="id">
          <ref name="edsl_state_id"/>
        </attribute>
        <attribute name="entry_state">
          <ref name="edsl_state_id"/>
        </attribute>
        <attribute name="exit_state">
          <ref name="edsl_state_id"/>
        </attribute>
        <optional>
          <ref name="edsl_readable_name"/>
        </optional>
        <ref name="edsl_states"/>
        <ref name="edsl_transitions"/>
      </interleave>
    </element>
  </define>
  <define name="edsl_state">
    <element name="edsl:state">
      <interleave>
        <ref name="name_attribute"/>
        <attribute name="id">
          <ref name="edsl_state_id"/>
        </attribute>
        <attribute name="inherit_context">
          <data type="boolean"/>
        </attribute>
        <attribute name="long_running">
          <data type="boolean"/>
        </attribute>
        <optional>
          <ref name="edsl_readable_name"/>
        </optional>
        <zeroOrMore>
          <ref name="edsl_code"/>
        </zeroOrMore>
        <zeroOrMore>
          <element name="input">
            <ref name="edsl_queue_name"/>
          </element>
        </zeroOrMore>
        <zeroOrMore>
          <element name="output">
            <ref name="edsl_queue_name"/>
          </element>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="edsl_transition">
    <element name="edsl:transition">
      <interleave>
        <optional>
          <ref name="edsl_readable_name"/>
        </optional>
        <zeroOrMore>
          <ref name="edsl_code"/>
        </zeroOrMore>
        <choice>
          <group>
            <attribute name="type">
              <value>message</value>
            </attribute>
            <ref name="edsl_message_transition"/>
          </group>
          <group>
            <attribute name="type">
              <value>event</value>
            </attribute>
            <ref name="edsl_event_transition"/>
          </group>
          <group>
            <attribute name="type">
              <value>outputchain</value>
            </attribute>
            <ref name="edsl_outputchain_transition"/>
          </group>
          <group>
            <attribute name="type">
              <value>transition</value>
            </attribute>
            <ref name="edsl_immediate_transition"/>
          </group>
          <group>
            <attribute name="type">
              <value>timer</value>
            </attribute>
            <ref name="edsl_timer_transition"/>
          </group>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="edsl_message_transition">
    <interleave>
      <optional>
        <element name="edsl:messagetype">
          <text/>
        </element>
      </optional>
      <ref name="edsl_from_state"/>
      <ref name="edsl_to_queue"/>
    </interleave>
  </define>
  <define name="edsl_event_transition">
    <interleave>
      <optional>
        <element name="edsl:subscription">
          <text/>
        </element>
      </optional>
      <ref name="edsl_from_state"/>
      <ref name="edsl_to_queue"/>
    </interleave>
  </define>
  <define name="edsl_timer_transition">
    <interleave>
      <element name="edsl:timerdelay">
        <data type="integer"/>
      </element>
      <ref name="edsl_from_state"/>
      <ref name="edsl_to_queue"/>
    </interleave>
  </define>
  <define name="edsl_outputchain_transition">
    <interleave>
      <ref name="edsl_from_queue"/>
      <ref name="edsl_to_queue"/>
    </interleave>
  </define>
  <define name="edsl_immediate_transition">
    <interleave>
      <ref name="edsl_from_state"/>
      <ref name="edsl_to_state"/>
    </interleave>
  </define>
  <define name="edsl_code">
    <element name="edsl:code">
      <optional>
        <attribute name="classname">
          <ref name="identifier_string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="methodname">
          <ref name="identifier_string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="language"/>
      </optional>
      <text>
        <doc:documentation xml:lang="en">the text is base64-encoded(zlib-compressed(code))</doc:documentation>
      </text>
    </element>
  </define>
  <define name="edsl_from_state">
    <element name="edsl:from_state">
      <ref name="edsl_state_ref"/>
    </element>
  </define>
  <define name="edsl_to_state">
    <element name="edsl:from_state">
      <ref name="edsl_state_ref"/>
    </element>
  </define>
  <define name="edsl_from_queue">
    <element name="edsl:from_state">
      <ref name="edsl_state_queue_ref"/>
    </element>
  </define>
  <define name="edsl_to_queue">
    <element name="edsl:from_state">
      <ref name="edsl_state_queue_ref"/>
    </element>
  </define>
  <define name="edsl_queue_name">
    <ref name="identifier_string"/>
  </define>
  <define name="edsl_state_ref">
    <attribute name="ref">
      <ref name="edsl_state_id"/>
    </attribute>
  </define>
  <define name="edsl_state_queue_ref">
    <ref name="edsl_state_ref"/>
    <optional>
      <attribute name="queue">
        <ref name="edsl_queue_name"/>
      </attribute>
    </optional>
  </define>
  <define name="edsl_state_id">
    <text/>
  </define>
  <define name="edsl_readable_name">
    <element name="edsl:readablename">
      <text/>
    </element>
  </define>
</grammar>
