[buildout]
develop = . scripts
parts = openoffice plone zope2 productdistros PILwoTK scripts
        zeoserver zeoclient1 zeoclient2
extends = versions.cfg
eggs-directory = eggs
find-links = 
	http://dist.plone.org
	http://download.zope.org/distribution/
	http://effbot.org/downloads
versions = versions
eggs =
	elementtree
        psj.site

[versions]
Products.Relations = 0.8.1
Products.LinguaPlone = 2.2

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}

[zeoserver]
recipe = plone.recipe.zope2zeoserver
zope2-location = ${zope2:location}

# zeopack = 
## The path to the zeopack.py backup script. A wrapper for this will
## be generated in bin/zeopack, which sets up the appropriate
## environment to run this. Defaults to
## "${zope2-location}/utilities/ZODBTools/zeopack.py". Set this option
## to an empty value if you do not want this script to be generated.

# zeo-conf =
## A relative or absolute path to a zeo.conf file. If this is not
## given, a zeo.conf will be generated based on the the options below.

## The following options all affect the generated zope.conf.

zeo-address = 8100
## Give a port for the ZEO server. Defaults to 8100.

# effective-user =
## The name of the effective user for the ZEO process. Defaults to not
## setting an effective user.

# invalidation-queue-size = 100
## The invalidation-queue-size used for the ZEO server. Defaults to
## 100.

# zeo-log =
## The filename of the ZEO log file. Defaults to var/log/${partname}.log

# zeo-log-custom = 
## A custom section for the eventlog, to be able to use another event
## logger than logfile. zeo-log is still used to set the logfile value
## in the runner section.

# storage-number = 1
## The number used to identify a storage.

# file-storage = 
## The filename where the ZODB data file will be stored. Defaults to
## var/filestorage/Data.fs.

# blob-storage = 
## The folder where the ZODB blob data files will be stored.

# socket-name = 
## The filename where ZEO will write its socket file. Defaults to
## var/zeo.zdsock.

# authentication-database = 
## The filename for a authentication database. Only accounts listed in
## this database will be allowed to access the ZEO server.

# authentication-realm = 'ZEO'
## The authentication realm. Defaults to 'ZEO'

# zeo-conf-additional
## Give additional lines to zeo.conf. Make sure you indent any lines
## after the one with the parameter.

[zeoclient1]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
eggs =
     ${plone:eggs}
     ${buildout:eggs}
     PILwoTK
     pyuno
zcml =
    psj.site
products =
    ${productdistros:location}
    ${plone:products}
environment-vars = LD_LIBRARY_PATH ${openoffice:location}/program
zeo-client = on
zeo-address = ${zeoserver:zeo-address}

# zeo-client-name = 
## Set the name of the ZEO client. Defaults to the name of the
## part. If a false value is provided no zeo-client-name will be set.

# zeo-client-cache-size = 30MB
## Set the size of the ZEO client cache. Defaults to '30MB'.

# zeo-client-client = 
## Set the persistent cache name that is used to construct the cache
## filenames. Persistent cache files are disabled by default.

# zeo-storage = '1'
## Set the storage number of the ZEO storage. Defaults to '1'.

# zeo-var = 
## Used in the zeo storage snippets to configure the zeo var
## folder. Defaults to $INSTANCE_HOME/var.

# zeo-username =
## Enable ZEO authentication and use the given username when accessing
## the ZEO server. It is obligatory to also specify a zeo-password.

# zeo-password = 
## Password to use when connecting to a ZEO server with authentication enabled.

# zeo-realm = 'ZEO'
## Authentication realm to use when authentication with a ZEO
## server. Defaults to 'ZEO'.


[zeoclient2]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8081
zeo-client = on
debug-mode = ${zeoclient1:debug-mode}
verbose-security = ${zeoclient1:verbose-security}
eggs = ${zeoclient1:eggs}
zcml = ${zeoclient1:zcml}
products = ${zeoclient1:products}
zeo-address = ${zeoclient1:zeo-address}
environment-vars = ${zeoclient1:environment-vars}
#zeo-client-name = ${zeoclient1:zeo-client-name}
#zeo-client-cache-size = ${zeoclient1:zeo-client-cache-size}
#zeo-client-client = ${zeoclient1:zeo-client-client}
#zeo-storage = ${zeoclient1:zeo-storage}
#zeo-var = ${zeoclient1:zeo-var}
#zeo-username = ${zeoclient1:zeo-username}
#zeo-password = ${zeoclient1:zeo-password}
#zeo-realm = ${zeoclient1:zeo-realm}



[plone]
recipe = plone.recipe.plone

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}

[productdistros]
recipe = plone.recipe.distros
urls = 
nested-packages = 
version-suffix-packages =

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-port = 8080
debug-mode = on
verbose-security = on
eggs =
     ${plone:eggs}
     ${buildout:eggs}
     PILwoTK
     pyuno
zcml =
    psj.site
products =
    ${productdistros:location}
    ${plone:products}

[openoffice]
recipe = z3c.recipe.openoffice
install-pyuno-egg = yes
hack-openoffice-python = no
unpack-name = OOH680_m12_native_packed-1_en-US.9286
version = 2.4
# download-url = http://ftp-atl.osuosl.org/pub/openoffice/stable/2.4.0/OOo_2.4.0_LinuxIntel_install_en-US.tar.gz
download-url = http://www.digglinux.com/software/openoffice/stable/2.4.0/OOo_2.4.0_LinuxIntel_install_en-US.tar.gz

[PILwoTK]
# A PIL package that works with buildout...
recipe = zc.recipe.egg
find-links =
    http://download.zope.org/distribution/

[scripts]
recipe = zc.recipe.egg
eggs = 
    psj.policy
    psjscripts
    pyuno
