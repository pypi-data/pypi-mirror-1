<?xml version="1.0"?>

<!-- RelStorage configuration via ZConfig -->

<component prefix="relstorage.config">

  <import package="ZODB"/>
  <abstracttype name="relstorage.adapter"/>

  <sectiontype name="relstorage" implements="ZODB.storage"
      datatype=".RelStorageFactory">
    <section type="relstorage.adapter" name="*" attribute="adapter"/>
    <key name="name" datatype="string" required="no"/>
    <key name="create" datatype="boolean" default="true">
      <description>
        Flag that indicates whether the storage should be initialized if
        it does not already exist.
      </description>
    </key>
    <key name="read-only" datatype="boolean" default="false">
      <description>
        If true, only reads may be executed against the storage.  Note
        that the "pack" operation is not considered a write operation
        and is still allowed on a read-only filestorage.
      </description>
    </key>
    <key name="poll-interval" datatype="float" required="no">
      <description>
        Defer polling the database for the specified maximum time interval.
        Set to 0 (the default) to always poll.  Fractional seconds are
        allowed.

        Use this to lighten the database load on servers with high read
        volume and low write volume.  A setting of 1-5 seconds is sufficient
        for most systems.

        While this setting should not affect database integrity,
        it increases the probability of basing transactions on stale data,
        leading to conflicts.  Thus a nonzero setting can hurt
        the performance of servers with high write volume.
      </description>
    </key>
    <key name="pack-gc" datatype="boolean" default="true">
      <description>
        If pack-gc is false, pack operations do not perform
        garbage collection.  Garbage collection is enabled by default.

        If garbage collection is disabled, pack operations keep at least one
        revision of every object.  With garbage collection disabled, the
        pack code does not need to follow object references, making
        packing conceivably much faster.  However, some of that benefit
        may be lost due to an ever increasing number of unused objects.

        Disabling garbage collection is also a hack that ensures
        inter-database references never break.
      </description>
    </key>
  </sectiontype>

  <sectiontype name="postgresql" implements="relstorage.adapter"
    datatype=".PostgreSQLAdapterFactory">
    <key name="dsn" datatype="string" required="no" default="">
      <description>
        The PostgreSQL data source name.  For example:

        dsn dbname='template1' user='user' host='localhost' password='pass'

        If dsn is omitted, the adapter will connect to a local database with
        no password.  Both the user and database name will match the
        name of the owner of the current process.
      </description>
    </key>
  </sectiontype>

  <sectiontype name="oracle" implements="relstorage.adapter"
    datatype=".OracleAdapterFactory">
    <key name="user" datatype="string" required="yes">
      <description>
        The Oracle account name
      </description>
    </key>
    <key name="password" datatype="string" required="yes">
      <description>
        The Oracle account password
      </description>
    </key>
    <key name="dsn" datatype="string" required="yes">
      <description>
        The Oracle data source name.  The Oracle client library will
        normally expect to find the DSN in /etc/oratab.
      </description>
    </key>
  </sectiontype>

  <sectiontype name="mysql" implements="relstorage.adapter"
    datatype=".MySQLAdapterFactory">

    <key name="host" datatype="string" required="no">
      <description>
        host to connect
      </description>
    </key>

    <key name="user" datatype="string" required="no">
      <description>
        user to connect as
      </description>
    </key>

    <key name="passwd" datatype="string" required="no">
      <description>
        password to use
      </description>
    </key>

    <key name="db" datatype="string" required="no">
      <description>
        database to use
      </description>
    </key>

    <key name="port" datatype="integer" required="no">
      <description>
        TCP/IP port to connect to
      </description>
    </key>

    <key name="unix_socket" datatype="string" required="no">
      <description>
        location of unix_socket (UNIX-ish only)
      </description>
    </key>

    <key name="connect_timeout" datatype="integer" required="no">
      <description>
        number of seconds to wait before the connection attempt fails.
      </description>
    </key>

    <key name="compress" datatype="boolean" required="no">
      <description>
        if set, gzip compression is enabled
      </description>
    </key>

    <key name="named_pipe" datatype="boolean" required="no">
      <description>
        if set, connect to server via named pipe (Windows only)
      </description>
    </key>

    <key name="read_default_file" datatype="string" required="no">
      <description>
        see the MySQL documentation for mysql_options()
      </description>
    </key>

    <key name="read_default_group" datatype="string" required="no">
      <description>
        see the MySQL documentation for mysql_options()
      </description>
    </key>

  </sectiontype>

</component>
