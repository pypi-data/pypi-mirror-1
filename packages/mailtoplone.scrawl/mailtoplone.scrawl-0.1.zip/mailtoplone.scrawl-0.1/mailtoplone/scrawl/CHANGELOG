2009-05-29  Hans-Peter Locher <hans-peter.locher@inquant.de>

    * adapter.py (ScrawlMailDropBox.drop): 
        use mailtoplone.base.browser.emailview.EmailView.decodeheader
        to decode the subject before using it as title
    * utilities.py: 
        added def attachments(mail),
        """return a generator which yields dicts like
            { "data": "some text, may also be binary for other files",
            "file_name": "muha.txt"
            "mime_type": "text/plain",
            }
         """
    * adapter.py (ScrawlMailDropBox.drop): 
        use attachments to get attachments from file and
        call add_file, for each attachment
    * adapter.py (ScrawlMailDropBox.drop): 
        use add_category('email')


2009-05-28  Hans-Peter Locher <hans-peter.locher@inquant.de>

    * adapter.py: added
		bases on mailtoplone.base.adapters.blog but creates
		a Blog Entry instead of a News item
    * interfaces.py: 
		added IScrawlMailDropBoxMarker markerinterface
    * configure.zcml: 
		register adapter IScrawlMailDropBoxMarker -> IMailDropBox
    * interfaces.py (IBlogEntryFactory): 
		defined interface for creating a Blog Entry
    * tests/base.py (setup_product): 
		fix test setup
    * blogentryfactory.py (BlogEntryFactory): 
		created, implements IBlogEntryFactory 
    * adapter.py (ScrawlMailDropBox.drop): 
	 	moved content creation to blogeventfactory, 
		which will be used if no adapter providing 
		IBlogEntryFactory is found

vim: set ft=changelog ts=4 sw=4 expandtab :
