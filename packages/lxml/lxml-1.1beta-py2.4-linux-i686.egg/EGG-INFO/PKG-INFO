Metadata-Version: 1.0
Name: lxml
Version: 1.1beta
Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.
Home-page: http://codespeak.net/lxml
Author: lxml dev team
Author-email: lxml-dev@codespeak.net
License: UNKNOWN
Description: lxml is a Pythonic binding for the libxml2 and libxslt libraries.  It provides
        safe and convenient access to these libraries using the ElementTree API.
        
        It extends the ElementTree API significantly to offer support for XPath,
        RelaxNG, XML Schema, XSLT, C14N and much more.
        
        1.1beta (2006-08-08)
        ====================
        
        Features added
        --------------
        
        * Support for Python 2.5 beta
        
        * Unlock the GIL for deep copying documents and for XPath()
        
        * New ``compact`` keyword argument for parsing read-only documents
        
        * Support for parser options in iterparse()
        
        * The ``namespace`` axis is supported in XPath and returns (prefix, URI)
        tuples
        
        * The XPath expression "/" now returns an empty list instead of raising an
        exception
        
        * XML-Object API on top of lxml (lxml.objectify)
        
        * Customizable Element class lookup:
        
        * Support for externally provided lookup functions
        
        * lxml.elements.classlookup module implements different lookup mechanisms
        
        * Support for processing instructions (ET-like, not compatible)
        
        * Public C-level API for independent extension modules
        
        Bugs fixed
        ----------
        
        * XPathSyntaxError now inherits from XPathError
        
        * Threading race conditions in RelaxNG and XMLSchema
        
        * Crash when mixing elements from XSLT results into other trees, concurrent
        XSLT is only allowed when the stylesheet was parsed in the main thread
        
        * The EXSLT ``regexp:match`` function now works as defined (except for some
        differences in the regular expression syntax)
        
        * Setting element.text to '' returned None on request, not the empty string
        
        * ``iterparse()`` could crash on long XML files
        
        * Creating documents no longer copies the parser for later URL resolving.  For
        performance reasons, only a reference is kept.  Resolver updates on the
        parser will now be reflected by documents that were parsed before the
        change.  Although this should rarely become visible, it is a behavioral
        change from 1.0.
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: C
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: Topic :: Software Development :: Libraries :: Python Modules
