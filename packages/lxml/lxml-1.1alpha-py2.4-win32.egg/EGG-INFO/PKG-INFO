Metadata-Version: 1.0
Name: lxml
Version: 1.1alpha
Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.
Home-page: http://codespeak.net/lxml
Author: lxml dev team
Author-email: lxml-dev@codespeak.net
License: UNKNOWN
Description: lxml is a Pythonic binding for the libxml2 and libxslt libraries.  It provides
        safe and convenient access to these libraries using the ElementTree API.
        
        It extends the ElementTree API significantly to offer support for XPath,
        RelaxNG, XML Schema, XSLT, C14N and much more.
        
        1.1alpha (2006-06-27)
        =====================
        
        Features added
        --------------
        
        * Module level ``iterwalk()`` function as 'iterparse' for trees
        
        * ElementTree compatible ``iterparse()`` module function
        
        * Element.nsmap property returns a mapping of all namespace prefixes known at
        the Element to their namespace URI
        
        * Reentrant threading support in RelaxNG, XMLSchema and XSLT
        
        * Threading support in parsers and serializers:
        
        * All in-memory operations (tostring, parse(StringIO), etc.) free the GIL
        
        * File operations (on file names) free the GIL
        
        * Reading from file-like objects frees the GIL and reacquires it for reading
        
        * Serialisation to file-like objects is single-threaded (high lock overhead)
        
        * Element iteration over XPath axes:
        
        * Element.iterdescendants() iterates over the descendants of an element
        
        * Element.iterancestors() iterates over the ancestors of an element (from
        parent to parent)
        
        * Element.itersiblings() iterates over either the following or preceding
        siblings of an element
        
        * Element.iterchildren() iterates over the children of an element in either
        direction
        
        * All iterators support the ``tag`` keyword argument to restrict the
        generated elements
        
        * Element.getnext() and Element.getprevious() return the direct siblings of an
        element
        
        Bugs fixed
        ----------
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: C
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: Topic :: Software Development :: Libraries :: Python Modules
