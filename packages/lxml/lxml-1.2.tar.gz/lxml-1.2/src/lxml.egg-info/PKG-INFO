Metadata-Version: 1.0
Name: lxml
Version: 1.2
Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.
Home-page: http://codespeak.net/lxml
Author: lxml dev team
Author-email: lxml-dev@codespeak.net
License: UNKNOWN
Download-URL: http://cheeseshop.python.org/packages/source/l/lxml/lxml-1.2.tar.gz
Description: lxml is a Pythonic, mature binding for the libxml2 and libxslt libraries.  It
        provides safe and convenient access to these libraries using the ElementTree
        API.
        
        It extends the ElementTree API significantly to offer support for XPath,
        RelaxNG, XML Schema, XSLT, C14N and much more.
        
        In case you want to use the current in-development version of lxml, you can
        get it from the subversion repository at http://codespeak.net/svn/lxml/trunk .
        Running ``easy_install lxml==dev`` will install it from
        http://codespeak.net/svn/lxml/trunk#egg=lxml-dev
        
        Current bug fixes for the stable version are at
        http://codespeak.net/svn/lxml/branch/lxml-1.2 .
        Running ``easy_install lxml==1.2bugfix`` will install this
        version from
        http://codespeak.net/svn/lxml/branch/lxml-1.2#egg=lxml-1.2bugfix
        
        1.2 (2007-02-20)
        ================
        
        Features added
        --------------
        
        * Rich comparison of QName objects
        
        * Support for regular expressions in benchmark selection
        
        * get/set emulation (not .attrib!) for attributes on processing instructions
        
        * ElementInclude Python module for ElementTree compatible XInclude processing
        that honours custom resolvers registered with the source document
        
        * ElementTree.parser property holds the parser used to parse the document
        
        * setup.py has been refactored for greater readability and flexibility
        
        * --rpath flag to setup.py to induce automatic linking-in of dynamic library
        runtime search paths has been renamed to --auto-rpath. This makes it
        possible to pass an --rpath directly to distutils; previously this was being
        shadowed.
        
        Bugs fixed
        ----------
        
        * Element instantiation now uses locks to prevent race conditions with threads
        
        * ElementTree.write() did not raise an exception when the file was not writable
        
        * Error handling could crash under Python <= 2.4.1 - fixed by disabling thread
        support in these environments
        
        * Element.find*() did not accept QName objects as path
        
        Other changes
        -------------
        
        * code cleanup: redundant _NodeBase super class merged into _Element class
        Note: although the impact should be zero in most cases, this change breaks
        the compatibiliy of the public C-API
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: C
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: Topic :: Software Development :: Libraries :: Python Modules
