Metadata-Version: 1.0
Name: lxml
Version: 1.1.2
Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.
Home-page: http://codespeak.net/lxml
Author: lxml dev team
Author-email: lxml-dev@codespeak.net
License: UNKNOWN
Description: lxml is a Pythonic binding for the libxml2 and libxslt libraries.  It provides
        safe and convenient access to these libraries using the ElementTree API.
        
        It extends the ElementTree API significantly to offer support for XPath,
        RelaxNG, XML Schema, XSLT, C14N and much more.
        
        In case you want to use the current in-development version of lxml, you can
        get it from the subversion repository at http://codespeak.net/svn/lxml/trunk .
        Running ``easy_install lxml==dev`` will install it from
        http://codespeak.net/svn/lxml/trunk#egg=lxml-dev
        
        Current bug fixes for the stable version are at
        http://codespeak.net/svn/lxml/branch/lxml-1.1 .
        Running ``easy_install lxml==1.1bugfix`` will install this
        version from
        http://codespeak.net/svn/lxml/branch/lxml-1.1#egg=lxml-1.1bugfix
        
        1.1.2 (2006-10-30)
        ==================
        
        Features added
        --------------
        
        * Data elements in objectify support repr(), which is now used by dump()
        
        * Source distribution now ships with a patched Pyrex
        
        * New C-API function makeElement() to create new elements with text,
        tail, attributes and namespaces
        
        * Reuse original parser flags for XInclude
        
        * Simplified support for handling XSLT processing instructions
        
        Bugs fixed
        ----------
        
        * Parser resources were not freed before the next parser run
        
        * Open files and XML strings returned by Python resolvers were not
        closed/freed
        
        * Crash in the IDDict returned by XMLDTDID
        
        * Copying Comments and ProcessingInstructions failed
        
        * Memory leak for external URLs in _XSLTProcessingInstruction.parseXSL()
        
        * Memory leak when garbage collecting tailed root elements
        
        * HTML script/style content was not propagated to .text
        
        * Show text xincluded between text nodes correctly in .text and .tail
        
        * 'integer * objectify.StringElement' operation was not supported
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: C
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: Topic :: Software Development :: Libraries :: Python Modules
