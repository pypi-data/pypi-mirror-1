Metadata-Version: 1.0
Name: lxml
Version: 2.1beta2
Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.
Home-page: http://codespeak.net/lxml
Author: lxml dev team
Author-email: lxml-dev@codespeak.net
License: UNKNOWN
Download-URL: http://cheeseshop.python.org/packages/source/l/lxml/lxml-2.1beta2.tar.gz
Description: lxml is a Pythonic, mature binding for the libxml2 and libxslt libraries.  It
        provides safe and convenient access to these libraries using the ElementTree
        API.
        
        It extends the ElementTree API significantly to offer support for XPath,
        RelaxNG, XML Schema, XSLT, C14N and much more.
        
        To contact the project, go to the `project home page
        <http://codespeak.net>`_ or see our bug tracker at
        https://launchpad.net/lxml
        
        In case you want to use the current in-development version of lxml, you can
        get it from the subversion repository at http://codespeak.net/svn/lxml/trunk .
        Running ``easy_install lxml==dev`` will install it from
        http://codespeak.net/svn/lxml/trunk#egg=lxml-dev
        
        2.1beta2 (2008-05-02)
        =====================
        
        Features added
        --------------
        
        * All parse functions in lxml.html take a ``parser`` keyword argument.
        
        * lxml.html has a new parser class ``XHTMLParser`` and a module
        attribute ``xhtml_parser`` that provide XML parsers that are
        pre-configured for the lxml.html package.
        
        Bugs fixed
        ----------
        
        * Moving a subtree from a document created in one thread into a
        document of another thread could crash when the rest of the source
        document is deleted while the subtree is still in use.
        
        * Passing an nsmap when creating an Element will no longer strip
        redundantly defined namespace URIs.  This prevented the definition
        of more than one prefix for a namespace on the same Element.
        
        Other changes
        -------------
        
        * If the default namespace is redundantly defined with a prefix on the
        same Element, the prefix will now be preferred for subelements and
        attributes.  This allows users to work around a problem in libxml2
        where attributes from the default namespace could serialise without
        a prefix even when they appear on an Element with a different
        namespace (i.e. they would end up in the wrong namespace).
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: C
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: Topic :: Software Development :: Libraries :: Python Modules
