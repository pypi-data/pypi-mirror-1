Metadata-Version: 1.0
Name: lxml
Version: 2.1alpha1
Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.
Home-page: http://codespeak.net/lxml
Author: lxml dev team
Author-email: lxml-dev@codespeak.net
License: UNKNOWN
Download-URL: http://cheeseshop.python.org/packages/source/l/lxml/lxml-2.1alpha1.tar.gz
Description: lxml is a Pythonic, mature binding for the libxml2 and libxslt libraries.  It
        provides safe and convenient access to these libraries using the ElementTree
        API.
        
        It extends the ElementTree API significantly to offer support for XPath,
        RelaxNG, XML Schema, XSLT, C14N and much more.
        
        To contact the project, go to the `project home page
        <http://codespeak.net>`_ or see our bug tracker at
        https://launchpad.net/lxml
        
        In case you want to use the current in-development version of lxml, you can
        get it from the subversion repository at http://codespeak.net/svn/lxml/trunk .
        Running ``easy_install lxml==dev`` will install it from
        http://codespeak.net/svn/lxml/trunk#egg=lxml-dev
        
        2.1alpha1 (2008-03-27)
        ======================
        
        Features added
        --------------
        
        * New event types 'comment' and 'pi' in ``iterparse()``.
        
        * ``XSLTAccessControl`` instances have a property ``options`` that
        returns a dict of access configuration options.
        
        * Constant instances ``DENY_ALL`` and ``DENY_WRITE`` on
        ``XSLTAccessControl`` class.
        
        * Extension elements for XSLT (experimental!)
        
        * ``Element.base`` property returns the xml:base or HTML base URL of
        an Element.
        
        * ``docinfo.URL`` property is writable.
        
        Bugs fixed
        ----------
        
        * Default encoding for plain text serialisation was different from
        that of XML serialisation (UTF-8 instead of ASCII).
        
        Other changes
        -------------
        
        * Minor API speed-ups.
        
        * The benchmark suite now uses tail text in the trees, which makes the
        absolute numbers incomparable to previous results.
        
        * Generating the HTML documentation now requires Pygments_, which is
        used to enable syntax highlighting for the doctest examples.
        
        .. _Pygments: http://pygments.org/
        
        Most long-time deprecated functions and methods were removed:
        
        - ``etree.clearErrorLog()``, use ``etree.clear_error_log()``
        
        - ``etree.useGlobalPythonLog()``, use
        ``etree.use_global_python_log()``
        
        - ``etree.ElementClassLookup.setFallback()``, use
        ``etree.ElementClassLookup.set_fallback()``
        
        - ``etree.getDefaultParser()``, use ``etree.get_default_parser()``
        
        - ``etree.setDefaultParser()``, use ``etree.set_default_parser()``
        
        - ``etree.setElementClassLookup()``, use
        ``etree.set_element_class_lookup()``
        
        Note that ``parser.setElementClassLookup()`` has not been removed
        yet, although ``parser.set_element_class_lookup()`` should be used
        instead.
        
        - ``xpath_evaluator.registerNamespace()``, use
        ``xpath_evaluator.register_namespace()``
        
        - ``xpath_evaluator.registerNamespaces()``, use
        ``xpath_evaluator.register_namespaces()``
        
        - ``objectify.setPytypeAttributeTag``, use
        ``objectify.set_pytype_attribute_tag``
        
        - ``objectify.setDefaultParser()``, use
        ``objectify.set_default_parser()``
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: C
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: Topic :: Software Development :: Libraries :: Python Modules
