Metadata-Version: 1.0
Name: lxml
Version: 2.0alpha5
Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.
Home-page: http://codespeak.net/lxml
Author: lxml dev team
Author-email: lxml-dev@codespeak.net
License: UNKNOWN
Download-URL: http://cheeseshop.python.org/packages/source/l/lxml/lxml-2.0alpha5.tar.gz
Description: lxml is a Pythonic, mature binding for the libxml2 and libxslt libraries.  It
        provides safe and convenient access to these libraries using the ElementTree
        API.
        
        It extends the ElementTree API significantly to offer support for XPath,
        RelaxNG, XML Schema, XSLT, C14N and much more.
        
        To contact the project, go to the project home page or see our bug tracker at
        https://launchpad.net/lxml
        
        In case you want to use the current in-development version of lxml, you can
        get it from the subversion repository at http://codespeak.net/svn/lxml/trunk .
        Running ``easy_install lxml==dev`` will install it from
        http://codespeak.net/svn/lxml/trunk#egg=lxml-dev
        
        2.0alpha5 (2007-11-24)
        ======================
        
        Features added
        --------------
        
        * Rich comparison of ``element.attrib`` proxies.
        
        * ElementTree compatible TreeBuilder class.
        
        * Use default prefixes for some common XML namespaces.
        
        * ``lxml.html.clean.Cleaner`` now allows for a ``host_whitelist``, and
        two overridable methods: ``allow_embedded_url(el, url)`` and the
        more general ``allow_element(el)``.
        
        * Extended slicing of Elements as in ``element[1:-1:2]``, both in
        etree and in objectify
        
        * Resolvers can now provide a ``base_url`` keyword argument when
        resolving a document as string data.
        
        * When using ``lxml.doctestcompare`` you can give the doctest option
        ``NOPARSE_MARKUP`` (like ``# doctest: +NOPARSE_MARKUP``) to suppress
        the special checking for one test.
        
        Bugs fixed
        ----------
        
        * Target parser failed to report comments.
        
        * In the ``lxml.html`` ``iter_links`` method, links in ``<object>``
        tags weren't recognized.  (Note: plugin-specific link parameters
        still aren't recognized.)  Also, the ``<embed>`` tag, though not
        standard, is now included in ``lxml.html.defs.special_inline_tags``.
        
        * Using custom resolvers on XSLT stylesheets parsed from a string
        could request ill-formed URLs.
        
        * With ``lxml.doctestcompare`` if you do ``<tag xmlns="...">`` in your
        output, it will then be namespace-neutral (before the ellipsis was
        treated as a real namespace).
        
        Other changes
        -------------
        
        * The module source files were renamed to "lxml.*.pyx", such as
        "lxml.etree.pyx".  This was changed for consistency with the way
        Pyrex commonly handles package imports.  The main effect is that
        classes now know about their fully qualified class name, including
        the package name of their module.
        
        * Keyword-only arguments in some API functions, especially in the
        parsers and serialisers.
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: C
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: Topic :: Software Development :: Libraries :: Python Modules
