Verify that a Manager can add a Document
========================================

Dummy test to let an example to doctest newcomers.

First, some set-up.
Load the base configuration of our site.

    >>> from Products.Five import zcml
    >>> import Products
    >>> zcml.load_config('configure.zcml', package=${project})


Import base configuration for this doctest.
See ${project}/tests/utils.py for more informations

    >>> from ${project}.tests import utils
    >>> utils.setUpDefaultMembers(self)


Create a browser to make our tests with.

    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> browser.handleErrors = False


Let us log all exceptions, which is useful for debugging. Also, clear portlet
slots, to make the test browser less confused by things like the recent portlet
and the navtree.

    >>> self.portal.error_log._ignored_exceptions = ()
    >>> self.portal.left_slots = self.portal.right_slots = []


Log as Manager for a simple test

    >>> browser.open(self.portal.absolute_url() + '/login_form')
    >>> browser.getControl('Login Name').value = 'manager1'
    >>> browser.getControl('Password').value = 'secret'
    >>> browser.getControl('Log in').click()


Check the initial configuration

    >>> browser.open(self.portal.absolute_url() + '/personalize_form')
    >>> browser.getControl('Allow editing of Short Names').selected
    False


Check if we can add a document or a folder.

    >>> browser.open(self.portal.absolute_url())
    >>> print browser.contents
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    ...
    ...createObject?type_name=Document...
    ...
    ...createObject?type_name=Folder...
    ...
    <BLANKLINE>


Add a document and check the url after renaming

    >>> browser.getLink('Add item').click()
    >>> browser.getControl('Add Document', index=1).click()
    >>> 'Short Name' in browser.contents
    False
    >>> browser.getControl('Title').value = 'My Document'
    >>> browser.getControl('Body Text').value = 'About tests'
    >>> browser.getControl('Save').click()
    >>> 'Changes saved.' in browser.contents
    True
    >>> 'My Document' in browser.contents
    True
    >>> browser.url
    'http://nohost/plone/my-document/...'
