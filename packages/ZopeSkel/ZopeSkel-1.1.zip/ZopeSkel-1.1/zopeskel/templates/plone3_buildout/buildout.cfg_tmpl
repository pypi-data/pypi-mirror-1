[buildout]
parts =
    plone
#if str($zope2_install) == 'False'
    zope2
#end if
    productdistros
    instance
    zopepy

\# Add additional egg download sources here. dist.plone.org contains archives
\# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

\# Add additional eggs here
\# elementtree is required by Plone
eggs =
    elementtree
    
\# Reference any eggs you are developing here, one per line
\# e.g.: develop = src/my.package
develop =

[plone]
recipe = plone.recipe.plone
#if $plone_products_install
\# By overriding the download URLs and making them an empty list, we
\# Make sure our own products directory takes precedence
urls = 
#end if

#if str($zope2_install) == 'False'
[zope2]
recipe = plone.recipe.zope2install
url = \${plone:zope2-url}
#end if

\# Use this section to download additional old-style products.
\# List any number of URLs for product tarballs under URLs (separate
\# with whitespace, or break over several lines, with subsequent lines
\# indented). If any archives contain several products inside a top-level
\# directory, list the archive file name (i.e. the last part of the URL, 
\# normally with a .tar.gz suffix or similar) under 'nested-packages'.
\# If any archives extract to a product directory with a version suffix, list
\# the archive name under 'version-suffix-packages'.
[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages = 

[instance]
recipe = plone.recipe.zope2instance
#if str($zope2_install) == 'True'
zope2-location = ${zope2_install}
#else
zope2-location = \${zope2:location}
#end if
user = ${zope_user}:${zope_password}
http-address = ${http_port}
#if $debug_mode == 'on'
debug-mode = on
#else
\#debug-mode = on
#end if
#if $verbose_security == 'on'
verbose-security = on
#else
\#verbose-security = on
#end if

\# If you want Zope to know about any additional eggs, list them here.
\# This should include any development eggs you listed in develop-eggs above,
\# e.g. eggs = \${buildout:eggs} \${plone:eggs} my.package
eggs =
    \${buildout:eggs}
    \${plone:eggs}

\# If you want to register ZCML slugs for any packages, list them here.
\# e.g. zcml = my.package my.other.package
zcml = 

products =
    \${buildout:directory}/products
    \${productdistros:location}
#if str($plone_products_install) == 'False'
    \${plone:products}
#else
    ${plone_products_install}
#end if

[zopepy]
recipe = zc.recipe.egg
eggs = \${instance:eggs}
interpreter = zopepy
#if str($zope2_install) == 'True'
extra-paths = ${zope2_install}/lib/python
#else
extra-paths = \${zope2:location}/lib/python
#end if
scripts = zopepy