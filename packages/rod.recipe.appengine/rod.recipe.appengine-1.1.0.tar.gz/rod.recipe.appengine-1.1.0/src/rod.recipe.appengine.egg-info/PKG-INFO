Metadata-Version: 1.0
Name: rod.recipe.appengine
Version: 1.1.0
Summary: ZC Buildout recipe for setting up a google appengine development environment
Home-page: http://pypi.python.org/pypi/rod.recipe.appengine
Author: Tobias Rodaebel
Author-email: tobias.rodaebel@googlemail.com
License: LGPL3
Description: ====================
        rod.recipe.appengine
        ====================
        
        Buildout recipe for setting up a google appengine development environment.
        
        The rod.recipe.appengine is a zc.buildout recipe to build, test and deploy
        projects for the google appengine. It makes it easy to use eggs and resolve
        their dependencies automatically.
        
        To be honest, this is a recipe for scrambled eggs. It produces a zip file
        containing all configured external packages in a traditional folder hierarchy.
        
        =======================
        Google Appengine Recipe
        =======================
        
        This recipe takes a number of options:
        
        appengine-lib
        Path to an already installed appengine library
        
        eggs
        List of required eggs
        
        packages
        A list of packages to be included into the zip archive, which will be
        uploaded to the appspot.
        
        src
        The directory which contains the project source files.
        
        url
        The url for fetching the google appengine distribution
        
        zip-name
        The name of the zip archive containing all external packages ready
        to deploy.
        
        
        Tests
        =====
        
        We will define a buildout template used by the recipe:
        
        >>> buildout_template = """
        ... [buildout]
        ... develop = %(egg_src)s
        ... parts = sample
        ...
        ... [sample]
        ... recipe = rod.recipe.appengine
        ... eggs = foo.bar
        ... url = http://googleappengine.googlecode.com/files/google_appengine_1.2.0.zip
        ... """
        
        We'll start by creating a buildout:
        
        >>> import os.path
        >>> import rod.recipe.appengine.tests as tests
        >>> egg_src = os.path.join(os.path.split(tests.__file__)[0], 'foo.bar')
        >>> write('buildout.cfg', buildout_template % {'egg_src': egg_src})
        
        Running the buildout gives us:
        
        >>> output = system(buildout)
        >>> if output.endswith("Installing sample.\n"): True
        ... else: print output
        True
        
        And now we try to run the appserver script:
        
        >>> print system(os.path.join('bin', 'sample'))
        <BLANKLINE>
        ...
        Invalid arguments
        <BLANKLINE>
        
        =======
        Changes
        =======
        
        1.1.0 2009-04-08
        ----------------
        
        - Mostly rewritten.
        - Installs google appengine as part.
        - Adding dummy pkg_resources module to handle namespace package relicts.
        - Tests added.
        - Ready for Google App Engine SDK 1.2.0
        
        
        1.0.0b5 2009-01-20
        ------------------
        
        - Requires Google App Engine SDK 1.1.8
        
        
        1.0.0b4 2008-09-04
        ------------------
        
        - Create and use PROJECT_HOME/var to place temporary project files like
        data base files.
        
        
        1.0.0b3 2008-09-02
        ------------------
        
        - Copy package contents to temporary library directory.
        
        
        1.0.0b2 2008-09-02
        ------------------
        
        - Installs the whole distribution in the parts directory now. So it is ready
        to test and deploy.
        
        
        1.0.0b1 2008-09-01
        ------------------
        
        - First beta release.
        
Keywords: appengine gae zc.buildout recipe zope
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Buildout
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
