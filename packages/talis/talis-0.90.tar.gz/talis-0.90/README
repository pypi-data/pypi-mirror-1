Talis Triplestore Python API
============================

This small module is intended to provide an API similar to
that of rdflib.Graph used to store and query data in a
Talis triplestore.

The module depends on rdflib, and arguments passed in as
well as values returned are one of its URIRef, Literal or
other Node types.

Example SPARQL query:

	>>> from talis import Talis
	>>> store = Talis("ckan-dev1")
	>>> for result in store.query("SELECT * WHERE { ?a ?b ?c } LIMIT 10"):
	...     print result
	...
	>>>

Example adding and removing triples:

	>>> store = Talis("ckan-dev1", username="storeuser", password="secret")
	>>> store.remove((URIRef("http://example.org/"), DC["title"], Literal("Old Title")))
	>>> store.add((URIRef("http://example.org/"), DC["title"], Literal("Example Website")))

Example uploading RDF data serialised as XML:

	>>> fp = open("data.rdf")
	>>> store.upload(fp.read())
	>>> fp.close()

Many of the operations of the Talis object use the Python logging 
facilities, so it is well advised to set them up, at a minimum with

	>>> logging.basicConfig(
	...     level=logging.INFO,
	...     format = "%(name)s:%(levelname)s - %(message)s"
	... )

Setting the level to DEBUG is likely to be quite verbose.

The distribution also includes a script that facilitates uploading
RDF and executing SPARQL queries from the command line.
