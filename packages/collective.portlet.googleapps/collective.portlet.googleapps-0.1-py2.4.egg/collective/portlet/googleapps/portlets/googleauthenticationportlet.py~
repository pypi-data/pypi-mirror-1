from zope.interface import Interface
from zope.interface import implements

from plone.app.portlets.portlets import base
from plone.portlets.interfaces import IPortletDataProvider

from zope import schema
from zope.formlib import form

from plone.memoize.instance import memoize
from plone.memoize import ram
from plone.memoize.compress import xhtml_compress

from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile

from collective.portlet.googleapps import portletMessageFactory as _

from Products.CMFCore.utils import getToolByName

import gdata.service

class IGoogleAuthenticationPortlet(IPortletDataProvider):
    """A portlet

    It inherits from IPortletDataProvider because for this portlet, the
    data that is being rendered and the portlet assignment itself are the
    same.
    """

    # TODO: Add any zope.schema fields here to capture portlet configuration
    # information. Alternatively, if there are no settings, leave this as an
    # empty interface - see also notes around the add form and edit form
    # below.

    # some_field = schema.TextLine(title=_(u"Some field"),
    #                              description=_(u"A field to use"),
    #                              required=True)

    header = schema.TextLine(title=_(u"Portlet header"),
                       description=_(u"Title of the rendered portlet"),
                       required=True,
                       default=_(u"Google Authentication"))

    hosted_domain = schema.TextLine(title=_(u"Hosted domain to access"),
                       description=_(u"If specified, this will be the domain account that will be accessed (for example, 'university.edu.au').  If not specifed, you will access a regular Google account."),
                       required=False,
                       default=_(u""))

    show_icons = schema.Bool(title=_(u"Show icons"),
                       description=_(u"If enabled, Google icons will be displayed in the portlet."),
                       required=True,
                       default=True)

    hide_when_auth = schema.Bool(title=_(u"Hide portlet once authenticated?"),
                       description=_(u"If enabled, this portlet will be hidden once you've authenticated.  Warning: you will have to log out manually when the portlet is invisible."),
                       required=True,
                       default=False)



class Assignment(base.Assignment):
    """Portlet assignment.

    This is what is actually managed through the portlets UI and associated
    with columns.
    """

    implements(IGoogleAuthenticationPortlet)

    # TODO: Set default values for the configurable parameters here

    # some_field = u""

    header = u"Google Authentication"
    hosted_domain = u""
    show_icons = True
    hide_when_auth = False

    # TODO: Add keyword parameters for configurable parameters here
    # def __init__(self, some_field=u"):
    #    self.some_field = some_field

    def __init__(self, header=u"My Google Docs", hosted_domain=u"", show_icons=True, hide_when_auth=False):
        self.header = header
        self.hosted_domain = hosted_domain
        self.show_icons = show_icons
	self.hide_when_auth = hide_when_auth

    @property
    def title(self):
        """This property is used to give the title of the portlet in the
        "manage portlets" screen.
        """
        return self.header

class Renderer(base.Renderer):
    """Portlet renderer.

    This is registered in configure.zcml. The referenced page template is
    rendered, and the implicit variable 'view' will refer to an instance
    of this class. Other methods can be added and referenced in the template.
    """

    render = ViewPageTemplateFile('googleauthenticationportlet.pt')

    def __init__(self, *args):
        base.Renderer.__init__(self, *args)

    def GetAuthSubUrl(self):
        domain = self.data.hosted_domain
        portal_url = getToolByName(self, 'portal_url')
        next = portal_url()+'/google_token_auth'
        scopes = ['http://docs.google.com/feeds/', 'http://www.google.com/calendar/feeds/', 'http://www.google.com/m8/feeds', 'https://mail.google.com/mail/feed/atom/']
        secure = True  # set secure=True to request a secure AuthSub token
        session = True

        url = ''
        if domain:
            url = gdata.service.GenerateAuthSubRequestUrl(next, scopes, secure=secure, session=session, domain=domain)
        else:
            url = gdata.service.GenerateAuthSubRequestUrl(next, scopes, secure=secure, session=session)
	return url


# NOTE: If this portlet does not have any configurable parameters, you can
# inherit from NullAddForm and remove the form_fields variable.

class AddForm(base.AddForm):
    """Portlet add form.

    This is registered in configure.zcml. The form_fields variable tells
    zope.formlib which fields to display. The create() method actually
    constructs the assignment that is being added.
    """
    form_fields = form.Fields(IGoogleAuthenticationPortlet)

    def create(self, data):
        return Assignment(**data)


# NOTE: IF this portlet does not have any configurable parameters, you can
# remove this class definition and delete the editview attribute from the
# <plone:portlet /> registration in configure.zcml

class EditForm(base.EditForm):
    """Portlet edit form.

    This is registered with configure.zcml. The form_fields variable tells
    zope.formlib which fields to display.
    """
    form_fields = form.Fields(IGoogleAuthenticationPortlet)

    label = _(u"Edit Google Authentication Portlet")
    description = _(u"A portlet for Plone which facilitates authentication with Google Apps, supporting the other Google portlets")
