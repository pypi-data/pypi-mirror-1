Краткое описание пакета ng.app.rubricator.algorithm.base
========================================================
Пакет **ng.app.rubricator.algorithm.base** содержит основу алгоритма
рубрикации. Работа алгоритма основана на двух понятиях:

Рубрика
    Рубрикой называется контейнер, в котором размещается
    [name:ng.app.link:ссылка на статью] при соблюдении некоторых условий.

Статья
    Статьей называется компонент, для которого можно определить условия,
    использумемые при размещении в рубрике.

В рубрике всегда размещается ссылка на статью, а не сама статья, это
существеннно более удобно, так как современные интернет-службы
неодобрительно относятся к многократному дублированию текста статьи на
сайте.

Базовый алгоритм выполняет все действия по размещению ссылок на статью в
подходящих рубриках за исключением одного: поиска рубрики. Поиск рубрики
выполняется методом rubricate(id. ob), который должен быть перекрыт в
конкретной реализации алгоритма.

Подготовка и настройка
----------------------
Все алгоритмы, производные от данного, требуют следующей настройки:

1. Создание экземпляра алгоритма;

2. Регистрация алгоритма под интерфейсом::
	
   	ng.app.rubricator.algorithm.base.interfaces.IRubricAlgorithmDo

3. Метку рубрицируемых компонент интерфейсом::

   	ng.app.rubricator.algorithm.base.interfaces.IRubricateAble

4. Настройку пакета [name:ng.app.link], включая создание и регистрацию
   необходимых утилит.

Дальнейшие настройки включают в себя создание рубрикатора и зависят от
используемеого алгоритма.

Программирование собственных алгоритмов
--------------------------------------- 
Для реализации собственного алгоритма рубрикации необходимо и достаточно
перекрыть метод rubricate. Метод rubricate получает на вход идентификатор
(обычно полученный от intid) и сам объект и возвращает список рубрик,
предназначенных для размещщения [name:ng.app.link:ссылок] на эти объекты.

Заключение
----------
Базовый алгоритм является только лишь основой для создания более сложных
алгоритмо и не иметт самостоятельного значения.
