2009-05-14: Version 0.3.0-final
-------------------------------
* Fixed ReportGroup.attribute_name to support methods and child attributes
* Created a new module 'utils.py' with once function to get attribute values
  from objects support methods and expression paths. It is used by
  ReportGroup.attribute_name and Widget.attribute_name

2009-04-30: Version 0.3.0-alpha-9
---------------------------------
* Fixed a bug on group band footer calculations when there was only one object
  in the queryset

2009-04-28: Version 0.3.0-alpha-8
---------------------------------
* Fixed bug on ObjectValue widget and how it works with 'text' property
* Fixed bug on ObjectValue to avoid None values and to convert Decimal to float

2009-04-23: Version 0.3.0-alpha-7
---------------------------------
* Fixed a bug on basic classes creation (it was using objects on lists)

2009-04-16: Version 0.3.0-alpha-6
--------------------------------
* SubReport attribute 'detail_band' changed to 'band_detail' and the old name
  made as deprecated
* SubReports now support header and footer bands

2009-04-16: Version 0.3.0-alpha-5
--------------------------------
* Changed method Report.generate_by to raise an exception EmptyQueryset if the
  report has attribute 'print_if_empty' is False and 'queryset' is empty

2009-04-13: Version 0.3.0-alpha-4
--------------------------------
* Changed attribute 'attribute_name' on ObjectValue widget class, to support
  callable values and object paths instead of attribute names.

2009-04-10: Version 0.3.0-alpha-3
--------------------------------
* New attribute on widgets: truncate_overflow, to truncate widget values when they
  overflow
* Default widget height changed to zero ( 0 ).

2009-04-08: Version 0.3.0-alpha
--------------------------------
* Fixed a bug on queryset attribute in Report class
* Created a new class DetailBand, to support inline displayed detail bands

2009-02-01: Version 0.2.2-stable
--------------------------------
* Fixed setup.py to not require PIL and ReportLab from PyPI
* All band classes are transformed in objects on objects initializations. This
  is important to work with inheritance, and it is important to make a future
  important thing: events (specially BeforePrint and AfterPrint events)
* Fixed test of MatPlotLib support

2009-01-23: Version 0.2-alpha(4)
--------------------------------
* Removed all Django dependecy. Now when use '%(now:)s' macro in SystemField
  instances you have to use Python date formatting standards.

* Fixed PDF generator to set some report reference instances to graphic
  elements. This is important to make graphic elements in a detail band.

* graphics.Image with a new attribute 'get_image' to set manually functions
  to return image instead of load from PIL object or image. This is important
  to show images and charts depending on object values and logic.

* Added support to border in Report class to make borders around the margin.
