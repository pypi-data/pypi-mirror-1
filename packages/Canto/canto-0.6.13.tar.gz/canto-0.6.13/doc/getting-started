Getting started with Canto is easy. Most of this is covered in `man canto`, but it seems like it should be online as well.

[TOC]

## Quick Start

<div class="section">

Right after you download and install Canto, I'm sure you're eager to get going. If you just run `canto`, it will start up, generate an example configuration (~/.canto/conf.example), fetch those feeds, and startup the interface as usual. This is to let you get a feeling for the program quickly, before messing around with the configuration. Here's the output for conf.example:

    # Auto-generated by canto because you don't have one.
    # Please copy to/create ~/.canto/conf

    add("http://rss.slashdot.org/slashdot/Slashdot")
    add("http://reddit.com/.rss")
    add("http://kerneltrap.org/node/feed")
    add("http://codezen.org/canto/feeds/latest")

You can find a list of the default keybinds on the [configuration page](../config/#keys), to help you navigate.

</div>

## Configuration

<div class="section">

So you've messed around with the interface and want to put a little effort into a config. The first place to check is the [configuration page](../config/), to help you get on your way.

The most basic config (like the conf.example generated if you ran without a config), is just a series of `add` calls, as you can see above.

If you store your feeds in *OPML* format, you can use `canto -i <filename>` to automatically import your feeds to your config, or `source_opml()` to add them from an OPML file at run time.

If you store your feeds in a *list of URLs*, you can use `source_urls()` to read the list from a file at run time.

</div>

## Fetching

<div class="section">

In order for canto to receive updates, it's fetching program, `canto-fetch` must be run often. You can achieve this either by adding

    * * * * * canto-fetch

to your crontab, meaning that `canto-fetch` will be run once a minute while the computer is running, or if you don't use cron you can add

    canto-fetch -db

to your startup scripts (.xinitrc, etc.), this will make canto-fetch into a daemon and run itself every minute. You can also run `canto-fetch -db` by hand, or just run `canto -u` to force an update every time you run. It's up to you. 

</div>

## More

<div class="section">

For more advanced configuration, review the [configuration page](../config/). Also, be aware that Canto is highly theme-able, which you can read about on the [style page](../style/). If you have any questions, feel free to contact me (information below).

</div>
