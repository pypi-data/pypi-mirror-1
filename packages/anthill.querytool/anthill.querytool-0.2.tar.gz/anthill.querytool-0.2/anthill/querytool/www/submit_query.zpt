<html>

<head>
 <title>QueryTool</title>
 <link rel="stylesheet" type="text/css" href="/manage_page_style.css" />
</head>

<body bgcolor="#ffffff" link="#000099" alink="#000099" vlink="#000099">
<span tal:replace="structure here/manage_tabs" />

<div class="std-text" style="margin: 0px 10px 0px 10px;" tal:define="linkmanager here/getLinkManagerObject">
<br/>
<p>Here you can submit a live search to the QueryTool. You have the following possibilities:</p>
<ul>
    <li><b>Eq</b>: Test for equality of parameters.<br/>
    Example: <i>Eq('title', 'abraham')</i></li>
    <li><b>And</b>: Combines searches<br/>
    Example: <i>And(Eq('title', 'abraham'), Eq('title', 'moses'))</i></li>
    <li><b>Or</b>: Returns all objects matching one of two conditions<br/>
    Example: <i>Or(Eq('title', 'abraham'), Eq('title', 'moses'))</i></li>
</ul>
<tal:if condition="not:exists:request/showhelp">
<br/><b>&raquo;&nbsp;<a href="?showhelp=1">Show extended documentation</a></b><br/>
</tal:if>
<tal:else condition="exists:request/showhelp">
<p>Get the full documentation from: http://www.dieter.handshake.de/pyprojects/zope/AdvancedQuery.html<br/><br/>Queries are specified by (full blown) Python objects. They are
constructed in the following way:</p>

<table border="1" cellpadding="4">
<tbody><tr>
<th>Expression</th>
<th>printed as</th>
<th>Meaning</th>
</tr>

<tr>
<td><code>Eq(<var>index</var>, <var>value</var>)</code></td>
<td><code><var>index</var> = <var>value</var></code></td>
<td>the documents indexed by <var>index</var> under

<var>value</var></td>
</tr>

<tr>
<td><code>Le(<var>index</var>, <var>value</var>)</code></td>
<td><code><var>index</var> &lt;= <var>value</var></code></td>
<td>the documents indexed by <var>index</var> under a value less or
equal <var>value</var></td>

</tr>

<tr>
<td><code>Ge(<var>index</var>, <var>value</var>)</code></td>
<td><code><var>index</var> &gt;= <var>value</var></code></td>
<td>the documents indexed by <var>index</var> under a value greater
or equal <var>value</var></td>

</tr>

<tr>
<td><code>MatchGlob(<var>index</var>,
<var>pattern</var>)</code></td>
<td><code><var>index</var> =~ <var>pattern</var></code></td>
<td>the documents indexed by <var>index</var> under a value
matching the glob <var>pattern</var>. A glob pattern can contain
wildcards <code>*</code> (matches any sequence of characters) and

<code>?</code> (matches any single character).<br>
 This query type is only supported by most string or unicode based
<code>ManagableIndex</code>es (exception: <code>RangeIndex</code>).
Many <code>TextIndex</code>es support glob matching via the
<code>Eq</code> query.</td>
</tr>

<tr>
<td><code>MatchRegexp(<var>index</var>,
<var>regexp</var>)</code></td>
<td><code><var>index</var> =~~ <var>regexp</var></code></td>
<td>the documents indexed by <var>index</var> under a value
matching the regular expression <var>regexp</var>. See the

<code>re</code> module documentation in the Python Library
Reference, for a description of regular expressions.<br>
 This query type is only supported by most string or unicode based
<code>ManagableIndex</code>es (exception:
<code>RangeIndex</code>).</td>
</tr>

<tr>
<td><code>Between(<var>index</var>, <var>low</var>,

<var>high</var>)</code></td>
<td><code><var>low</var> &lt;= <var>index</var> &lt;=
<var>high</var></code></td>
<td>the documents indexed by <var>index</var> under a value between
<var>low</var> and <var>high</var></td>

</tr>

<tr>
<td><code>In(<var>index</var>, <var>sequence</var>)</code></td>
<td><code><var>index</var> in <var>sequence</var></code></td>
<td>the documents indexed by <var>index</var> under a value in

<var>sequence</var></td>
</tr>

<tr>
<td><code>Generic(<var>index</var>, <var>value</var>)</code></td>
<td><code><var>index</var> ~~ <var>value</var></code></td>
<td>this query type is used to pass any search expression to

<var>index</var> as understood by it. Such search expressions
usually take the form of a dictionary with <code>query</code> as
the most essential key. <code>Generic</code> is necessary to use
the full power of specialized indexes, such as the
<code>level</code> argument for PathIndex searches.</td>
</tr>

<tr>
<td><code>Indexed(<var>index</var>)</code></td>

<td><code>Indexed(<var>index</var>)</code></td>
<td>the documents that are indexed by <var>index</var>. This does
not work for all index types.</td>
</tr>

<tr>
<td><code>~ query</code></td>
<td><code>~ query</code></td>
<td>Not: the documents that do not satisfy <var>query</var></td>

</tr>

<tr>
<td><code><var>query1</var> &amp; <var>query2</var></code></td>
<td><code>(<var>query1</var> &amp; <var>query2</var>)</code></td>
<td>And: the documents satisfying both <var>query1</var> and

<var>query2</var></td>
</tr>

<tr>
<td><code>And(*<var>queries</var>)</code></td>
<td><code>(<var>query1</var> &amp; ... &amp;
<var>queryn</var>)</code></td>

<td>And: the documents satisfying all <var>queries</var>; if
<var>queries</var> is empty, any document satisfies this
<code>And</code> query</td>
</tr>

<tr>
<td><code><var>query1</var> | <var>query2</var></code></td>

<td><code>(<var>query1</var> | <var>query2</var>)</code></td>
<td>Or: the documents satisfying either <var>query1</var> or
<var>query2</var> (or both)</td>
</tr>

<tr>
<td><code>Or(*<var>queries</var>)</code></td>
<td><code>(<var>query1</var> | ... | <var>queryn</var>)</code></td>
<td>Or: the documents satisfying (at least) one of
<var>queries</var>; if <var>queries</var> is empty, no document
satisfies this <code>Or</code> query</td>

</tr>
</tbody></table>

<p><code>And</code> and <code>Or</code> queries are so called
<em>CompositeQuery</em>s. They possess a method
<code>addSubquery(<var>query</var>)</code> to add an additional
subquery.</p>


</tal:else>
<form tal:attributes="action context/absolute_url" name="querysubmit">
  <table cellpadding="2" width="90%">
    <tr><td width="1%"><td>
    <tr><td colspan="2"><div>Query</div>
    <tr><td colspan="2" ><textarea name="querystring" rows="3" cols="150"></textarea>
    <tr><td><input type="submit" value="Submit Query" name="manage_executeStringQuery:method"/><td><input name="manage_deleteHistory:method" type="submit" value="Clear History"/>
  </table>
</form>


<tal:if condition="here/getQueryHistory">
<hr/>
<h5>History</h5>
<br/>

<table border="1" cellpadding="10" style="border-collapse:collapse" width="50%">
<tr tal:repeat="token here/getQueryHistory">
    <td tal:attributes="id string:token${repeat/token/index}" tal:content="token"/>
    <td><a href="#" tal:attributes="href python: '%s/manage_executeStringQuery?querystring=%s' % (here.absolute_url(), token.strip())">Execute</a></td>
    <td><a href="#" tal:attributes="onclick string:document.forms.querysubmit.querystring.value=document.getElementById('token${repeat/token/index}').innerHTML">Copy to present</a></td>
</tr>
</table>
</tal:if>

</div>
</body>
</html>
