
# this environment variable enables support for proxy certificates
# requires OpenSSL >= 0.9.8b
env OPENSSL_ALLOW_PROXY_CERTS=1;

# user/group
user  nobody nogroup;
worker_processes  1;

#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       conf/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] $request '
                      '"$status" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    tcp_nodelay        on;

    #gzip  on;

#    server {
#        listen       80;
#        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

#        location / {
#            root   html;
#            index  index.html index.htm;
#        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
#        error_page   500 502 503 504  /50x.html;
#        location = /50x.html {
#            root   html;
#        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        conf/fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
#    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    # HTTP server
    # HTTP requests are allowed
    server {
        listen       24000;
        server_name  localhost;

        location / {
            proxy_pass  http://localhost:12000;
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size    10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout   90;
            proxy_send_timeout      90;
            proxy_read_timeout      90;
            proxy_buffer_size       4k;
            proxy_buffers           4 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;
        }
    }


    # HTTPS server
    #
    server {
        listen       24010;
        server_name  localhost;


        ssl                  on;
        # this must be adapted
        ssl_certificate      /home/mikael/lab/astrogrid/metadata/icecore/test/cert/server_cert.pem;
        ssl_certificate_key  /home/mikael/lab/astrogrid/metadata/icecore/test/cert/server_key.pem;
        # the cabundle are the allowed ca's concatenated into one file
        # this is necessary to forward the SSL_CLIENT_S_DN
        #ssl_client_certificate /home/mikael/lab/astrogrid/metadata/reaktor/cabundle.crt;
        #ssl_client_certificate /home/mikael/lab/https/cert/cabundle.pem;
        ssl_client_certificate /home/mikael/lab/astrogrid/metadata/icecore/test/cert/cacert.pem;
        ssl_verify_client    on;
        
        ssl_verify_depth     10;

        ssl_session_timeout  5m;

#        ssl_allow_proxy_certs   on;
        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers   on;

        # this is where stellaris is running, 
        # in this example config on port 12000
        location / {
        
            proxy_pass  http://localhost:12000;
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size    10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout   90;
            proxy_send_timeout      90;
            proxy_read_timeout      90;
            proxy_buffer_size       4k;
            proxy_buffers           4 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;
            
            # ensure that the DN is forwarded to the application
            proxy_set_header SSL_CLIENT_S_DN $ssl_client_s_dn;
            #include /home/mikael/lab/astrogrid/metadata/reaktor/nginx_proxy.conf;
        }
    }

}
