Metadata-Version: 1.0
Name: pyopt
Version: 0.71
Summary: Exposing python functions to the command line
Home-page: http://code.google.com/p/pyopt/
Author: ubershmekel
Author-email: ubershmekel@gmail.com
License: UNKNOWN
Description: 
        pyopt version 0.71
        
        A module for command-line options with a pythonic, decorator-centric syntax.
        
        The following example auto-generates help with docstrings, type casting for
        arguments and enforcing argument count:
        
        import pyopt
        import random
        
        expose = pyopt.Exposer()
        
        @expose.args
        def roll_dice(number_of_faces:int, repetitions:int):
        '''
        Roll the dice to see if you are lucky or for general D&D pleasure.
        number_of_faces - the max value of the die.
        repititions - the amount of times to throw the dice.
        '''
        for i in range(repetitions):
        print(random.randint(1, number_of_faces))
        
        
        expose.run()
        
        There are 3 modes of operation:
        1. expose.args - A decorator for positional arguments.
        2. expose.kwargs - A decorator for keyword arguments.
        3. expose.mixed - A decorator for keyword and positional arguments.
        
        Currently known compromises that are open to discussion, e-mail me:
        1. This module was specifically designed with python 3 in mind, certain features
        can be converted to python 2.x, but the awesome ones can't.
        2. Keyword command-line functions require every argument to start with a
        different letter to avoid collisions.
        3. Annotations aren't mandatory, I don't know if this is the right way to go,
        it's an explicity vs convenience issue.
        4. Booleans can't default to false. I couldn't think of a use case for this
        so tell me if you did.
        
        License: whatever, I don't mind. Google Code made me choose so I went with
        the "New BSD". If somebody has a better idea, e-mail, comment or whatnot.
        Hearing from whoever uses this code would be nice, but you really shouldn't
        feel obliged.
        
        Contact me at: ubershmekel at gmail
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Utilities
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Terminals
