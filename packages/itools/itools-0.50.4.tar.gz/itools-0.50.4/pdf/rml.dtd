<!-- $Id: rml.dtd 21048 2006-05-10 12:58:01Z rgbecker $ -->
<!--
DTD for Report Markup Language
*ALWAYS* CHANGE THIS WHEN A NEW VERSION OF THE RML DTD
IS RELEASED
-->
<!-- These are heavily used in the documentatation.         -->
<!ENTITY % MajorVersionNumber "1">
<!ENTITY % MinorVersionNumber "1">
<!ENTITY % VersionNumber "%MajorVersionNumber;.%MinorVersionNumber;">
<!-- this is an entity for use outside the DTD -->
<!ENTITY RMLId "$URL: https://www.reportlab.co.uk/svn/private/trunk/rlextra/rml2pdf/rml.dtd $ $Revision$ $Date: 2006-05-10 13:58:01 +0100 (Wed, 10 May 2006) $">
<!ENTITY RMLVersionNumber " %VersionNumber;">
<!ENTITY RMLVersionString "RML Version">
<!ENTITY RMLDTDFileName "rml.dtd">
<!ENTITY % RMLDTDFileName "rml.dtd">
<!-- These entities provide support for including dynamic RML.  In this DTD they evaluate to
nothing.  In Dynamic RML they are replaced with listings of the logic tags, thereby allowing that
DTD to inherit this one easily.-->
<!ENTITY % ACQUIREQM "">
<!ENTITY % LOGIC_EXPR "">
<!ENTITY % LOGIC_GRAPHICS "">
<!ENTITY % LOGIC_BLOCK "">
<!ENTITY % LOGIC_INLINE "">
<!ENTITY % LOGIC_TABLE "">

<!ENTITY % LOGTAGS "(log | debug | info | warn | error | critical)*">


<!ELEMENT document (%ACQUIREQM; docinit?, ((template, stylesheet, story) | (stylesheet, pageInfo?, (pageDrawing)+)))>
<!ATTLIST document
	filename CDATA #REQUIRED
	compression (0 | 1 | default) #IMPLIED
	invariant (0 | 1 | default) #IMPLIED
	debug (0 | 1) #IMPLIED
>
<!-- pageInfo, used to specify canvas parameters for simple docs -->
<!ELEMENT pageInfo EMPTY>
<!ATTLIST pageInfo
	pageSize CDATA #IMPLIED
>
<!-- Use 'name' for items to be put into headers/footers -->
<!-- eg <name name="chapterheading" value="chapter 5">       (also see NamedString        -->
<!ELEMENT name EMPTY>
<!ATTLIST name
	id CDATA #REQUIRED
	value CDATA #REQUIRED
	type CDATA "string"
>
<!-- 'alias' creates a new name for an existing object   -->
<!-- eg can be used to have duplicate names for styles   -->
<!-- THIS NEEDS SCOPING TO BE REALLY USEFUL              -->
<!ELEMENT alias EMPTY>
<!ATTLIST alias
	id CDATA #REQUIRED
	value CDATA #REQUIRED
>
<!-- This is a generic key-value parameter thingy used in
several contexts. -->
<!ELEMENT param (#PCDATA)>
<!ATTLIST param
	name CDATA #REQUIRED
>
<!-- this yanks information from 'name' -->
<!ELEMENT getName EMPTY>
<!ATTLIST getName
	id CDATA #REQUIRED
	default CDATA #IMPLIED
>
<!ELEMENT color EMPTY>
<!ATTLIST color
	id CDATA #REQUIRED
	RGB CDATA #IMPLIED
	CMYK CDATA #IMPLIED
	alias CDATA #IMPLIED
>
<!ELEMENT length EMPTY>
<!ATTLIST length
	id CDATA #REQUIRED
	value CDATA #REQUIRED
>
<!--
	registerType1Face - read in type 1 font face information for global use
-->
<!ELEMENT registerType1Face EMPTY>
<!ATTLIST registerType1Face
	afmFile CDATA #REQUIRED
	pfbFile CDATA #REQUIRED
>
<!--
	registerFont - associate a font name to a face combined with an encoding
-->
<!ELEMENT registerFont EMPTY>
<!ATTLIST registerFont
	name CDATA #REQUIRED
	faceName CDATA #REQUIRED
	encName CDATA #IMPLIED
>
<!ELEMENT registerCidFont EMPTY>
<!ATTLIST registerCidFont
	faceName CDATA #REQUIRED
	encName CDATA #IMPLIED
>
<!ELEMENT registerTTFont EMPTY>
<!ATTLIST registerTTFont
	faceName CDATA #REQUIRED
	fileName CDATA #REQUIRED
>
<!ELEMENT pageNumber EMPTY>
<!ELEMENT template (pageTemplate*)>
<!ATTLIST template
	pageSize CDATA #IMPLIED
	leftMargin CDATA #IMPLIED
	rightMargin CDATA #IMPLIED
	topMargin CDATA #IMPLIED
	bottomMargin CDATA #IMPLIED
	showBoundary CDATA #IMPLIED
	allowSplitting CDATA #IMPLIED
	firstPageTemplate CDATA #IMPLIED
	title CDATA "(untitled)"
	author CDATA "(unauthored)"
	rotation CDATA #IMPLIED
>
<!ELEMENT pageTemplate ((pageGraphics, pageGraphics?)?, frame*)>
<!ATTLIST pageTemplate
	id CDATA #REQUIRED
	pageSize CDATA #IMPLIED
	rotation CDATA #IMPLIED
>
<!-- DRAWINGOPS is for use with pageGraphics -->
<!--
###########################################################################
# Highly experimental stuff:
# added below:
#   - textBox
#   - barCode
###########################################################################
-->
<!ENTITY % DRAWINGOPS "(saveState | restoreState | drawString | drawRightString | drawCentredString | drawCenteredString
	| ellipse | alias | catchForms | outlineAdd | namedString | bookmarkPage | bookmark
	| circle | rect | fill | stroke | setFont | setFontSize | image
	| pageGraphics | place | form | doForm | plugInGraphic
	| scale | translate | rotate | skew | transform
	| grid | path | lines | curves | lineMode
	| textBox | barCode | checkBox | letterBoxes | textAnnotation | textField %LOGIC_GRAPHICS;)*">
<!-- A form is a stored and named bunch of graphical operations
     It will only be "evaluated" once, so any page numbers or names
     in it will become fixed after the first occurrence (if it occurs
     in another form or in a pageGraphic, for example)
-->
<!ELEMENT form %DRAWINGOPS;>
<!ATTLIST form
	name CDATA #REQUIRED
>
<!-- pageGraphics provide for a graphic backdrop for a WHOLE page-->
<!ELEMENT pageGraphics %DRAWINGOPS;>
<!ELEMENT path (#PCDATA | moveto | curvesto)*>
<!ATTLIST path
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	fill CDATA #IMPLIED
	stroke CDATA #IMPLIED
	close CDATA #IMPLIED
>
<!ELEMENT moveto (#PCDATA)>
<!ELEMENT curvesto (#PCDATA)>
<!ELEMENT rotate EMPTY>
<!ATTLIST rotate
	degrees CDATA #REQUIRED
>
<!ELEMENT skew EMPTY>
<!ATTLIST skew
	alpha CDATA #REQUIRED
	beta CDATA #REQUIRED
>
<!ELEMENT lineMode EMPTY>
<!ATTLIST lineMode
	join CDATA #IMPLIED
	cap CDATA #IMPLIED
	width CDATA #IMPLIED
	miterLimit CDATA #IMPLIED
	dash CDATA #IMPLIED
>
<!ELEMENT lines (#PCDATA)>
<!ELEMENT transform (#PCDATA)>
<!ELEMENT curves (#PCDATA)>
<!ELEMENT scale EMPTY>
<!ATTLIST scale
	sx CDATA #IMPLIED
	sy CDATA #IMPLIED
>
<!-- 	catchForms provides direct support for PageCatcher form storage files.
	It is a drawing operation.  It requires pageCatcher module on the python
	path.

	Example usage:

	<pageDrawing>
	 <catchForms storageFile="storage.data"/> or <catchForms pdfFile="aaa.pdf" pfx="PF" pages="all"/>
	 <doForm name="PF0"/>
	</pageDrawing>

	(if storage.data is a pageCatcher storage file containing form "PF0").
	use pdfFile to restore direct from a pdf file
	pfx is prefix for pdfFile forms
	pages is space separated pdfFile pages we use or "all"
-->
<!ELEMENT catchForms EMPTY>
<!ATTLIST catchForms
	storageFile CDATA #IMPLIED
	pdfFile CDATA #IMPLIED
	pfx CDATA #IMPLIED
	pages CDATA #IMPLIED
>
<!-- outlineAdd adds an outline entry.  It may occur in either graphics
     or in a story.  The level specifies how deep in the outline the
     entry appears. The default level is 0.

     Note: in order to add a level 3 outline entry the previous outline
     entry must be at least level 2 (2,3,4...).  That is to say, you can
     "move back" any number of levels, but you can only "move forward" one level
     at a time.

     "closed" if set hides any children of this outline entry by default.
     (boolean).

EXAMPLE:

<outlineAdd>First outline entry</outlineAdd>
<outlineAdd level="1">sub entry</outlineAdd>
<outlineAdd closed="true">Second outline entry 2</outlineAdd>
<outlineAdd level="1">sub entry 2</outlineAdd>

-->
<!ENTITY % STRINGFORMS "(#PCDATA | name | getName | pageNumber | evalString %LOGIC_INLINE;)*">
<!ELEMENT outlineAdd %STRINGFORMS;>
<!ATTLIST outlineAdd
	level CDATA #IMPLIED
	closed CDATA #IMPLIED
	name CDATA #IMPLIED
	newBookmark (yes | no | 0 | 1 | none) #IMPLIED
>
<!ELEMENT bookmarkPage EMPTY>
<!ATTLIST bookmarkPage
	name CDATA #REQUIRED
	fit (XYZ|Fit|FitH|FitV|FitR) #IMPLIED
	top CDATA #IMPLIED
	bottom CDATA #IMPLIED
	left CDATA #IMPLIED
	right CDATA #IMPLIED
	zoom CDATA #IMPLIED
>
<!ELEMENT bookmark EMPTY>
<!ATTLIST bookmark
	name CDATA #REQUIRED
	x CDATA #IMPLIED
	y CDATA #IMPLIED
>
<!ELEMENT translate EMPTY>
<!ATTLIST translate
	dx CDATA #IMPLIED
	dy CDATA #IMPLIED
>
<!ELEMENT grid EMPTY>
<!ATTLIST grid
	xs CDATA #IMPLIED
	ys CDATA #IMPLIED
>
<!ELEMENT join EMPTY>
<!ATTLIST join
	type CDATA #REQUIRED
>
<!ELEMENT image EMPTY>
<!ATTLIST image
	file CDATA #REQUIRED
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	width CDATA #IMPLIED
	height CDATA #IMPLIED
	inline CDATA #IMPLIED
	transparency_mask CDATA "auto"
	preserveAspectRatio (yes | no | 0 | 1) #IMPLIED
	showBoundary (yes | no | 0 | 1) #IMPLIED

>
<!ELEMENT setFont EMPTY>
<!ATTLIST setFont
	name CDATA #REQUIRED
	size CDATA #REQUIRED
	leading CDATA #IMPLIED
>
<!ELEMENT setFontSize EMPTY>
<!ATTLIST setFontSize
	size CDATA #IMPLIED
	leading CDATA #IMPLIED
>
<!ELEMENT stroke EMPTY>
<!ATTLIST stroke
	color CDATA #REQUIRED
	width CDATA #IMPLIED
>
<!ELEMENT fill EMPTY>
<!ATTLIST fill
	color CDATA #REQUIRED
>
<!ELEMENT rect EMPTY>
<!ATTLIST rect
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	width CDATA #REQUIRED
	height CDATA #REQUIRED
	fill CDATA #IMPLIED
	stroke CDATA #IMPLIED
	round CDATA #IMPLIED
	href CDATA #IMPLIED
	destination CDATA #IMPLIED
>
<!ELEMENT circle EMPTY>
<!ATTLIST circle
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	radius CDATA #REQUIRED
	fill CDATA #IMPLIED
	stroke CDATA #IMPLIED
>
<!ELEMENT ellipse EMPTY>
<!ATTLIST ellipse
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	width CDATA #REQUIRED
	height CDATA #REQUIRED
	fill CDATA #IMPLIED
	stroke CDATA #IMPLIED
>

<!ELEMENT textBox %STRINGFORMS;>
<!ATTLIST textBox
	style CDATA ""
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	boxWidth CDATA #REQUIRED
	boxHeight CDATA #REQUIRED
	labelFontName CDATA #IMPLIED
	labelFontSize CDATA #IMPLIED
	labelTextColor CDATA #IMPLIED
	labelOffsetX CDATA #IMPLIED
	labelOffsetY CDATA #IMPLIED
	boxStrokeColor CDATA #IMPLIED
	boxFillColor CDATA #IMPLIED
	textColor CDATA #IMPLIED
	lineWidth CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	align CDATA #IMPLIED
	vAlign CDATA #IMPLIED
	shrinkToFit CDATA #IMPLIED
	label CDATA #IMPLIED
	borderSpec CDATA #IMPLIED
>
<!ELEMENT checkBox EMPTY>
<!ATTLIST checkBox
	style CDATA ""
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	labelFontName CDATA #IMPLIED
	labelFontSize CDATA #IMPLIED
	labelTextColor CDATA #IMPLIED
	boxWidth CDATA #IMPLIED
	boxHeight CDATA #IMPLIED
	checkStrokeColor CDATA #IMPLIED
	boxStrokeColor CDATA #IMPLIED
	boxFillColor CDATA #IMPLIED
	lineWidth CDATA #IMPLIED
	line1 CDATA #IMPLIED
	line2 CDATA #IMPLIED
	line3 CDATA #IMPLIED
	checked CDATA #IMPLIED
	bold CDATA #IMPLIED
	graphicOn CDATA #IMPLIED
	graphicOff CDATA #IMPLIED
>
<!ELEMENT letterBoxes %STRINGFORMS;>
<!ATTLIST letterBoxes
	style CDATA ""
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	count CDATA #REQUIRED
	label CDATA #IMPLIED
	labelFontName CDATA #IMPLIED
	labelFontSize CDATA #IMPLIED
	labelTextColor CDATA #IMPLIED
	labelOffsetX CDATA #IMPLIED
	labelOffsetY CDATA #IMPLIED
	boxWidth CDATA #IMPLIED
	boxGap CDATA #IMPLIED
	boxHeight CDATA #IMPLIED
	combHeight CDATA #IMPLIED
	boxStrokeColor CDATA #IMPLIED
	boxFillColor CDATA #IMPLIED
	textColor CDATA #IMPLIED
	lineWidth CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
>

<!ELEMENT barCode %STRINGFORMS;>
<!--
contents string the value to encode.

xdim float, typical .0075 X-Dimension, or width of the smallest element
ratio float, typical 2.2 The ratio of wide elements to narrow elements.
gap float or absent width of intercharacter gap
height float, see default below):
Height of the symbol.
checksum Whether to compute and include the check digit
bearers float, in units of xdim. typical 3.0 Height of bearer bars
quiet bool: Whether to include quiet zones in the symbol.
lquiet float Quiet zone size to left of code
rquiet float Quiet zone size to right left of code
-->
<!ATTLIST barCode
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	code CDATA #REQUIRED
	xdim CDATA #IMPLIED
	ratio CDATA #IMPLIED
	gap CDATA #IMPLIED
	height CDATA #IMPLIED
	checksum (yes | no | 0 | 1 | none) #IMPLIED
	bearers CDATA #IMPLIED
	quiet (yes | no | 0 | 1 | none) #IMPLIED
	lquiet CDATA #IMPLIED
	rquiet CDATA #IMPLIED
>



<!-- a plugInGraphic identifies a function (callable) in a module which
   takes a canvas and a data string as arguments and presumably draws
   something on the canvas using information in the data string: eg

	<plugInGraphic module="mymodule" function="myfunction>data string</plugInGraphic>

   when executed results in effectively the execution sequence:

	import mymodule
	mymodule.myfunction(canvas, "data string")

   using the current canvas object
-->
<!ELEMENT plugInGraphic %STRINGFORMS;>
<!ATTLIST plugInGraphic
	baseDir CDATA #IMPLIED
	module CDATA #REQUIRED
	function CDATA #REQUIRED
>
<!-- a plugInFlowable identifies a function (callable) in a module which
   takes a canvas data string as an argument and returns a flowable
   object (in the platypus sense):

	<plugInFlowable module="mymodule" function="myfunction>data string</plugInGraphic>

   when executed results in effectively the execution sequence:

	import mymodule
	flowable = mymodule.myfunction("data string")
	story.append(flowable)

   using the current canvas object
-->
<!ELEMENT plugInFlowable %STRINGFORMS;>
<!ATTLIST plugInFlowable
	baseDir CDATA #IMPLIED
	module CDATA #REQUIRED
	function CDATA #REQUIRED
>
<!ELEMENT drawing (caption?, (param | widget)*)>
<!ATTLIST drawing
	baseDir CDATA #IMPLIED
	module CDATA #REQUIRED
	function CDATA #REQUIRED
	hAlign CDATA #IMPLIED
	showBoundary CDATA #IMPLIED
>
<!ELEMENT figure (para?, drawing)>
<!ATTLIST figure
	showBoundary CDATA #IMPLIED
	shrinkToFit CDATA #IMPLIED
	growToFit CDATA #IMPLIED
	scaleFactor CDATA #IMPLIED
>
<!ELEMENT widget (#PCDATA)>
<!ATTLIST widget
	baseDir CDATA #IMPLIED
	module CDATA #REQUIRED
	function CDATA #REQUIRED
	name CDATA #IMPLIED
	initargs CDATA #IMPLIED
>
<!-- execute a previously defined form (add translate option?) -->
<!ELEMENT doForm EMPTY>
<!ATTLIST doForm
	name CDATA #REQUIRED
>
<!ELEMENT saveState EMPTY>
<!ELEMENT restoreState EMPTY>
<!ELEMENT drawString %STRINGFORMS;>
<!ATTLIST drawString
	x CDATA #REQUIRED
	y CDATA #REQUIRED
>
<!ELEMENT drawRightString %STRINGFORMS;>
<!ATTLIST drawRightString
	x CDATA #REQUIRED
	y CDATA #REQUIRED
>
<!--for brits -->
<!ELEMENT drawCentredString %STRINGFORMS;>
<!ATTLIST drawCentredString
	x CDATA #REQUIRED
	y CDATA #REQUIRED
>
<!--for americans -->
<!ELEMENT drawCenteredString %STRINGFORMS;>
<!ATTLIST drawCenteredString
	x CDATA #REQUIRED
	y CDATA #REQUIRED
>
<!-- named string <namedString chapter1start>chapter 1 starts at <pageNumber/></namedString>
     evaluates to the empty string.
  -->
<!ELEMENT namedString %STRINGFORMS;>
<!ATTLIST namedString
	id CDATA #REQUIRED
	type CDATA "string"
	default CDATA #IMPLIED
>
<!-- eval string <evalString><pageNumber/> - <getName id="prefixEnd"/></namedString>
     evaluates to the result of evaluation. (security problem: should be disabled in insecure environment)
  -->
<!ELEMENT evalString %STRINGFORMS;>
<!ATTLIST evalString
	imports CDATA #IMPLIED
	default CDATA #IMPLIED
>
<!--
<textAnnotation><param name="Rect">0,0,1,1</param><param name="F">3</param><param name="escape">6</param>This is the contents
of the text annotation
</textAnnotation>
-->
<!ELEMENT textAnnotation (#PCDATA | param)*>
<!ELEMENT frame EMPTY>
<!ATTLIST frame
	id CDATA #REQUIRED
	x1 CDATA #REQUIRED
	y1 CDATA #REQUIRED
	width CDATA #REQUIRED
	height CDATA #REQUIRED
	overlapAttachedSpace (0 | 1) #IMPLIED
>
<!ELEMENT textField (#PCDATA | param)*>
<!--by default we take the values from the attributes which will all have sensible defaults
but we allow <param> tags to also be used

it is an error to define the attributes twice
This approach allows us to have expressions inside the param values which may be useful
-->
<!ATTLIST textField
	id CDATA #IMPLIED
	value CDATA #IMPLIED
	x CDATA #IMPLIED
	y CDATA #IMPLIED
	width CDATA #IMPLIED
	height CDATA #IMPLIED
	maxlen CDATA #IMPLIED
	multiline CDATA #IMPLIED
>
<!ELEMENT stylesheet ((initialize?, (paraStyle | boxStyle | blockTableStyle)*)*)>
<!ELEMENT initialize ((alias | name | color | length)*)>
<!-- In the following elements, "block" refers to a square or rectangular region of
a table - not necessarily a single cell. The table is called a "blockTable" to keep
it consistent with all the tags that deal with what appears inside it -->
<!ELEMENT blockTableStyle (blockSpan | blockFont | blockLeading | blockTextColor | blockAlignment | blockLeftPadding | blockRightPadding | blockBottomPadding | blockTopPadding | blockBackground | blockValign | lineStyle)*>
<!ATTLIST blockTableStyle
	id CDATA #REQUIRED
	parent CDATA #IMPLIED
	keepWithNext CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
>
<!ELEMENT lineStyle EMPTY>
<!ATTLIST lineStyle
	kind CDATA #REQUIRED
	thickness CDATA #IMPLIED
	colorName CDATA #REQUIRED
	cap CDATA #IMPLIED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
	count CDATA #IMPLIED
	space CDATA #IMPLIED
>
<!ELEMENT blockFont EMPTY>
<!ATTLIST blockFont
	name CDATA #REQUIRED
	size CDATA #IMPLIED
	leading CDATA #IMPLIED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockTextColor EMPTY>
<!ATTLIST blockTextColor
	colorName CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockLeading EMPTY>
<!ATTLIST blockLeading
	length CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockAlignment EMPTY>
<!ATTLIST blockAlignment
	value CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockValign EMPTY>
<!ATTLIST blockValign
	value CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockLeftPadding EMPTY>
<!ATTLIST blockLeftPadding
	length CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockRightPadding EMPTY>
<!ATTLIST blockRightPadding
	length CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockBottomPadding EMPTY>
<!ATTLIST blockBottomPadding
	length CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockTopPadding EMPTY>
<!ATTLIST blockTopPadding
	length CDATA #REQUIRED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockBackground EMPTY>
<!ATTLIST blockBackground
	colorName CDATA #IMPLIED
	colorsByRow CDATA #IMPLIED
	colorsByCol CDATA #IMPLIED
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT blockSpan EMPTY>
<!ATTLIST blockSpan
	start CDATA #IMPLIED
	stop CDATA #IMPLIED
>
<!ELEMENT paraStyle EMPTY>
<!ATTLIST paraStyle
	name CDATA #REQUIRED
	alias CDATA #IMPLIED
	parent CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	leading CDATA #IMPLIED
	leftIndent CDATA #IMPLIED
	rightIndent CDATA #IMPLIED
	firstLineIndent CDATA #IMPLIED
	alignment CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
	bulletFontName CDATA #IMPLIED
	bulletFontSize CDATA #IMPLIED
	bulletIndent CDATA #IMPLIED
	textColor CDATA #IMPLIED
	backColor CDATA #IMPLIED
	pageBreakBefore CDATA #IMPLIED
	frameBreakBefore CDATA #IMPLIED
	keepWithNext CDATA #IMPLIED
	wordWrap (normal | CJK) #IMPLIED
>
<!ELEMENT boxStyle EMPTY>
<!ATTLIST boxStyle
	name CDATA #REQUIRED
	alias CDATA #IMPLIED
	parent CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	alignment CDATA #IMPLIED
	textColor CDATA #IMPLIED
	labelFontName CDATA #IMPLIED
	labelFontSize CDATA #IMPLIED
	labelAlignment CDATA #IMPLIED
	labelTextColor CDATA #IMPLIED
	boxFillColor CDATA #IMPLIED
	boxStrokeColor CDATA #IMPLIED
	cellWidth CDATA #IMPLIED
	cellHeight CDATA #IMPLIED
	borderSpec CDATA #IMPLIED
>
<!ENTITY % GENERICFLOWABLES "para | blockTable | title | h1 | h2 | h3 | spacer | ul | ol | dl
		| illustration | storyPlace | pre | xpre | plugInFlowable | drawing | outlineAdd | namedString | bookmarkPage | bookmark | name | hr | indent | fixedSize | keepInFrame | imageAndFlowables
		| pto %LOGIC_BLOCK;">
<!--anything which can go in the story-->
<!ENTITY % TOPLEVEL "( %GENERICFLOWABLES; | alias
		| nextPage | nextFrame | setNextFrame | setNextTemplate | condPageBreak | includePdfPages
		| log | warn | debug | info | error | critical)*">
<!--anything which can go in the story plus raw text - used in table cells-->
<!ENTITY % TOPLEVEL2 "(#PCDATA %LOGIC_EXPR; | %GENERICFLOWABLES;)*">
<!-- place places a flowable inside a pageGraphic or illustration -->
<!ELEMENT place (%GENERICFLOWABLES;)*>
<!ATTLIST place
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	width CDATA #REQUIRED
	height CDATA #REQUIRED
>
<!ELEMENT storyPlace (%GENERICFLOWABLES;)*>
<!ATTLIST storyPlace
	x CDATA #REQUIRED
	y CDATA #REQUIRED
	width CDATA #REQUIRED
	height CDATA #REQUIRED
	origin (page | frame | local) #IMPLIED
>
<!ELEMENT indent (%TOPLEVEL;)*>
<!ATTLIST indent
	left CDATA #IMPLIED
	right CDATA #IMPLIED
>

<!ELEMENT fixedSize (%TOPLEVEL;)*>
<!ATTLIST fixedSize
	width CDATA #IMPLIED
	height CDATA #IMPLIED
>
<!ELEMENT keepInFrame (%TOPLEVEL;)*>
<!ATTLIST keepInFrame
	frame CDATA #IMPLIED
	maxWidth CDATA #IMPLIED
	maxHeight CDATA #IMPLIED
	mergeSpace CDATA #IMPLIED
	onOverflow (error | overflow | shrink | truncate) #IMPLIED
	id CDATA #IMPLIED
>
<!ELEMENT imageAndFlowables (%TOPLEVEL;)*>
<!ATTLIST imageAndFlowables
	imageName CDATA #REQUIRED
	imageWidth CDATA #IMPLIED
	imageHeight CDATA #IMPLIED
	imageMask CDATA "auto"
	imageLeftPadding CDATA #IMPLIED
	imageRightPadding CDATA #IMPLIED
	imageTopPadding CDATA #IMPLIED
	imageBottomPadding CDATA #IMPLIED
	imageSide (left|right) #IMPLIED
>
<!ELEMENT pto_trailer (%TOPLEVEL;)*>
<!ELEMENT pto_header (%TOPLEVEL;)*>
<!ELEMENT pto (pto_trailer?, pto_header?, (%TOPLEVEL;)*)>
<!ELEMENT nextPage EMPTY>
<!ATTLIST nextPage
	slow (yes | no | 0 | 1) #IMPLIED
>
<!ELEMENT nextFrame EMPTY>
<!ATTLIST nextFrame name CDATA #IMPLIED>
<!ELEMENT setNextFrame EMPTY>
<!ATTLIST setNextFrame name CDATA #REQUIRED>

<!ELEMENT setNextTemplate EMPTY>
<!ATTLIST setNextTemplate
	name CDATA #REQUIRED
>
<!-- conditional page break -->
<!ELEMENT condPageBreak EMPTY>
<!ATTLIST condPageBreak
	height CDATA #REQUIRED
>
<!-- An illustration differs from pageGraphics in that is is
contained by a 'box' of space in the same way that an illustration
in a book is. It can be anywhere on a page - unlike pageGraphics
which must start at the origin -->
<!ELEMENT illustration %DRAWINGOPS;>
<!ATTLIST illustration
	height CDATA #REQUIRED
	width CDATA #REQUIRED
	align CDATA #IMPLIED
>
<!ELEMENT story %TOPLEVEL;>
<!ELEMENT spacer EMPTY>
<!ATTLIST spacer
	length CDATA #REQUIRED
	width CDATA #IMPLIED
>
<!ENTITY % PARASTUFF "(#PCDATA | para | ul | ol | dl | b | a | u | greek | font | super | sub | pageNumber | evalString
			| seq | seqDefault | seqReset | seqFormat | seqChain | name | getName | i | bullet | unichar
			| link | setLink %LOGIC_INLINE;
			)*">
<!ELEMENT includePdfPages EMPTY>
<!ATTLIST includePdfPages
	filename CDATA #REQUIRED
	pages CDATA #IMPLIED
	outlineText CDATA #IMPLIED
	outlineLevel CDATA #IMPLIED
	outlineClosed CDATA #IMPLIED
	leadingFrame (yes | no | 0 | 1) #IMPLIED
>
<!ELEMENT pre %STRINGFORMS;>
<!ATTLIST pre
	style CDATA "pre.defaultStyle"
>
<!ELEMENT xpre %PARASTUFF;>
<!ATTLIST xpre
	style CDATA "pre.defaultStyle"
>
<!-- html style list constructs -->
<!ELEMENT dl ((dt | dd)*)>
<!-- for now term cannot contain subtags -->
<!ELEMENT dt (#PCDATA)>
<!ELEMENT dd %PARASTUFF;>
<!ATTLIST dl
	type CDATA "disc"
	style CDATA "para.defaultStyle"
	bulletText CDATA #IMPLIED
	alignment CDATA #IMPLIED
	bulletColor CDATA #IMPLIED
	bulletFontName CDATA #IMPLIED
	bulletFontSize CDATA #IMPLIED
	bulletIndent CDATA #IMPLIED
	firstLineIndent CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	leading CDATA #IMPLIED
	leftIndent CDATA #IMPLIED
	rightIndent CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	textColor CDATA #IMPLIED
>
<!ELEMENT ul (li*)>
<!ATTLIST ul
	type CDATA "disc"
	style CDATA "para.defaultStyle"
	bulletText CDATA #IMPLIED
	alignment CDATA #IMPLIED
	bulletColor CDATA #IMPLIED
	bulletFontName CDATA #IMPLIED
	bulletFontSize CDATA #IMPLIED
	bulletIndent CDATA #IMPLIED
	firstLineIndent CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	leading CDATA #IMPLIED
	leftIndent CDATA #IMPLIED
	rightIndent CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	textColor CDATA #IMPLIED
>
<!ELEMENT ol (li*)>
<!ATTLIST ol
	type CDATA "1"
	style CDATA "para.defaultStyle"
	bulletText CDATA #IMPLIED
	alignment CDATA #IMPLIED
	bulletColor CDATA #IMPLIED
	bulletFontName CDATA #IMPLIED
	bulletFontSize CDATA #IMPLIED
	bulletIndent CDATA #IMPLIED
	firstLineIndent CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	leading CDATA #IMPLIED
	leftIndent CDATA #IMPLIED
	rightIndent CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	textColor CDATA #IMPLIED
>
<!ELEMENT li %PARASTUFF;>
<!ATTLIST li
	bulletText CDATA #IMPLIED
	alignment CDATA #IMPLIED
	bulletColor CDATA #IMPLIED
	bulletFontName CDATA #IMPLIED
	bulletFontSize CDATA #IMPLIED
	bulletIndent CDATA #IMPLIED
	firstLineIndent CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	leading CDATA #IMPLIED
	leftIndent CDATA #IMPLIED
	rightIndent CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	textColor CDATA #IMPLIED
>
<!ELEMENT para %PARASTUFF;>
<!ATTLIST para
	style CDATA "para.defaultStyle"
	bulletText CDATA #IMPLIED
	alignment CDATA #IMPLIED
	bulletColor CDATA #IMPLIED
	bulletFontName CDATA #IMPLIED
	bulletFontSize CDATA #IMPLIED
	bulletIndent CDATA #IMPLIED
	firstLineIndent CDATA #IMPLIED
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	leading CDATA #IMPLIED
	leftIndent CDATA #IMPLIED
	rightIndent CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	textColor CDATA #IMPLIED
>
<!ELEMENT bullet %PARASTUFF;>
<!ATTLIST bullet
	bulletColor CDATA #IMPLIED
	bulletFontName CDATA #IMPLIED
	bulletFontSize CDATA #IMPLIED
	bulletIndent CDATA #IMPLIED
>
<!ELEMENT b %PARASTUFF;>
<!-- u - underline - should add colors etc. -->
<!ELEMENT u %PARASTUFF;>
<!-- a href html style linking -->
<!ELEMENT a %PARASTUFF;>
<!ATTLIST a
	href CDATA #REQUIRED
	color CDATA #IMPLIED
>
<!-- link - internal pdf link -->
<!ELEMENT link %PARASTUFF;>
<!ATTLIST link
	destination CDATA #REQUIRED
	color CDATA #IMPLIED
>
<!-- setLink - define the link (Really only set at first point) -->
<!ELEMENT setLink %PARASTUFF;>
<!ATTLIST setLink
	destination CDATA #REQUIRED
	color CDATA #IMPLIED
>
<!ELEMENT i %PARASTUFF;>
<!ELEMENT font %PARASTUFF;>
<!ATTLIST font
	face CDATA #IMPLIED
	color CDATA #IMPLIED
	size CDATA #IMPLIED
>
<!ELEMENT greek %PARASTUFF;>
<!ELEMENT super %PARASTUFF;>
<!ELEMENT sub %PARASTUFF;>
<!ELEMENT seq EMPTY>
<!ATTLIST seq
	id CDATA #IMPLIED
	template CDATA #IMPLIED
>
<!-- seqdefault and seqreset are used in paragraph numbering -->
<!-- or any sequence of consecutive numbers                  -->
<!ELEMENT seqDefault EMPTY>
<!ATTLIST seqDefault
	id CDATA #REQUIRED
>
<!ELEMENT seqReset EMPTY>
<!ATTLIST seqReset
	id CDATA #IMPLIED
>
<!ELEMENT seqChain EMPTY>
<!ATTLIST seqChain
	order NMTOKENS #IMPLIED
>
<!ELEMENT seqFormat EMPTY>
<!ATTLIST seqFormat
	id CDATA #IMPLIED
	value (1 | i | I | a | A) #IMPLIED
>
<!ELEMENT unichar EMPTY>
<!ATTLIST unichar
	name CDATA #IMPLIED
	code CDATA #IMPLIED
>
<!ELEMENT title %PARASTUFF;>
<!ATTLIST title
	style CDATA "h1.defaultStyle"
>
<!ELEMENT h1 %PARASTUFF;>
<!ATTLIST h1
	style CDATA "h1.defaultStyle"
>
<!ELEMENT h2 %PARASTUFF;>
<!ATTLIST h2
	style CDATA "h2.defaultStyle"
>
<!ELEMENT h3 %PARASTUFF;>
<!ATTLIST h3
	style CDATA "h3.defaultStyle"
>
<!ELEMENT hr EMPTY>
<!ATTLIST hr
	lineCap (butt | round | square) #IMPLIED
	width CDATA #IMPLIED
	thickness CDATA #IMPLIED
	align CDATA #IMPLIED
	color CDATA #IMPLIED
	spaceBefore CDATA #IMPLIED
	spaceAfter CDATA #IMPLIED
	dash CDATA #IMPLIED
>
<!-- AND SIMILARLY FOR H2, ETC (LATER) -->
<!ELEMENT tr (td*)>
<!ELEMENT td %TOPLEVEL2;>
<!ELEMENT bulkData (#PCDATA)>
<!ATTLIST bulkData
	stripBlock (yes | no) #IMPLIED
	stripLines (yes | no) #IMPLIED
	stripFields (yes | no) #IMPLIED
	fieldDelim CDATA #IMPLIED
	recordDelim CDATA #IMPLIED
>
<!ELEMENT excelData EMPTY>
<!ATTLIST excelData
       fileName CDATA #REQUIRED
       sheetName CDATA #REQUIRED
       range CDATA #IMPLIED
       rangeName CDATA #IMPLIED
>
<!ENTITY % TABLEROWMODEL "(tr %LOGIC_TABLE;)*">
<!ELEMENT blockTable (blockTableStyle?, (bulkData | excelData | (%TABLEROWMODEL;)*))>
<!ATTLIST blockTable
	style CDATA #IMPLIED
	colWidths CDATA #IMPLIED
	rowHeights CDATA #IMPLIED
	splitByRow CDATA #IMPLIED
	repeatRows CDATA #IMPLIED
	repeatCols CDATA #IMPLIED
	align CDATA #IMPLIED
	vAlign CDATA #IMPLIED
>
<!ATTLIST td
	fontName CDATA #IMPLIED
	fontSize CDATA #IMPLIED
	fontColor CDATA #IMPLIED
	leading CDATA #IMPLIED
	leftPadding CDATA #IMPLIED
	rightPadding CDATA #IMPLIED
	topPadding CDATA #IMPLIED
	bottomPadding CDATA #IMPLIED
	background CDATA #IMPLIED
	align CDATA #IMPLIED
	vAlign CDATA #IMPLIED
	lineBelowThickness CDATA #IMPLIED
	lineBelowColor CDATA #IMPLIED
	lineBelowCap (butt | round | square) #IMPLIED
	lineBelowCount CDATA #IMPLIED
	lineBelowSpace CDATA #IMPLIED
	lineAboveThickness CDATA #IMPLIED
	lineAboveColor CDATA #IMPLIED
	lineAboveCap (butt | round | square) #IMPLIED
	lineAboveCount CDATA #IMPLIED
	lineAboveSpace CDATA #IMPLIED
	lineLeftThickness CDATA #IMPLIED
	lineLeftColor CDATA #IMPLIED
	lineLeftCap (butt | round | square) #IMPLIED
	lineLeftCount CDATA #IMPLIED
	lineLeftSpace CDATA #IMPLIED
	lineRightThickness CDATA #IMPLIED
	lineRightColor CDATA #IMPLIED
	lineRightCap (butt | round | square) #IMPLIED
	lineRightCount CDATA #IMPLIED
	lineRightSpace CDATA #IMPLIED
	href CDATA #IMPLIED
	destination CDATA #IMPLIED


>
<!-- <!ELEMENT pre  (#PCDATA )> -->
<!-- pageDrawing is for use with simple documents -
it specifies one page at a time -->
<!ELEMENT pageDrawing %DRAWINGOPS;>
<!--ENTITIES-->
<!-- RML should always be used with ISO Latin 1 encoding - the following entities
are the only ones that should be neccesary. The  encoding should deal with the rest:
"ISO Latin 1" handles all European accents and the pound sign. -->
<!ENTITY pound "&#xa3;">
<!ENTITY nbsp "&#xa0;">
<!ENTITY alefsym "&#x2135;">
<!ENTITY Alpha "&#x0391;">
<!ENTITY alpha "&#x03b1;">
<!ENTITY and "&#x2227;">
<!ENTITY ang "&#x2220;">
<!ENTITY asymp "&#x2248;">
<!ENTITY Beta "&#x0392;">
<!ENTITY beta "&#x03b2;">
<!ENTITY bull "&#x2022;">
<!ENTITY cap "&#x2229;">
<!ENTITY Chi "&#x03a7;">
<!ENTITY chi "&#x03c7;">
<!ENTITY clubs "&#x2663;">
<!ENTITY cong "&#x2245;">
<!ENTITY cup "&#x222a;">
<!ENTITY darr "&#x2193;">
<!ENTITY dArr "&#x21d3;">
<!ENTITY delta "&#x03b4;">
<!ENTITY Delta "&#x2206;">
<!ENTITY diams "&#x2666;">
<!ENTITY empty "&#x2205;">
<!ENTITY Epsilon "&#x0395;">
<!ENTITY epsilon "&#x03b5;">
<!ENTITY epsiv "&#x03b5;">
<!ENTITY equiv "&#x2261;">
<!ENTITY Eta "&#x0397;">
<!ENTITY eta "&#x03b7;">
<!ENTITY euro "&#x20ac;">
<!ENTITY exist "&#x2203;">
<!ENTITY forall "&#x2200;">
<!ENTITY frasl "&#x2044;">
<!ENTITY Gamma "&#x0393;">
<!ENTITY gamma "&#x03b3;">
<!ENTITY ge "&#x2265;">
<!ENTITY harr "&#x2194;">
<!ENTITY hArr "&#x21d4;">
<!ENTITY hearts "&#x2665;">
<!ENTITY hellip "&#x2026;">
<!ENTITY image "&#x2111;">
<!ENTITY infin "&#x221e;">
<!ENTITY int "&#x222b;">
<!ENTITY Iota "&#x0399;">
<!ENTITY iota "&#x03b9;">
<!ENTITY isin "&#x2208;">
<!ENTITY Kappa "&#x039a;">
<!ENTITY kappa "&#x03ba;">
<!ENTITY Lambda "&#x039b;">
<!ENTITY lambda "&#x03bb;">
<!ENTITY lang "&#x2329;">
<!ENTITY larr "&#x2190;">
<!ENTITY lArr "&#x21d0;">
<!ENTITY lceil "&#xf8ee;">
<!ENTITY le "&#x2264;">
<!ENTITY lfloor "&#xf8f0;">
<!ENTITY lowast "&#x2217;">
<!ENTITY loz "&#x25ca;">
<!ENTITY minus "&#x2212;">
<!ENTITY Mu "&#x039c;">
<!ENTITY mu "&#xb5;">
<!ENTITY nabla "&#x2207;">
<!ENTITY ne "&#x2260;">
<!ENTITY ni "&#x220b;">
<!ENTITY notin "&#x2209;">
<!ENTITY nsub "&#x2284;">
<!ENTITY Nu "&#x039d;">
<!ENTITY nu "&#x03bd;">
<!ENTITY oline "&#xf8e5;">
<!ENTITY omega "&#x03c9;">
<!ENTITY Omega "&#x2126;">
<!ENTITY Omicron "&#x039f;">
<!ENTITY omicron "&#x03bf;">
<!ENTITY oplus "&#x2295;">
<!ENTITY or "&#x2228;">
<!ENTITY otimes "&#x2297;">
<!ENTITY part "&#x2202;">
<!ENTITY perp "&#x22a5;">
<!ENTITY Phi "&#x03a6;">
<!ENTITY phi "&#x03d5;">
<!ENTITY phis "&#x03c6;">
<!ENTITY Pi "&#x03a0;">
<!ENTITY pi "&#x03c0;">
<!ENTITY piv "&#x03d6;">
<!ENTITY prime "&#x2032;">
<!ENTITY prod "&#x220f;">
<!ENTITY prop "&#x221d;">
<!ENTITY Psi "&#x03a8;">
<!ENTITY psi "&#x03c8;">
<!ENTITY radic "&#x221a;">
<!ENTITY rang "&#x232a;">
<!ENTITY rarr "&#x2192;">
<!ENTITY rArr "&#x21d2;">
<!ENTITY rceil "&#xf8f9;">
<!ENTITY real "&#x211c;">
<!ENTITY rfloor "&#xf8fb;">
<!ENTITY Rho "&#x03a1;">
<!ENTITY rho "&#x03c1;">
<!ENTITY sdot "&#x22c5;">
<!ENTITY Sigma "&#x03a3;">
<!ENTITY sigma "&#x03c3;">
<!ENTITY sigmaf "&#x03c2;">
<!ENTITY sigmav "&#x03c2;">
<!ENTITY sim "&#x223c;">
<!ENTITY spades "&#x2660;">
<!ENTITY sub "&#x2282;">
<!ENTITY sube "&#x2286;">
<!ENTITY sum "&#x2211;">
<!ENTITY sup "&#x2283;">
<!ENTITY supe "&#x2287;">
<!ENTITY Tau "&#x03a4;">
<!ENTITY tau "&#x03c4;">
<!ENTITY there4 "&#x2234;">
<!ENTITY Theta "&#x0398;">
<!ENTITY theta "&#x03b8;">
<!ENTITY thetasym "&#x03d1;">
<!ENTITY thetav "&#x03d1;">
<!ENTITY trade "&#xf8ea;">
<!ENTITY uarr "&#x2191;">
<!ENTITY uArr "&#x21d1;">
<!ENTITY upsih "&#x03d2;">
<!ENTITY Upsilon "&#x03a5;">
<!ENTITY upsilon "&#x03c5;">
<!ENTITY weierp "&#x2118;">
<!ENTITY Xi "&#x039e;">
<!ENTITY xi "&#x03be;">
<!ENTITY Zeta "&#x0396;">
<!ENTITY zeta "&#x03b6;">


<!-- these tags put hooks into Python's logging mechanism -->
<!ELEMENT logConfig EMPTY>
<!ATTLIST logConfig
	level (DEBUG | INFO | WARNING | ERROR | CRITICAL) #IMPLIED
	format CDATA #IMPLIED
	filename CDATA #IMPLIED
	filemode (WRITE | APPEND) #IMPLIED
	datefmt CDATA #IMPLIED
>

<!ELEMENT log %STRINGFORMS;>
<!ATTLIST log level (DEBUG | INFO | WARNING | ERROR | CRITICAL) #IMPLIED>

<!--short for log level="debug" -->
<!ELEMENT debug %STRINGFORMS;>
<!ELEMENT info %STRINGFORMS;>
<!ELEMENT warning %STRINGFORMS;>
<!ELEMENT error %STRINGFORMS;>
<!ELEMENT critical %STRINGFORMS;>

<!ELEMENT docinit (
		alias |
		color |
		name |
		namedString |
		outlineAdd |
		registerType1Face |
		registerFont |
		registerCidFont |
		registerTTFont |
		logConfig
		)*>
