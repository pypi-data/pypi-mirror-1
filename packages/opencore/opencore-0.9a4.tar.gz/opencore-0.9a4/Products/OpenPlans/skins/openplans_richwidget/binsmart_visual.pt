<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">
  <head><title></title></head>
  <body>

    <!-- TextArea Widgets -->

    <metal:view_macro define-macro="view"
		      tal:replace="structure accessor" />

    <metal:define define-macro="area_edit">
      <textarea tabindex="#"
		tal:attributes="name fieldName;
		id fieldName;
		value value;
		cols widget/cols;
		rows widget/rows;
		tabindex tabindex/next;"
		tal:define="base python: hasattr(value, 'isUnit');
		binary python: base and value.isBinary() or 0;
		content python: (base == 1) and value.getRaw() or value ;
		content python: (binary == 0) and content or '';"
		tal:content="content"/>
    </metal:define>

    <metal:define define-macro="area_format">
      <tal:define define="
          fieldCType python:here.getContentType(fieldName);
          contentType python:request.get('%s_text_format' % fieldName, fieldCType);
          allowableContentTypes python: list(getattr(field, 'allowable_content_types', ()));
		  mimetypes python:  allowableContentTypes + (fieldCType not in allowableContentTypes and [fieldCType] or []);"
		  condition="python: len(mimetypes) &gt; 1">

	<label>Text Format</label>

	<select tal:attributes="
		id string:${fieldName}_text_format;
		name string:${fieldName}_text_format;
		tabindex tabindex/next;
                onchange string:toggle_editor('${fieldName}');"
                >
	  <option selected=""
		  tal:repeat="item mimetypes"
		  tal:attributes="selected python:test(str(contentType) == str(item), 'selected', None); value item;"
		  tal:content="python: here.lookupMime(item)" />
	</select>
      </tal:define>
    </metal:define>

    <metal:define define-macro="edit">
      <metal:use use-macro="field_macro | here/widgets/field/macros/edit">
	<metal:fill fill-slot="widget_body"
		    tal:define="editor python:here.portal_membership.getAuthenticatedMember().wysiwyg_editor;
		    wysiwyg python:test(editor and (editor!='None'), editor, 'None');
		    use_wysiwyg widget/use_wysiwyg | python:0"
		    >

	  <div class="field" >
	    <div tal:define="inputname  fieldName;
		 formname   string:edit_form;
		 inputvalue value;
		 width widget/width;
		 height widget/height;
		 tabindex tabindex/next;">
	      <div metal:use-macro="here/wysiwyg_support/macros/wysiwygEditorBox">
		The WYSIWYG code
	      </div>
	    </div>
	  </div>

      <tal:area_format tal:condition="widget/allow_format_edit | python:1">
               <div metal:use-macro="here/widgets/visual/macros/area_format" />
      </tal:area_format>

	</metal:fill>
      </metal:use>
    </metal:define>
    <div metal:define-macro="search">
      <div metal:use-macro="here/widgets/textarea/macros/edit">
      </div>
    </div>

  </body>

</html>

