
Add encodings for:

* 'BOOL' (_C_NSBOOL)

* 'UniChar' (_C_UNICHAR)

* 'char' as text (_C_CHAR_TEXT)

* 'char' as small integer (_C_CHAR_INT)


To make this work correctly:

* Encode 'bool' as _C_NSBOOL in the metadata tool

* Switch _C_BOOL and _C_NSBOOL while reading metadata files

  (First two are needed for some kind of backward compat)

* Translate _C_NSBOOL, _C_UNICHAR, ... into the real
  encodings when building the strings going into the
  Objective-C runtime.

* Struct packing/unpacking needs to use our encodings, not
  what we got from the runtime.

* Add code that treats these new encodings correctly.

* Add testcases, including nested structs.

* metadata tool should emit _C_CHAR and _C_CHAR_TEXT, _CHAR_INT
  into the exception files.

* regenerate all metadata, also automaticly create the
  PyObjCFixup files based on what's on the system.

Related:
* Search order:
   - bridgesupport files in the framework (+ Fixups)
   - bridgesupport files in the wrapper (no fixups)

  Don't look in /Library/Bridgesupport, bad idea but
  it makes us depend on non-managed data (hence makes
  it harder to write correct self-contained distributable
  applications).

* Update all sample code: no more AutoBaseClass
