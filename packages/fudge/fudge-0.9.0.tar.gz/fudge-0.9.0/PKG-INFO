Metadata-Version: 1.0
Name: fudge
Version: 0.9.0
Summary: Replace real objects with fakes (mocks, stubs, etc) while testing.
Home-page: http://farmdev.com/projects/fudge/
Author: Kumar McMillan
Author-email: kumar.mcmillan@gmail.com
License: 
The MIT License

Copyright (c) 2009 Kumar McMillan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Description: 
        Complete documentation is available at http://farmdev.com/projects/fudge/
        
        The module is designed for two specific situations:
        
        - Replace an object
        
        - Temporarily return a canned value for a
        method or allow a method to be called without affect.
        
        - Ensure an object is used correctly
        
        - Declare expectations about what methods should be
        called and what arguments should be sent.
        
        Here is a quick preview of how you can test code that sends email without actually sending email::
        
        >>> import fudge
        >>> SMTP = fudge.Fake('SMTP')
        >>> SMTP = SMTP.expects('__init__')
        >>> SMTP = SMTP.expects('connect')
        >>> SMTP = SMTP.expects('sendmail').with_arg_count(3)
        >>> SMTP = SMTP.expects('close')
        
        
Platform: UNKNOWN
