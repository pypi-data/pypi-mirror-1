.TH daxfid 1 "December 02, 2001" "daxfid"

.SH NAME
daxfid \- dynamic XML firewall daemon

.SH SYNOPSIS
.B daxfid
[
.B -pkVh
] [
.B -c
.I file
] [
.B -L
.I runlevel
]
.br
.ti +8
[
.B -f
.I firewall
] [
.B -l
.I ip[/netmask]
]
.br
.ti +8
[
.B -r
.I ip[/netmask]
]
[
.B -i
.I interface
]
.br
.ti +8
[
.B -d
.I {yes|no|auto}
]

.SH DESCRIPTION
\fIdaxfid\fP is a Python script that helps configure several different kinds
of firewalls in a consistent way.
.br
It can run as daemon to adapt its behavior to external conditions; rules
can be described with XML files, XML strings, or generated directly
by the code; the program can be configured and extended with a sort of
plug-ins written in Python.
.br
It comes with a Python package, useful to build other applications
aimed to manipulate different firewalls in a homogeneous way (some
example programs are included). 

.SH OPTIONS
.TP
.BI "\-c " file
Use an alternate configuration file.
.br
The default is /etc/daxfid/daxfid.conf
.TP
.BI "\-L " runlevel
Run in the specified runlevel.
.TP
.BI "\-f " firewall
Force the program to use the given firewall.
.br
Use
.B -f list
to get a list of supported firewalls.
.TP
.BI "\-l " ip[/netmask]
Specify the local IP address.
.TP
.BI "\-r " ip[/netmask]
Specify the remote IP address.
.TP
.BI "\-i " interface
Specify the network interface.
.TP
.B -p
Just print the resulting rules without running them.
.TP
.BI "\-d " {yes|no|auto}
Daemon mode. If
.B yes
the script is forced to run in background; if
.B no
it exits after a single execution; with
.B auto
it automatically selects its behaviour.
.TP
.B -k
Kill a running instance of the daxfid script.
.TP
.B -V
Print version and license informations and exit.
.TP
.B -h
Print the help and exit.

.SH FILES
daxfid come with many files:
.PP
.I /etc/daxfid/daxfid.conf
.PP
The self-describing configuration file for the daxfi script.
.PP
.I /etc/daxfid/dtd.d/
.PP
The directory with the DTDs supported by DAXFi.
.PP
.I /etc/daxfid/rules.d/
.PP
The directory containing daxfi's plug-ins.
.PP
.I /etc/daxfid/xmlrules.d/
.PP
XML rules used by the plug-ins.
.PP
.I Other /etc/daxfid/*.d directories
.PP
Runlevels.

.SH ENVIRONMENT
When the local IP, the remote IP and the interface aren't spefified
neither via command line options nor in the config file, they're
guessed from some environment variables.
.PP
.I $PPP_REMOTE
or
.I $REMOTE_IP
for the remote IP.
.PP
.I $PPP_LOCAL
or
.I $LOCAL_IP
for the local IP.
.PP
.I $PPP_IFACE
or
.I $INTERFACE
for the interface.
.PP
The variables $PPP_REMOTE, $PPP_LOCAL and
$PPP_IFACE are set by the pppd daemon in the /etc/ppp/ip-up script
and are visible from any script in the /etc/ppp/ip-up.d directory.

.SH EXIT STATUS
.PP
The following exit values are returned:
.TP 15
.B 0
Successful completion.
.TP
.B 1
ImportError: unable to import DAXFi's modules.
.TP
.B 2
Wrong Python version number.
.TP
.B 3
Unable to create/read/write lock file.
.TP
.B 4
Unable to gain access to the lock file.
.TP
.B 5
Options parsing troubles.
.TP
.B 6
Other files troubles.
.TP
.B 10
Cannot guess a needed parameter.
.TP
.B 11
The daxfi module is not able to detect the running firewall.

.SH SEE ALSO
.PD0
If you have \fBpydoc\fP installed, try: \fIpydoc daxfi\fP
to read the Python Library Documentation for the daxfi package.
.TP
\fIdaxfi\fP(3)
.TP
\fIdaxfictl\fP(8)
.TP
\fIdaxfidump\fP(8)
.TP
\fIdaxfixmlfile\fP(1)
.PD

.SH AUTHOR
Davide Alberani <alberanid@libero.it>

