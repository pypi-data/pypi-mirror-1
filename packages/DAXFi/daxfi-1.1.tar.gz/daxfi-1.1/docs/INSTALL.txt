  NOTE: since february 2007 sf.net stop supporting the compile farm,
        so I'm no more able to provide compiled modules for other
        architectures, outside Linux on i386; they (probably) still
        be compiled, but you must do it by yourself.


  What you need to run DAXFi

* One (or more) of the firewalls listed in "SUPPORTED.firewalls".

* Python 2.0 or greater.

* since version 1.0 DAXFi uses only packages included in the
  Python Standard Library, so that pyXML is no more required.
  Be sure to have installed Python XML support for your distribution;
  it can be in the main Python package, or in a package named
  "python-xmlbase", "python2.2-xmlbase" or similar.

* The C modules that come with this version of DAXFi are compiled
  against Python 2.4 (or Python 2.3 for architectures other than i386);
  if you have another version of Python and you get a warning like this:
    This Python has API version XYZ, module _modname has version KWJ.
  maybe you need to rebuild the module (see below).

* root privileges.


  INSTALLATION
  ============

* As root, execute:
     python ./setup.py install

* Copy the content of the ./etc directory in your /etc/ directory:
     cp -a ./etc/daxfid/ /etc/

* If needed (e.g.: the C modules for your architecture are missing, or
  they're compiled against another version of Python), rebuild the C
  module for your firewall.
  Note that you need the Python development files installed and even
  the source packages for your firewall; probably you also need
  to modify the "Makefile" and/or "config.mk".
  Summary: rebuild the C modules only if you _really_ need to.

  Anyway, suppose that you need to rebuild the C module for iptables:
  * move to modules/daxfi/firewalls/
  * edit config.mk ; here you must set the PYHPATH variable to the
    directory with the headers of the Python interpreter.
  * move to modules/daxfi/firewalls/iptables/
  * edit every variable you need; normally you have to modify a string
    with the version of your firewall and some path to headers.
  * run:
       make
  * if make tell you that the target is up to date, try removing
    the old ".so" file and then run make again.


  CONFIGURATION
  =============

If you plan to use daxfid, you probably want to modify /etc/daxfid/daxfid.conf
Read ./daxfid/CONFIG.txt for more information.


