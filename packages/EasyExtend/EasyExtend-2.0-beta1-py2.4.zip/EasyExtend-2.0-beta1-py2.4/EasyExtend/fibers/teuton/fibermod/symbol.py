#  This file is automatically generated; please don't muck it up!

#--begin constants--

single_input = 2816
file_input = 2817
eval_input = 2818
decorator = 2819
decorators = 2820
funcdef = 2821
parameters = 2822
varargslist = 2823
fpdef = 2824
fplist = 2825
stmt = 2826
simple_stmt = 2827
small_stmt = 2828
expr_stmt = 2829
augassign = 2830
print_stmt = 2831
del_stmt = 2832
pass_stmt = 2833
flow_stmt = 2834
break_stmt = 2835
continue_stmt = 2836
return_stmt = 2837
yield_stmt = 2838
raise_stmt = 2839
import_stmt = 2840
import_name = 2841
import_from = 2842
import_as_name = 2843
dotted_as_name = 2844
import_as_names = 2845
dotted_as_names = 2846
dotted_name = 2847
global_stmt = 2848
exec_stmt = 2849
assert_stmt = 2850
compound_stmt = 2851
if_stmt = 2852
while_stmt = 2853
for_stmt = 2854
try_stmt = 2855
except_clause = 2856
suite = 2857
test = 2858
and_test = 2859
not_test = 2860
comparison = 2861
comp_op = 2862
expr = 2863
xor_expr = 2864
and_expr = 2865
shift_expr = 2866
arith_expr = 2867
term = 2868
factor = 2869
power = 2870
atom = 2871
listmaker = 2872
testlist_gexp = 2873
lambdef = 2874
trailer = 2875
subscriptlist = 2876
subscript = 2877
sliceop = 2878
exprlist = 2879
testlist = 2880
testlist_safe = 2881
dictmaker = 2882
classdef = 2883
arglist = 2884
argument = 2885
list_iter = 2886
list_for = 2887
list_if = 2888
gen_iter = 2889
gen_for = 2890
gen_if = 2891
testlist1 = 2892
encoding_decl = 2893

#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name
