#  This file is automatically generated; please don't muck it up!

#--end constants--

single_input = 4864
file_input = 4865
eval_input = 4866
decorator = 4867
decorators = 4868
funcdef = 4869
parameters = 4870
varargslist = 4871
fpdef = 4872
fplist = 4873
stmt = 4874
simple_stmt = 4875
small_stmt = 4876
expr_stmt = 4877
augassign = 4878
print_stmt = 4879
del_stmt = 4880
pass_stmt = 4881
flow_stmt = 4882
break_stmt = 4883
continue_stmt = 4884
return_stmt = 4885
yield_stmt = 4886
raise_stmt = 4887
import_stmt = 4888
import_name = 4889
import_from = 4890
import_as_name = 4891
dotted_as_name = 4892
import_as_names = 4893
dotted_as_names = 4894
dotted_name = 4895
global_stmt = 4896
exec_stmt = 4897
assert_stmt = 4898
compound_stmt = 4899
if_stmt = 4900
while_stmt = 4901
for_stmt = 4902
try_stmt = 4903
except_clause = 4904
suite = 4905
test = 4906
and_test = 4907
not_test = 4908
comparison = 4909
comp_op = 4910
expr = 4911
xor_expr = 4912
and_expr = 4913
shift_expr = 4914
arith_expr = 4915
term = 4916
factor = 4917
power = 4918
atom = 4919
listmaker = 4920
testlist_gexp = 4921
lambdef = 4922
trailer = 4923
subscriptlist = 4924
subscript = 4925
sliceop = 4926
exprlist = 4927
testlist = 4928
testlist_safe = 4929
dictmaker = 4930
classdef = 4931
arglist = 4932
argument = 4933
list_iter = 4934
list_for = 4935
list_if = 4936
gen_iter = 4937
gen_for = 4938
gen_if = 4939
testlist1 = 4940
encoding_decl = 4941
cit = 4942
node_var = 4943
optional_stmt = 4944
semi_stmt = 4945
elif_branch = 4946
else_branch = 4947
except_branch = 4948
finally_branch = 4949

#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name
