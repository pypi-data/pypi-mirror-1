#  This file is automatically generated; please don't muck it up!

#--begin constants--

ENDMARKER = 768
NAME = 769
NUMBER = 770
STRING = 771
NEWLINE = 772
INDENT = 773
DEDENT = 774
LPAR = 775
RPAR = 776
LSQB = 777
RSQB = 778
COLON = 779
COMMA = 780
SEMI = 781
PLUS = 782
MINUS = 783
STAR = 784
SLASH = 785
VBAR = 786
AMPER = 787
LESS = 788
GREATER = 789
EQUAL = 790
DOT = 791
PERCENT = 792
BACKQUOTE = 793
LBRACE = 794
RBRACE = 795
EQEQUAL = 796
NOTEQUAL = 797
LESSEQUAL = 798
GREATEREQUAL = 799
TILDE = 800
CIRCUMFLEX = 801
LEFTSHIFT = 802
RIGHTSHIFT = 803
DOUBLESTAR = 804
PLUSEQUAL = 805
MINEQUAL = 806
STAREQUAL = 807
SLASHEQUAL = 808
PERCENTEQUAL = 809
AMPEREQUAL = 810
VBAREQUAL = 811
CIRCUMFLEXEQUAL = 812
LEFTSHIFTEQUAL = 813
RIGHTSHIFTEQUAL = 814
DOUBLESTAREQUAL = 815
DOUBLESLASH = 816
DOUBLESLASHEQUAL = 817
AT = 818
OP = 819
ERRORTOKEN = 820
COMMENT = 821
NL = 822
N_TOKENS = 823
token_input = 824
unit = 825
char_start = 826
dot_start = 827
LINECONT = 828
LINE_COMMENT = 829
WHITE = 830
INTRON = 831
Longnumber = 832
Intnumber = 833
Hexnumber = 834
Octnumber = 835
Decnumber = 836
Imagnumber = 837
Floatnumber = 838
Pointfloat = 839
Expfloat = 840
Exponent = 841
STR_PREFIX = 842
Single = 843
Double = 844
Single3 = 845
Double3 = 846
Number = 847
OPERATOR = 848
RIGHT = 849
LEFT = 850
SPECIAL = 851
LEFT_DEF = 852
RIGHT_DEF = 853
SPECIAL_DEF = 854
OPERATOR_DEF = 855
IPv4Address = 856
Triple = 857

#--end constants--

tok_name = sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name


token_map = {'!=': 797,
 '""""""(ANY|""|""ANY*"")*""""""': 845,
 '"""(ANY|"|"ANY*")*"""': 846,
 '""(A_BACKSLASHANY|ANY)*""': 843,
 '"(A_BACKSLASHANY|ANY)*"': 844,
 '#': 829,
 '%': 792,
 '%=': 809,
 '&': 787,
 '&=': 810,
 '(': 775,
 '(0(x|X)A_HEX_DIGIT+|0A_OCT_DIGIT*|A_NON_NULL_DIGITA_DIGIT*)[l|L|Exponent[j|J]|j|J]|(A_DIGIT+.A_DIGIT*[Exponent])[j|J]': 847,
 '(Intnumber|Floatnumber)(j|J)': 837,
 '(PLUS|MINUS|STAR|SLASH|VBAR|AMPER|LESS|GREATER|EQUAL|PERCENT|EQEQUAL|NOTEQUAL|LESSEQUAL|GREATEREQUAL|TILDE|CIRCUMFLEX|LEFTSHIFT|RIGHTSHIFT|DOUBLESTAR|PLUSEQUAL|MINEQUAL|STAREQUAL|SLASHEQUAL|PERCENTEQUAL|AMPEREQUAL|VBAREQUAL|CIRCUMFLEXEQUAL|LEFTSHIFTEQUAL|RIGHTSHIFTEQUAL|DOUBLESTAREQUAL|DOUBLESLASH|DOUBLESLASHEQUAL)': 855,
 '(e|E)[-|+]A_DIGIT+': 841,
 ')': 776,
 '*': 784,
 '**': 804,
 '**=': 815,
 '*=': 807,
 '+': 782,
 '+=': 805,
 ',': 780,
 '-': 783,
 '-=': 806,
 '.': 791,
 '.|.A_DIGIT+[Exponent][j|J]': 827,
 '/': 785,
 '//': 816,
 '//=': 817,
 '/=': 808,
 '0(x|X)A_HEX_DIGIT+': 834,
 '0A_OCT_DIGIT+': 835,
 '0|(A_NON_NULL_DIGITA_DIGIT*)': 836,
 ':': 779,
 ';': 781,
 '<': 788,
 '<<': 802,
 '<<=': 813,
 '<=': 798,
 '=': 790,
 '==': 796,
 '>': 789,
 '>=': 799,
 '>>': 803,
 '>>=': 814,
 '@': 818,
 'A_BACKSLASHA_WHITE*[A_LINE_END|COMMENT]': 828,
 'A_CHAR(A_CHAR|A_DIGIT)*': 769,
 'A_DIGIT+.A_DIGIT*[Exponent]|.A_DIGIT+[Exponent]': 839,
 'A_DIGIT[A_DIGIT][A_DIGIT]': 857,
 'A_WHITE+': 830,
 'COMMA|SEMI|BACKQUOTE|AT': 854,
 'COMMENT|(WHITE[COMMENT])+|LINECONT': 831,
 'Hexnumber|Octnumber|Decnumber': 833,
 'Intnumber(l|L)': 832,
 'IntnumberExponent': 840,
 'LEFT_DEF': 850,
 'LINE_COMMENTANY*A_LINE_END+': 821,
 'LPAR|LSQB|LBRACE': 852,
 'Number': 770,
 'OPERATOR_DEF': 848,
 'Pointfloat|Expfloat': 838,
 'RIGHT_DEF': 849,
 'RPAR|RSQB|RBRACE': 853,
 'SPECIAL_DEF': 851,
 'STRING|NAME': 826,
 'T_DEDENT': 774,
 'T_ENDMARKER': 768,
 'T_ERRORTOKEN': 820,
 'T_INDENT': 773,
 'T_NEWLINE': 772,
 'T_NT': 822,
 'T_N_TOKENS': 823,
 'T_OP': 819,
 'Triple.Triple.Triple.Triple': 856,
 '[': 777,
 '[STR_PREFIX](Single|Double|Single3|Double3)': 771,
 ']': 778,
 '^': 801,
 '^=': 812,
 '`': 793,
 'char_start|dot_start|NEWLINE|NUMBER|LEFT|RIGHT|SPECIAL|OPERATOR|COLON|INTRON|IPv4Address': 825,
 'u[r|R]|U[r|R]|r|R': 842,
 'unit*ENDMARKER': 824,
 '{': 794,
 '|': 786,
 '|=': 811,
 '}': 795,
 '~': 800}
