# Grammar extension for Gallery

compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt | funcdef | classdef | with_stmt | repeat_stmt | switch_stmt | thunk_stmt

if_stmt: 'if' test [ as_name ] ':' suite ('elif' test [ as_name ] ':' suite)* ['else' ':' suite]
as_name: 'as' NAME

repeat_stmt: 'repeat' ':' suite 'until' ':' (NEWLINE INDENT test NEWLINE DEDENT | test NEWLINE )
switch_stmt: 'switch' expr ':' NEWLINE INDENT case_stmt DEDENT ['else' ':' suite]
case_stmt: 'case' expr ':' suite ('case' expr ':' suite)*
thunk_stmt: small_stmt ':' suite


subscript: '.' '.' '.' | test | [ test ] ':' [test] [sliceop]

atom: ('(' [yield_expr|testlist_gexp] ')' |
       '[' [listmaker] ']' |
       '{' [dictmaker] '}' |
       '`' testlist1 '`' |
       NAME | NUMBER | IPv4Address | STRING+)

small_stmt: tiny_stmt ['unless' test]
tiny_stmt: (expr_stmt | print_stmt  | del_stmt | pass_stmt | flow_stmt |import_stmt | global_stmt | exec_stmt | assert_stmt)




