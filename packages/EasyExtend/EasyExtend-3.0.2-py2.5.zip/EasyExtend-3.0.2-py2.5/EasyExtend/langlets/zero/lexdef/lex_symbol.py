#  This file is automatically generated; please don't muck it up!

#--begin constants--

ENDMARKER = 256
NAME = 257
NUMBER = 258
STRING = 259
NEWLINE = 260
INDENT = 261
DEDENT = 262
LPAR = 263
RPAR = 264
LSQB = 265
RSQB = 266
COLON = 267
COMMA = 268
SEMI = 269
PLUS = 270
MINUS = 271
STAR = 272
SLASH = 273
VBAR = 274
AMPER = 275
LESS = 276
GREATER = 277
EQUAL = 278
DOT = 279
PERCENT = 280
BACKQUOTE = 281
LBRACE = 282
RBRACE = 283
EQEQUAL = 284
NOTEQUAL = 285
LESSEQUAL = 286
GREATEREQUAL = 287
TILDE = 288
CIRCUMFLEX = 289
LEFTSHIFT = 290
RIGHTSHIFT = 291
DOUBLESTAR = 292
PLUSEQUAL = 293
MINEQUAL = 294
STAREQUAL = 295
SLASHEQUAL = 296
PERCENTEQUAL = 297
AMPEREQUAL = 298
VBAREQUAL = 299
CIRCUMFLEXEQUAL = 300
LEFTSHIFTEQUAL = 301
RIGHTSHIFTEQUAL = 302
DOUBLESTAREQUAL = 303
DOUBLESLASH = 304
DOUBLESLASHEQUAL = 305
AT = 306
OP = 307
ERRORTOKEN = 308
COMMENT = 309
NL = 310
N_TOKENS = 311
token_input = 312
unit = 313
char_start = 314
dot_start = 315
LINECONT = 316
LINE_COMMENT = 317
WHITE = 318
INTRON = 319
Longnumber = 320
Intnumber = 321
Hexnumber = 322
Octnumber = 323
Decnumber = 324
Imagnumber = 325
Floatnumber = 326
Pointfloat = 327
Expfloat = 328
Exponent = 329
STR_PREFIX = 330
Single = 331
Double = 332
Single3 = 333
Double3 = 334
Number = 335
OPERATOR = 336
RIGHT = 337
LEFT = 338
SPECIAL = 339
LEFT_DEF = 340
RIGHT_DEF = 341
SPECIAL_DEF = 342
OPERATOR_DEF = 343

#--end constants--

tok_name = sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name


token_map = {'!=': 285,
 '""""""(ANY|""|""ANY*"")*""""""': 333,
 '"""(ANY|"|"ANY*")*"""': 334,
 '""(A_BACKSLASHANY|ANY)*""': 331,
 '"(A_BACKSLASHANY|ANY)*"': 332,
 '#': 317,
 '%': 280,
 '%=': 297,
 '&': 275,
 '&=': 298,
 '(': 263,
 '(0(x|X)A_HEX_DIGIT+|0A_OCT_DIGIT*|A_NON_NULL_DIGITA_DIGIT*)[l|L|Exponent[j|J]|j|J]|(A_DIGIT+.A_DIGIT*[Exponent])[j|J]': 335,
 '(Intnumber|Floatnumber)(j|J)': 325,
 '(PLUS|MINUS|STAR|SLASH|VBAR|AMPER|LESS|GREATER|EQUAL|PERCENT|EQEQUAL|NOTEQUAL|LESSEQUAL|GREATEREQUAL|TILDE|CIRCUMFLEX|LEFTSHIFT|RIGHTSHIFT|DOUBLESTAR|PLUSEQUAL|MINEQUAL|STAREQUAL|SLASHEQUAL|PERCENTEQUAL|AMPEREQUAL|VBAREQUAL|CIRCUMFLEXEQUAL|LEFTSHIFTEQUAL|RIGHTSHIFTEQUAL|DOUBLESTAREQUAL|DOUBLESLASH|DOUBLESLASHEQUAL)': 343,
 '(e|E)[-|+]A_DIGIT+': 329,
 ')': 264,
 '*': 272,
 '**': 292,
 '**=': 303,
 '*=': 295,
 '+': 270,
 '+=': 293,
 ',': 268,
 '-': 271,
 '-=': 294,
 '.': 279,
 '.|.A_DIGIT+[Exponent][j|J]': 315,
 '/': 273,
 '//': 304,
 '//=': 305,
 '/=': 296,
 '0(x|X)A_HEX_DIGIT+': 322,
 '0A_OCT_DIGIT+': 323,
 '0|(A_NON_NULL_DIGITA_DIGIT*)': 324,
 ':': 267,
 ';': 269,
 '<': 276,
 '<<': 290,
 '<<=': 301,
 '<=': 286,
 '=': 278,
 '==': 284,
 '>': 277,
 '>=': 287,
 '>>': 291,
 '>>=': 302,
 '@': 306,
 'A_BACKSLASHA_WHITE*[A_LINE_END|COMMENT]': 316,
 'A_CHAR(A_CHAR|A_DIGIT)*': 257,
 'A_DIGIT+.A_DIGIT*[Exponent]|.A_DIGIT+[Exponent]': 327,
 'A_WHITE+': 318,
 'COMMA|SEMI|BACKQUOTE|AT': 342,
 'COMMENT|(WHITE[COMMENT])+|LINECONT': 319,
 'Hexnumber|Octnumber|Decnumber': 321,
 'Intnumber(l|L)': 320,
 'IntnumberExponent': 328,
 'LEFT_DEF': 338,
 'LINE_COMMENTANY*A_LINE_END+': 309,
 'LPAR|LSQB|LBRACE': 340,
 'Number': 258,
 'OPERATOR_DEF': 336,
 'Pointfloat|Expfloat': 326,
 'RIGHT_DEF': 337,
 'RPAR|RSQB|RBRACE': 341,
 'SPECIAL_DEF': 339,
 'STRING|NAME': 314,
 'T_DEDENT': 262,
 'T_ENDMARKER': 256,
 'T_ERRORTOKEN': 308,
 'T_INDENT': 261,
 'T_NEWLINE': 260,
 'T_NT': 310,
 'T_N_TOKENS': 311,
 'T_OP': 307,
 '[': 265,
 '[STR_PREFIX](Single|Double|Single3|Double3)': 259,
 ']': 266,
 '^': 289,
 '^=': 300,
 '`': 281,
 'char_start|dot_start|NEWLINE|NUMBER|LEFT|RIGHT|SPECIAL|OPERATOR|COLON|INTRON': 313,
 'u[r|R]|U[r|R]|r|R': 330,
 'unit*ENDMARKER': 312,
 '{': 282,
 '|': 274,
 '|=': 299,
 '}': 283,
 '~': 288}
