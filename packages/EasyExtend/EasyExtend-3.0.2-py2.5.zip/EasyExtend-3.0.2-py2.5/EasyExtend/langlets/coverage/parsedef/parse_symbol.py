#  This file is automatically generated; please don't muck it up!

#--begin constants--

single_input = 3328
file_input = 3329
eval_input = 3330
decorator = 3331
decorators = 3332
funcdef = 3333
parameters = 3334
varargslist = 3335
fpdef = 3336
fplist = 3337
stmt = 3338
simple_stmt = 3339
small_stmt = 3340
expr_stmt = 3341
augassign = 3342
print_stmt = 3343
del_stmt = 3344
pass_stmt = 3345
flow_stmt = 3346
break_stmt = 3347
continue_stmt = 3348
return_stmt = 3349
yield_stmt = 3350
raise_stmt = 3351
import_stmt = 3352
import_name = 3353
import_from = 3354
import_as_name = 3355
dotted_as_name = 3356
import_as_names = 3357
dotted_as_names = 3358
dotted_name = 3359
global_stmt = 3360
exec_stmt = 3361
assert_stmt = 3362
compound_stmt = 3363
if_stmt = 3364
while_stmt = 3365
for_stmt = 3366
try_stmt = 3367
with_stmt = 3368
with_var = 3369
except_clause = 3370
suite = 3371
testlist_safe = 3372
old_test = 3373
old_lambdef = 3374
test = 3375
or_test = 3376
and_test = 3377
not_test = 3378
comparison = 3379
comp_op = 3380
expr = 3381
xor_expr = 3382
and_expr = 3383
shift_expr = 3384
arith_expr = 3385
term = 3386
factor = 3387
power = 3388
atom = 3389
listmaker = 3390
testlist_gexp = 3391
lambdef = 3392
trailer = 3393
subscriptlist = 3394
subscript = 3395
sliceop = 3396
exprlist = 3397
testlist = 3398
dictmaker = 3399
classdef = 3400
arglist = 3401
argument = 3402
list_iter = 3403
list_for = 3404
list_if = 3405
gen_iter = 3406
gen_for = 3407
gen_if = 3408
testlist1 = 3409
encoding_decl = 3410
yield_expr = 3411

#--end constants--

tok_name = sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name

