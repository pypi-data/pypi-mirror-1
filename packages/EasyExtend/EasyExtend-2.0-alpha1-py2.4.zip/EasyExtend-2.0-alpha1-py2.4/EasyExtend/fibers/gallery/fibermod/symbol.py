#  This file is automatically generated; please don't muck it up!

#--begin constants--

single_input = 3840
file_input = 3841
eval_input = 3842
decorator = 3843
decorators = 3844
funcdef = 3845
parameters = 3846
varargslist = 3847
fpdef = 3848
fplist = 3849
stmt = 3850
simple_stmt = 3851
small_stmt = 3852
expr_stmt = 3853
augassign = 3854
print_stmt = 3855
del_stmt = 3856
pass_stmt = 3857
flow_stmt = 3858
break_stmt = 3859
continue_stmt = 3860
return_stmt = 3861
yield_stmt = 3862
raise_stmt = 3863
import_stmt = 3864
import_name = 3865
import_from = 3866
import_as_name = 3867
dotted_as_name = 3868
import_as_names = 3869
dotted_as_names = 3870
dotted_name = 3871
global_stmt = 3872
exec_stmt = 3873
assert_stmt = 3874
compound_stmt = 3875
if_stmt = 3876
while_stmt = 3877
for_stmt = 3878
try_stmt = 3879
except_clause = 3880
suite = 3881
test = 3882
and_test = 3883
not_test = 3884
comparison = 3885
comp_op = 3886
expr = 3887
xor_expr = 3888
and_expr = 3889
shift_expr = 3890
arith_expr = 3891
term = 3892
factor = 3893
power = 3894
atom = 3895
listmaker = 3896
testlist_gexp = 3897
lambdef = 3898
trailer = 3899
subscriptlist = 3900
subscript = 3901
sliceop = 3902
exprlist = 3903
testlist = 3904
testlist_safe = 3905
dictmaker = 3906
classdef = 3907
arglist = 3908
argument = 3909
list_iter = 3910
list_for = 3911
list_if = 3912
gen_iter = 3913
gen_for = 3914
gen_if = 3915
testlist1 = 3916
encoding_decl = 3917
on_stmt = 3918
repeat_stmt = 3919
switch_stmt = 3920
case_stmt = 3921
xidef = 3922

#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name
