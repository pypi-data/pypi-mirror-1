# ______________________________________________________________________
# This was automatically generated by nfagen.py.
# Hack at your own risk.

# LANGLET OFFSET

LANGLET_OFFSET = 0

# trail NFAs:

nfas = {256: [['1', 1],
       'ENDMARKER: T_ENDMARKER',
       (256, 0, 256),
       {(1, 1, 256): [(None, '-', 256)], (256, 0, 256): [(1, 1, 256)]}],
 257: [['1', 11, ['*', ['|', ['1', 11], ['1', 15]]]],
       'NAME: A_CHAR( A_CHAR | A_DIGIT ) *',
       (257, 0, 257),
       {(11, 1, 257): [(15, 3, 257), (11, 2, 257), (None, '-', 257)],
        (11, 2, 257): [(15, 3, 257), (11, 2, 257), (None, '-', 257)],
        (15, 3, 257): [(15, 3, 257), (11, 2, 257), (None, '-', 257)],
        (257, 0, 257): [(11, 1, 257)]}],
 258: [['1', 335],
       'NUMBER: Number',
       (258, 0, 258),
       {(258, 0, 258): [(335, 1, 258)], (335, 1, 258): [(None, '-', 258)]}],
 259: [['1',
        ['?', 334],
        ['|', ['1', 330], ['1', 331], ['1', 332], ['1', 333]]],
       'STRING: [ STR_PREFIX ]( Single | Double | Single3 | Double3 )',
       (259, 0, 259),
       {(17, 102, 330): [("'", 103, 330), (17, 102, 330)],
        (17, 114, 332): [(17, 114, 332), ("'", 115, 332)],
        (17, 124, 333): [(17, 124, 333), ('"', 125, 333)],
        (17, 132, 331): [(17, 132, 331), ('"', 133, 331)],
        (259, 0, 259): [(334, 1, 259),
                        ("'", 101, 330),
                        ("'", 111, 332),
                        ('"', 121, 333),
                        ('"', 131, 331)],
        (330, '.', 2, 259): [(None, '-', 259)],
        (331, '.', 3, 259): [(None, '-', 259)],
        (332, '.', 4, 259): [(None, '-', 259)],
        (333, '.', 5, 259): [(None, '-', 259)],
        (334, 1, 259): [("'", 101, 330),
                        ("'", 111, 332),
                        ('"', 121, 333),
                        ('"', 131, 331)],
        ('"', 121, 333): [('"', 122, 333)],
        ('"', 122, 333): [('"', 123, 333)],
        ('"', 123, 333): [(17, 124, 333), ('"', 125, 333)],
        ('"', 125, 333): [('"', 126, 333)],
        ('"', 126, 333): [('"', 127, 333)],
        ('"', 127, 333): [(333, '.', 5, 259)],
        ('"', 131, 331): [(17, 132, 331), ('"', 133, 331)],
        ('"', 133, 331): [(331, '.', 3, 259)],
        ("'", 101, 330): [("'", 103, 330), (17, 102, 330)],
        ("'", 103, 330): [(330, '.', 2, 259)],
        ("'", 111, 332): [("'", 112, 332)],
        ("'", 112, 332): [("'", 113, 332)],
        ("'", 113, 332): [(17, 114, 332), ("'", 115, 332)],
        ("'", 115, 332): [("'", 116, 332)],
        ("'", 116, 332): [("'", 117, 332)],
        ("'", 117, 332): [(332, '.', 4, 259)]}],
 260: [['1', 8],
       'NEWLINE: T_NEWLINE',
       (260, 0, 260),
       {(8, 1, 260): [(None, '-', 260)], (260, 0, 260): [(8, 1, 260)]}],
 261: [['1', 2],
       'INDENT: T_INDENT',
       (261, 0, 261),
       {(2, 1, 261): [(None, '-', 261)], (261, 0, 261): [(2, 1, 261)]}],
 262: [['1', 3],
       'DEDENT: T_DEDENT',
       (262, 0, 262),
       {(3, 1, 262): [(None, '-', 262)], (262, 0, 262): [(3, 1, 262)]}],
 263: [['1', '('],
       "LPAR: '('",
       (263, 0, 263),
       {(263, 0, 263): [('(', 1, 263)], ('(', 1, 263): [(None, '-', 263)]}],
 264: [['1', ')'],
       "RPAR: ')'",
       (264, 0, 264),
       {(264, 0, 264): [(')', 1, 264)], (')', 1, 264): [(None, '-', 264)]}],
 265: [['1', '['],
       "LSQB: '['",
       (265, 0, 265),
       {(265, 0, 265): [('[', 1, 265)], ('[', 1, 265): [(None, '-', 265)]}],
 266: [['1', ']'],
       "RSQB: ']'",
       (266, 0, 266),
       {(266, 0, 266): [(']', 1, 266)], (']', 1, 266): [(None, '-', 266)]}],
 267: [['1', ':'],
       "COLON: ':'",
       (267, 0, 267),
       {(267, 0, 267): [(':', 1, 267)], (':', 1, 267): [(None, '-', 267)]}],
 268: [['1', ','],
       "COMMA: ','",
       (268, 0, 268),
       {(268, 0, 268): [(',', 1, 268)], (',', 1, 268): [(None, '-', 268)]}],
 269: [['1', ';'],
       "SEMI: ';'",
       (269, 0, 269),
       {(269, 0, 269): [(';', 1, 269)], (';', 1, 269): [(None, '-', 269)]}],
 270: [['1', '+'],
       "PLUS: '+'",
       (270, 0, 270),
       {(270, 0, 270): [('+', 1, 270)], ('+', 1, 270): [(None, '-', 270)]}],
 271: [['1', '-'],
       "MINUS: '-'",
       (271, 0, 271),
       {(271, 0, 271): [('-', 1, 271)], ('-', 1, 271): [(None, '-', 271)]}],
 272: [['1', '*'],
       "STAR: '*'",
       (272, 0, 272),
       {(272, 0, 272): [('*', 1, 272)], ('*', 1, 272): [(None, '-', 272)]}],
 273: [['1', '/'],
       "SLASH: '/'",
       (273, 0, 273),
       {(273, 0, 273): [('/', 1, 273)], ('/', 1, 273): [(None, '-', 273)]}],
 274: [['1', '|'],
       "VBAR: '|'",
       (274, 0, 274),
       {(274, 0, 274): [('|', 1, 274)], ('|', 1, 274): [(None, '-', 274)]}],
 275: [['1', '&'],
       "AMPER: '&'",
       (275, 0, 275),
       {(275, 0, 275): [('&', 1, 275)], ('&', 1, 275): [(None, '-', 275)]}],
 276: [['1', '<'],
       "LESS: '<'",
       (276, 0, 276),
       {(276, 0, 276): [('<', 1, 276)], ('<', 1, 276): [(None, '-', 276)]}],
 277: [['1', '>'],
       "GREATER: '>'",
       (277, 0, 277),
       {(277, 0, 277): [('>', 1, 277)], ('>', 1, 277): [(None, '-', 277)]}],
 278: [['1', '='],
       "EQUAL: '='",
       (278, 0, 278),
       {(278, 0, 278): [('=', 1, 278)], ('=', 1, 278): [(None, '-', 278)]}],
 279: [['1', '.'],
       "DOT: '.'",
       (279, 0, 279),
       {(279, 0, 279): [('.', 1, 279)], ('.', 1, 279): [(None, '-', 279)]}],
 280: [['1', '%'],
       "PERCENT: '%'",
       (280, 0, 280),
       {(280, 0, 280): [('%', 1, 280)], ('%', 1, 280): [(None, '-', 280)]}],
 281: [['1', '`'],
       "BACKQUOTE: '`'",
       (281, 0, 281),
       {(281, 0, 281): [('`', 1, 281)], ('`', 1, 281): [(None, '-', 281)]}],
 282: [['1', '{'],
       "LBRACE: '{'",
       (282, 0, 282),
       {(282, 0, 282): [('{', 1, 282)], ('{', 1, 282): [(None, '-', 282)]}],
 283: [['1', '}'],
       "RBRACE: '}'",
       (283, 0, 283),
       {(283, 0, 283): [('}', 1, 283)], ('}', 1, 283): [(None, '-', 283)]}],
 284: [['1', '=', '='],
       "EQEQUAL: '=' '='",
       (284, 0, 284),
       {(284, 0, 284): [('=', 1, 284)],
        ('=', 1, 284): [('=', 2, 284)],
        ('=', 2, 284): [(None, '-', 284)]}],
 285: [['1', '!', '='],
       "NOTEQUAL: '!' '='",
       (285, 0, 285),
       {(285, 0, 285): [('!', 1, 285)],
        ('!', 1, 285): [('=', 2, 285)],
        ('=', 2, 285): [(None, '-', 285)]}],
 286: [['1', '<', '='],
       "LESSEQUAL: '<' '='",
       (286, 0, 286),
       {(286, 0, 286): [('<', 1, 286)],
        ('<', 1, 286): [('=', 2, 286)],
        ('=', 2, 286): [(None, '-', 286)]}],
 287: [['1', '>', '='],
       "GREATEREQUAL: '>' '='",
       (287, 0, 287),
       {(287, 0, 287): [('>', 1, 287)],
        ('=', 2, 287): [(None, '-', 287)],
        ('>', 1, 287): [('=', 2, 287)]}],
 288: [['1', '~'],
       "TILDE: '~'",
       (288, 0, 288),
       {(288, 0, 288): [('~', 1, 288)], ('~', 1, 288): [(None, '-', 288)]}],
 289: [['1', '^'],
       "CIRCUMFLEX: '^'",
       (289, 0, 289),
       {(289, 0, 289): [('^', 1, 289)], ('^', 1, 289): [(None, '-', 289)]}],
 290: [['1', '<', '<'],
       "LEFTSHIFT: '<' '<'",
       (290, 0, 290),
       {(290, 0, 290): [('<', 1, 290)],
        ('<', 1, 290): [('<', 2, 290)],
        ('<', 2, 290): [(None, '-', 290)]}],
 291: [['1', '>', '>'],
       "RIGHTSHIFT: '>' '>'",
       (291, 0, 291),
       {(291, 0, 291): [('>', 1, 291)],
        ('>', 1, 291): [('>', 2, 291)],
        ('>', 2, 291): [(None, '-', 291)]}],
 292: [['1', '*', '*'],
       "DOUBLESTAR: '*' '*'",
       (292, 0, 292),
       {(292, 0, 292): [('*', 1, 292)],
        ('*', 1, 292): [('*', 2, 292)],
        ('*', 2, 292): [(None, '-', 292)]}],
 293: [['1', '+', '='],
       "PLUSEQUAL: '+' '='",
       (293, 0, 293),
       {(293, 0, 293): [('+', 1, 293)],
        ('+', 1, 293): [('=', 2, 293)],
        ('=', 2, 293): [(None, '-', 293)]}],
 294: [['1', '-', '='],
       "MINEQUAL: '-' '='",
       (294, 0, 294),
       {(294, 0, 294): [('-', 1, 294)],
        ('-', 1, 294): [('=', 2, 294)],
        ('=', 2, 294): [(None, '-', 294)]}],
 295: [['1', '*', '='],
       "STAREQUAL: '*' '='",
       (295, 0, 295),
       {(295, 0, 295): [('*', 1, 295)],
        ('*', 1, 295): [('=', 2, 295)],
        ('=', 2, 295): [(None, '-', 295)]}],
 296: [['1', '/', '='],
       "SLASHEQUAL: '/' '='",
       (296, 0, 296),
       {(296, 0, 296): [('/', 1, 296)],
        ('/', 1, 296): [('=', 2, 296)],
        ('=', 2, 296): [(None, '-', 296)]}],
 297: [['1', '%', '='],
       "PERCENTEQUAL: '%' '='",
       (297, 0, 297),
       {(297, 0, 297): [('%', 1, 297)],
        ('%', 1, 297): [('=', 2, 297)],
        ('=', 2, 297): [(None, '-', 297)]}],
 298: [['1', '&', '='],
       "AMPEREQUAL: '&' '='",
       (298, 0, 298),
       {(298, 0, 298): [('&', 1, 298)],
        ('&', 1, 298): [('=', 2, 298)],
        ('=', 2, 298): [(None, '-', 298)]}],
 299: [['1', '|', '='],
       "VBAREQUAL: '|' '='",
       (299, 0, 299),
       {(299, 0, 299): [('|', 1, 299)],
        ('=', 2, 299): [(None, '-', 299)],
        ('|', 1, 299): [('=', 2, 299)]}],
 300: [['1', '^', '='],
       "CIRCUMFLEXEQUAL: '^' '='",
       (300, 0, 300),
       {(300, 0, 300): [('^', 1, 300)],
        ('=', 2, 300): [(None, '-', 300)],
        ('^', 1, 300): [('=', 2, 300)]}],
 301: [['1', '<', '<', '='],
       "LEFTSHIFTEQUAL: '<' '<' '='",
       (301, 0, 301),
       {(301, 0, 301): [('<', 1, 301)],
        ('<', 1, 301): [('<', 2, 301)],
        ('<', 2, 301): [('=', 3, 301)],
        ('=', 3, 301): [(None, '-', 301)]}],
 302: [['1', '>', '>', '='],
       "RIGHTSHIFTEQUAL: '>' '>' '='",
       (302, 0, 302),
       {(302, 0, 302): [('>', 1, 302)],
        ('=', 3, 302): [(None, '-', 302)],
        ('>', 1, 302): [('>', 2, 302)],
        ('>', 2, 302): [('=', 3, 302)]}],
 303: [['1', '*', '*', '='],
       "DOUBLESTAREQUAL: '*' '*' '='",
       (303, 0, 303),
       {(303, 0, 303): [('*', 1, 303)],
        ('*', 1, 303): [('*', 2, 303)],
        ('*', 2, 303): [('=', 3, 303)],
        ('=', 3, 303): [(None, '-', 303)]}],
 304: [['1', '/', '/'],
       "DOUBLESLASH: '/' '/'",
       (304, 0, 304),
       {(304, 0, 304): [('/', 1, 304)],
        ('/', 1, 304): [('/', 2, 304)],
        ('/', 2, 304): [(None, '-', 304)]}],
 305: [['1', '/', '/', '='],
       "DOUBLESLASHEQUAL: '/' '/' '='",
       (305, 0, 305),
       {(305, 0, 305): [('/', 1, 305)],
        ('/', 1, 305): [('/', 2, 305)],
        ('/', 2, 305): [('=', 3, 305)],
        ('=', 3, 305): [(None, '-', 305)]}],
 306: [['1', '@'],
       "AT: '@'",
       (306, 0, 306),
       {(306, 0, 306): [('@', 1, 306)], ('@', 1, 306): [(None, '-', 306)]}],
 307: [['1', 4],
       'OP: T_OP',
       (307, 0, 307),
       {(4, 1, 307): [(None, '-', 307)], (307, 0, 307): [(4, 1, 307)]}],
 308: [['1', 5],
       'ERRORTOKEN: T_ERRORTOKEN',
       (308, 0, 308),
       {(5, 1, 308): [(None, '-', 308)], (308, 0, 308): [(5, 1, 308)]}],
 309: [['1', 317, ['*', 17], 10, ['*', 10]],
       'COMMENT: LINE_COMMENT ANY * A_LINE_END +',
       (309, 0, 309),
       {(10, 3, 309): [(10, 4, 309), (None, '-', 309)],
        (10, 4, 309): [(10, 4, 309), (None, '-', 309)],
        (17, 2, 309): [(17, 2, 309), (10, 3, 309)],
        (309, 0, 309): [(317, 1, 309)],
        (317, 1, 309): [(17, 2, 309), (10, 3, 309)]}],
 310: [['1', 6],
       'NL: T_NT',
       (310, 0, 310),
       {(6, 1, 310): [(None, '-', 310)], (310, 0, 310): [(6, 1, 310)]}],
 311: [['1', 7],
       'N_TOKENS: T_N_TOKENS',
       (311, 0, 311),
       {(7, 1, 311): [(None, '-', 311)], (311, 0, 311): [(7, 1, 311)]}],
 312: [['1', ['*', 313], 256],
       'token_input: unit * ENDMARKER',
       (312, 0, 312),
       {(256, 2, 312): [(None, '-', 312)],
        (312, 0, 312): [(256, 2, 312), (313, 1, 312)],
        (313, 1, 312): [(256, 2, 312), (313, 1, 312)]}],
 313: [['|',
        ['1', 314],
        ['1', 315],
        ['1', 260],
        ['1', 258],
        ['1', 338],
        ['1', 337],
        ['1', 339],
        ['1', 336],
        ['1', 267],
        ['1', 319]],
       'unit: char_start | dot_start | NEWLINE | NUMBER | LEFT | RIGHT | SPECIAL | OPERATOR | COLON | INTRON',
       (313, 0, 313),
       {(258, 4, 313): [(None, '-', 313)],
        (260, 3, 313): [(None, '-', 313)],
        (267, 9, 313): [(None, '-', 313)],
        (313, 0, 313): [(267, 9, 313),
                        (337, 6, 313),
                        (314, 1, 313),
                        (339, 7, 313),
                        (338, 5, 313),
                        (336, 8, 313),
                        (260, 3, 313),
                        (315, 2, 313),
                        (258, 4, 313),
                        (319, 10, 313)],
        (314, 1, 313): [(None, '-', 313)],
        (315, 2, 313): [(None, '-', 313)],
        (319, 10, 313): [(None, '-', 313)],
        (336, 8, 313): [(None, '-', 313)],
        (337, 6, 313): [(None, '-', 313)],
        (338, 5, 313): [(None, '-', 313)],
        (339, 7, 313): [(None, '-', 313)]}],
 314: [['|', ['1', 259], ['1', 257]],
       'char_start: STRING | NAME',
       (314, 0, 314),
       {(15, 143, 257): [(15, 143, 257),
                         (257, '.', 2, 314),
                         ('r', 142, 257),
                         ('R', 142, 257),
                         (20, 142, 257)],
        (17, 252, 330): [("'", 253, 330), (17, 252, 330)],
        (17, 264, 332): [(17, 264, 332), ("'", 265, 332)],
        (17, 274, 333): [(17, 274, 333), ('"', 275, 333)],
        (17, 282, 331): [(17, 282, 331), ('"', 283, 331)],
        (19, 141, 257): [(15, 143, 257),
                         (257, '.', 2, 314),
                         ('r', 142, 257),
                         ('R', 142, 257),
                         (20, 142, 257)],
        (20, 142, 257): [(15, 143, 257),
                         (257, '.', 2, 314),
                         ('r', 142, 257),
                         ('R', 142, 257),
                         (20, 142, 257)],
        (257, '.', 2, 314): [(None, '-', 314)],
        (259, '.', 1, 314): [(None, '-', 314)],
        (314, 0, 314): [("'", 251, 330),
                        ("'", 261, 332),
                        ('"', 271, 333),
                        ('"', 281, 331),
                        ('R', 168, 334),
                        ('r', 167, 334),
                        ('U', 164, 334),
                        ('u', 161, 334),
                        ('R', 141, 257),
                        ('U', 141, 257),
                        ('u', 141, 257),
                        ('r', 141, 257),
                        (19, 141, 257)],
        (330, '.', 152, 259): [(259, '.', 1, 314)],
        (331, '.', 153, 259): [(259, '.', 1, 314)],
        (332, '.', 154, 259): [(259, '.', 1, 314)],
        (333, '.', 155, 259): [(259, '.', 1, 314)],
        (334, '.', 151, 259): [("'", 251, 330),
                               ("'", 261, 332),
                               ('"', 271, 333),
                               ('"', 281, 331)],
        ('"', 271, 333): [('"', 272, 333)],
        ('"', 272, 333): [('"', 273, 333)],
        ('"', 273, 333): [(17, 274, 333), ('"', 275, 333)],
        ('"', 275, 333): [('"', 276, 333)],
        ('"', 276, 333): [('"', 277, 333)],
        ('"', 277, 333): [(333, '.', 155, 259)],
        ('"', 281, 331): [(17, 282, 331), ('"', 283, 331)],
        ('"', 283, 331): [(331, '.', 153, 259)],
        ("'", 251, 330): [("'", 253, 330), (17, 252, 330)],
        ("'", 253, 330): [(330, '.', 152, 259)],
        ("'", 261, 332): [("'", 262, 332)],
        ("'", 262, 332): [("'", 263, 332)],
        ("'", 263, 332): [(17, 264, 332), ("'", 265, 332)],
        ("'", 265, 332): [("'", 266, 332)],
        ("'", 266, 332): [("'", 267, 332)],
        ("'", 267, 332): [(332, '.', 154, 259)],
        ('R', 141, 257): [(15, 143, 257),
                          (257, '.', 2, 314),
                          ('r', 142, 257),
                          ('R', 142, 257),
                          (20, 142, 257)],
        ('R', 142, 257): [(15, 143, 257),
                          (257, '.', 2, 314),
                          ('r', 142, 257),
                          ('R', 142, 257),
                          (20, 142, 257)],
        ('R', 163, 334): [(334, '.', 151, 259)],
        ('R', 166, 334): [(334, '.', 151, 259)],
        ('R', 168, 334): [(334, '.', 151, 259)],
        ('U', 141, 257): [(15, 143, 257),
                          (257, '.', 2, 314),
                          ('r', 142, 257),
                          ('R', 142, 257),
                          (20, 142, 257)],
        ('U', 164, 334): [(334, '.', 151, 259),
                          ('R', 166, 334),
                          ('r', 165, 334)],
        ('r', 141, 257): [(15, 143, 257),
                          (257, '.', 2, 314),
                          ('r', 142, 257),
                          ('R', 142, 257),
                          (20, 142, 257)],
        ('r', 142, 257): [(15, 143, 257),
                          (257, '.', 2, 314),
                          ('r', 142, 257),
                          ('R', 142, 257),
                          (20, 142, 257)],
        ('r', 162, 334): [(334, '.', 151, 259)],
        ('r', 165, 334): [(334, '.', 151, 259)],
        ('r', 167, 334): [(334, '.', 151, 259)],
        ('u', 141, 257): [(15, 143, 257),
                          (257, '.', 2, 314),
                          ('r', 142, 257),
                          ('R', 142, 257),
                          (20, 142, 257)],
        ('u', 161, 334): [('r', 162, 334),
                          ('R', 163, 334),
                          (334, '.', 151, 259)]}],
 315: [['|',
        ['1', '.'],
        ['1',
         '.',
         15,
         ['*', 15],
         ['?', 329],
         ['?', ['|', ['1', 'j'], ['1', 'J']]]]],
       "dot_start: '.' | '.' A_DIGIT + [ Exponent ][ 'j' | 'J' ]",
       (315, 0, 315),
       {(15, 3, 315): [(15, 4, 315),
                       ('J', 7, 315),
                       (329, 5, 315),
                       ('j', 6, 315),
                       (None, '-', 315)],
        (15, 4, 315): [(15, 4, 315),
                       ('J', 7, 315),
                       (329, 5, 315),
                       ('j', 6, 315),
                       (None, '-', 315)],
        (315, 0, 315): [('.', 2, 315), ('.', 1, 315)],
        (329, 5, 315): [('J', 7, 315), ('j', 6, 315), (None, '-', 315)],
        ('.', 1, 315): [(None, '-', 315)],
        ('.', 2, 315): [(15, 3, 315)],
        ('J', 7, 315): [(None, '-', 315)],
        ('j', 6, 315): [(None, '-', 315)]}],
 316: [['1', 16, ['*', 12], ['?', ['|', ['1', 10], ['1', 309]]]],
       'LINECONT: A_BACKSLASH A_WHITE * [ A_LINE_END | COMMENT ]',
       (316, 0, 316),
       {(10, 2, 316): [(309, 4, 316),
                       (10, 3, 316),
                       (None, '-', 316),
                       (10, 2, 316),
                       (21, 2, 316)],
        (10, 3, 316): [(None, '-', 316)],
        (16, 1, 316): [(309, 4, 316),
                       (10, 3, 316),
                       (None, '-', 316),
                       (10, 2, 316),
                       (21, 2, 316)],
        (21, 2, 316): [(309, 4, 316),
                       (10, 3, 316),
                       (None, '-', 316),
                       (10, 2, 316),
                       (21, 2, 316)],
        (309, 4, 316): [(None, '-', 316)],
        (316, 0, 316): [(16, 1, 316)]}],
 317: [['1', '#'],
       "LINE_COMMENT: '#'",
       (317, 0, 317),
       {(317, 0, 317): [('#', 1, 317)], ('#', 1, 317): [(None, '-', 317)]}],
 318: [['1', 12, ['*', 12]],
       'WHITE: A_WHITE +',
       (318, 0, 318),
       {(12, 1, 318): [(12, 2, 318), (None, '-', 318)],
        (12, 2, 318): [(12, 2, 318), (None, '-', 318)],
        (318, 0, 318): [(12, 1, 318)]}],
 319: [['|',
        ['1', 309],
        ['1', ['1', 318, ['?', 309]], ['*', 318, ['?', 309]]],
        ['1', 316]],
       'INTRON: COMMENT | ( WHITE[ COMMENT ]) + | LINECONT',
       (319, 0, 319),
       {(309, 1, 319): [(None, '-', 319)],
        (309, 3, 319): [(318, 4, 319), (None, '-', 319)],
        (309, 5, 319): [(318, 4, 319), (None, '-', 319)],
        (316, 6, 319): [(None, '-', 319)],
        (318, 2, 319): [(318, 4, 319), (None, '-', 319), (309, 3, 319)],
        (318, 4, 319): [(318, 4, 319), (309, 5, 319), (None, '-', 319)],
        (319, 0, 319): [(309, 1, 319), (318, 2, 319), (316, 6, 319)]}],
 320: [['1', 321, ['|', ['1', 'l'], ['1', 'L']]],
       "Longnumber: Intnumber( 'l' | 'L' )",
       (320, 0, 320),
       {(320, 0, 320): [(321, 1, 320)],
        (321, 1, 320): [('l', 2, 320), ('L', 3, 320)],
        ('L', 3, 320): [(None, '-', 320)],
        ('l', 2, 320): [(None, '-', 320)]}],
 321: [['|', ['1', 322], ['1', 323], ['1', 324]],
       'Intnumber: Hexnumber | Octnumber | Decnumber',
       (321, 0, 321),
       {(13, 174, 322): [(13, 175, 322), (322, '.', 1, 321)],
        (13, 175, 322): [(13, 175, 322), (322, '.', 1, 321)],
        (14, 192, 323): [(14, 193, 323), (323, '.', 2, 321)],
        (14, 193, 323): [(14, 193, 323), (323, '.', 2, 321)],
        (15, 183, 324): [(15, 183, 324), (324, '.', 3, 321)],
        (18, 182, 324): [(15, 183, 324), (324, '.', 3, 321)],
        (321, 0, 321): [('0', 171, 322),
                        ('0', 181, 324),
                        (18, 182, 324),
                        ('0', 191, 323)],
        (322, '.', 1, 321): [(None, '-', 321)],
        (323, '.', 2, 321): [(None, '-', 321)],
        (324, '.', 3, 321): [(None, '-', 321)],
        ('0', 171, 322): [('x', 172, 322), ('X', 173, 322)],
        ('0', 181, 324): [(324, '.', 3, 321)],
        ('0', 191, 323): [(14, 192, 323)],
        ('X', 173, 322): [(13, 174, 322)],
        ('x', 172, 322): [(13, 174, 322)]}],
 322: [['1', '0', ['|', ['1', 'x'], ['1', 'X']], 13, ['*', 13]],
       "Hexnumber: '0' ( 'x' | 'X' ) A_HEX_DIGIT +",
       (322, 0, 322),
       {(13, 4, 322): [(13, 5, 322), (None, '-', 322)],
        (13, 5, 322): [(13, 5, 322), (None, '-', 322)],
        (322, 0, 322): [('0', 1, 322)],
        ('0', 1, 322): [('x', 2, 322), ('X', 3, 322)],
        ('X', 3, 322): [(13, 4, 322)],
        ('x', 2, 322): [(13, 4, 322)]}],
 323: [['1', '0', 14, ['*', 14]],
       "Octnumber: '0' A_OCT_DIGIT +",
       (323, 0, 323),
       {(14, 2, 323): [(14, 3, 323), (None, '-', 323)],
        (14, 3, 323): [(14, 3, 323), (None, '-', 323)],
        (323, 0, 323): [('0', 1, 323)],
        ('0', 1, 323): [(14, 2, 323)]}],
 324: [['|', ['1', '0'], ['1', 18, ['*', 15]]],
       "Decnumber: '0' | ( A_NON_NULL_DIGIT A_DIGIT * )",
       (324, 0, 324),
       {(15, 3, 324): [(15, 3, 324), (None, '-', 324)],
        (18, 2, 324): [(15, 3, 324), (None, '-', 324)],
        (324, 0, 324): [('0', 1, 324), (18, 2, 324)],
        ('0', 1, 324): [(None, '-', 324)]}],
 325: [['1', ['|', ['1', 321], ['1', 326]], ['|', ['1', 'j'], ['1', 'J']]],
       "Imagnumber: ( Intnumber | Floatnumber )( 'j' | 'J' )",
       (325, 0, 325),
       {(13, 424, 322): [(322, '.', 251, 321),
                         (24, 425, 322),
                         ('e', 425, 322),
                         ('E', 425, 322),
                         (15, 425, 322)],
        (13, 634, 322): [(322, '.', 461, 321),
                         ('E', 635, 322),
                         ('e', 635, 322),
                         (15, 635, 322),
                         (24, 635, 322)],
        (14, 433, 324): [(324, '.', 253, 321),
                         (23, 433, 324),
                         (14, 433, 324)],
        (14, 442, 323): [(14, 443, 323), (323, '.', 252, 321)],
        (14, 443, 323): [(14, 443, 323), (323, '.', 252, 321)],
        (14, 452, 327): [('.', 453, 327), (14, 452, 327), (23, 452, 327)],
        (14, 643, 324): [(324, '.', 463, 321),
                         (14, 643, 324),
                         (23, 643, 324)],
        (14, 652, 323): [(14, 653, 323), (323, '.', 462, 321)],
        (14, 653, 323): [(14, 653, 323), (323, '.', 462, 321)],
        (15, 425, 322): [(322, '.', 251, 321),
                         (24, 425, 322),
                         ('e', 425, 322),
                         ('E', 425, 322),
                         (15, 425, 322)],
        (15, 454, 327): [(15, 454, 327),
                         (329, 455, 327),
                         (327, '.', 241, 326)],
        (15, 457, 327): [(15, 458, 327),
                         (329, 459, 327),
                         (327, '.', 241, 326)],
        (15, 458, 327): [(15, 458, 327),
                         (329, 459, 327),
                         (327, '.', 241, 326)],
        (15, 475, 329): [(15, 476, 329), (329, '.', 442, 328)],
        (15, 476, 329): [(15, 476, 329), (329, '.', 442, 328)],
        (15, 635, 322): [(322, '.', 461, 321),
                         ('E', 635, 322),
                         ('e', 635, 322),
                         (15, 635, 322),
                         (24, 635, 322)],
        (18, 432, 324): [(324, '.', 253, 321),
                         (23, 433, 324),
                         (14, 433, 324)],
        (18, 451, 327): [('.', 453, 327), (14, 452, 327), (23, 452, 327)],
        (18, 642, 324): [(324, '.', 463, 321),
                         (14, 643, 324),
                         (23, 643, 324)],
        (23, 433, 324): [(324, '.', 253, 321),
                         (23, 433, 324),
                         (14, 433, 324)],
        (23, 452, 327): [('.', 453, 327), (14, 452, 327), (23, 452, 327)],
        (23, 643, 324): [(324, '.', 463, 321),
                         (14, 643, 324),
                         (23, 643, 324)],
        (24, 425, 322): [(322, '.', 251, 321),
                         (24, 425, 322),
                         ('e', 425, 322),
                         ('E', 425, 322),
                         (15, 425, 322)],
        (24, 635, 322): [(322, '.', 461, 321),
                         ('E', 635, 322),
                         ('e', 635, 322),
                         (15, 635, 322),
                         (24, 635, 322)],
        (321, '.', 1, 325): [('J', 4, 325), ('j', 3, 325)],
        (321, '.', 441, 328): [('E', 472, 329), ('e', 471, 329)],
        (322, '.', 251, 321): [(321, '.', 1, 325)],
        (322, '.', 461, 321): [(321, '.', 441, 328)],
        (323, '.', 252, 321): [(321, '.', 1, 325)],
        (323, '.', 462, 321): [(321, '.', 441, 328)],
        (324, '.', 253, 321): [(321, '.', 1, 325)],
        (324, '.', 463, 321): [(321, '.', 441, 328)],
        (325, 0, 325): [('.', 456, 327),
                        ('0', 631, 322),
                        ('0', 641, 324),
                        (18, 642, 324),
                        ('0', 651, 323),
                        (18, 451, 327),
                        ('0', 451, 327),
                        ('0', 421, 322),
                        ('0', 431, 324),
                        (18, 432, 324),
                        ('0', 441, 323)],
        (326, '.', 2, 325): [('J', 4, 325), ('j', 3, 325)],
        (327, '.', 241, 326): [(326, '.', 2, 325)],
        (328, '.', 242, 326): [(326, '.', 2, 325)],
        (329, 455, 327): [(327, '.', 241, 326)],
        (329, 459, 327): [(327, '.', 241, 326)],
        (329, '.', 442, 328): [(328, '.', 242, 326)],
        ('+', 474, 329): [(15, 475, 329)],
        ('-', 473, 329): [(15, 475, 329)],
        ('.', 453, 327): [(15, 454, 327),
                          (329, 455, 327),
                          (327, '.', 241, 326)],
        ('.', 456, 327): [(15, 457, 327)],
        ('0', 421, 322): [('x', 422, 322), ('X', 423, 322)],
        ('0', 431, 324): [(324, '.', 253, 321)],
        ('0', 441, 323): [(14, 442, 323)],
        ('0', 451, 327): [('.', 453, 327), (14, 452, 327), (23, 452, 327)],
        ('0', 631, 322): [('x', 632, 322), ('X', 633, 322)],
        ('0', 641, 324): [(324, '.', 463, 321)],
        ('0', 651, 323): [(14, 652, 323)],
        ('E', 425, 322): [(322, '.', 251, 321),
                          (24, 425, 322),
                          ('e', 425, 322),
                          ('E', 425, 322),
                          (15, 425, 322)],
        ('E', 472, 329): [(15, 475, 329), ('+', 474, 329), ('-', 473, 329)],
        ('E', 635, 322): [(322, '.', 461, 321),
                          ('E', 635, 322),
                          ('e', 635, 322),
                          (15, 635, 322),
                          (24, 635, 322)],
        ('J', 4, 325): [(None, '-', 325)],
        ('X', 423, 322): [(13, 424, 322)],
        ('X', 633, 322): [(13, 634, 322)],
        ('e', 425, 322): [(322, '.', 251, 321),
                          (24, 425, 322),
                          ('e', 425, 322),
                          ('E', 425, 322),
                          (15, 425, 322)],
        ('e', 471, 329): [(15, 475, 329), ('+', 474, 329), ('-', 473, 329)],
        ('e', 635, 322): [(322, '.', 461, 321),
                          ('E', 635, 322),
                          ('e', 635, 322),
                          (15, 635, 322),
                          (24, 635, 322)],
        ('j', 3, 325): [(None, '-', 325)],
        ('x', 422, 322): [(13, 424, 322)],
        ('x', 632, 322): [(13, 634, 322)]}],
 326: [['|', ['1', 327], ['1', 328]],
       'Floatnumber: Pointfloat | Expfloat',
       (326, 0, 326),
       {(13, 394, 322): [(322, '.', 221, 321),
                         ('E', 395, 322),
                         ('e', 395, 322),
                         (15, 395, 322),
                         (24, 395, 322)],
        (14, 212, 327): [('.', 213, 327), (14, 212, 327), (23, 212, 327)],
        (14, 403, 324): [(324, '.', 223, 321),
                         (14, 403, 324),
                         (23, 403, 324)],
        (14, 412, 323): [(14, 413, 323), (323, '.', 222, 321)],
        (14, 413, 323): [(14, 413, 323), (323, '.', 222, 321)],
        (15, 214, 327): [(15, 214, 327),
                         (329, 215, 327),
                         (327, '.', 1, 326)],
        (15, 217, 327): [(15, 218, 327),
                         (329, 219, 327),
                         (327, '.', 1, 326)],
        (15, 218, 327): [(15, 218, 327),
                         (329, 219, 327),
                         (327, '.', 1, 326)],
        (15, 235, 329): [(15, 236, 329), (329, '.', 202, 328)],
        (15, 236, 329): [(15, 236, 329), (329, '.', 202, 328)],
        (15, 395, 322): [(322, '.', 221, 321),
                         ('E', 395, 322),
                         ('e', 395, 322),
                         (15, 395, 322),
                         (24, 395, 322)],
        (18, 211, 327): [('.', 213, 327), (14, 212, 327), (23, 212, 327)],
        (18, 402, 324): [(324, '.', 223, 321),
                         (14, 403, 324),
                         (23, 403, 324)],
        (23, 212, 327): [('.', 213, 327), (14, 212, 327), (23, 212, 327)],
        (23, 403, 324): [(324, '.', 223, 321),
                         (14, 403, 324),
                         (23, 403, 324)],
        (24, 395, 322): [(322, '.', 221, 321),
                         ('E', 395, 322),
                         ('e', 395, 322),
                         (15, 395, 322),
                         (24, 395, 322)],
        (321, '.', 201, 328): [('E', 232, 329), ('e', 231, 329)],
        (322, '.', 221, 321): [(321, '.', 201, 328)],
        (323, '.', 222, 321): [(321, '.', 201, 328)],
        (324, '.', 223, 321): [(321, '.', 201, 328)],
        (326, 0, 326): [('.', 216, 327),
                        ('0', 391, 322),
                        ('0', 401, 324),
                        (18, 402, 324),
                        ('0', 411, 323),
                        (18, 211, 327),
                        ('0', 211, 327)],
        (327, '.', 1, 326): [(None, '-', 326)],
        (328, '.', 2, 326): [(None, '-', 326)],
        (329, 215, 327): [(327, '.', 1, 326)],
        (329, 219, 327): [(327, '.', 1, 326)],
        (329, '.', 202, 328): [(328, '.', 2, 326)],
        ('+', 234, 329): [(15, 235, 329)],
        ('-', 233, 329): [(15, 235, 329)],
        ('.', 213, 327): [(15, 214, 327),
                          (329, 215, 327),
                          (327, '.', 1, 326)],
        ('.', 216, 327): [(15, 217, 327)],
        ('0', 211, 327): [('.', 213, 327), (14, 212, 327), (23, 212, 327)],
        ('0', 391, 322): [('x', 392, 322), ('X', 393, 322)],
        ('0', 401, 324): [(324, '.', 223, 321)],
        ('0', 411, 323): [(14, 412, 323)],
        ('E', 232, 329): [(15, 235, 329), ('+', 234, 329), ('-', 233, 329)],
        ('E', 395, 322): [(322, '.', 221, 321),
                          ('E', 395, 322),
                          ('e', 395, 322),
                          (15, 395, 322),
                          (24, 395, 322)],
        ('X', 393, 322): [(13, 394, 322)],
        ('e', 231, 329): [(15, 235, 329), ('+', 234, 329), ('-', 233, 329)],
        ('e', 395, 322): [(322, '.', 221, 321),
                          ('E', 395, 322),
                          ('e', 395, 322),
                          (15, 395, 322),
                          (24, 395, 322)],
        ('x', 392, 322): [(13, 394, 322)]}],
 327: [['|',
        ['1', 15, ['*', 15], '.', ['*', 15], ['?', 329]],
        ['1', '.', 15, ['*', 15], ['?', 329]]],
       "Pointfloat: A_DIGIT + '.' A_DIGIT * [ Exponent ] | '.' A_DIGIT + [ Exponent ]",
       (327, 0, 327),
       {(15, 1, 327): [('.', 3, 327), (15, 2, 327)],
        (15, 2, 327): [('.', 3, 327), (15, 2, 327)],
        (15, 4, 327): [(15, 4, 327), (329, 5, 327), (None, '-', 327)],
        (15, 7, 327): [(15, 8, 327), (329, 9, 327), (None, '-', 327)],
        (15, 8, 327): [(15, 8, 327), (329, 9, 327), (None, '-', 327)],
        (327, 0, 327): [('.', 6, 327), (15, 1, 327)],
        (329, 5, 327): [(None, '-', 327)],
        (329, 9, 327): [(None, '-', 327)],
        ('.', 3, 327): [(15, 4, 327), (329, 5, 327), (None, '-', 327)],
        ('.', 6, 327): [(15, 7, 327)]}],
 328: [['1', 321, 329],
       'Expfloat: Intnumber Exponent',
       (328, 0, 328),
       {(321, 1, 328): [(329, 2, 328)],
        (328, 0, 328): [(321, 1, 328)],
        (329, 2, 328): [(None, '-', 328)]}],
 329: [['1',
        ['|', ['1', 'e'], ['1', 'E']],
        ['?', ['|', ['1', '-'], ['1', '+']]],
        15,
        ['*', 15]],
       "Exponent: ( 'e' | 'E' )[ '-' | '+' ] A_DIGIT +",
       (329, 0, 329),
       {(15, 5, 329): [(15, 6, 329), (None, '-', 329)],
        (15, 6, 329): [(15, 6, 329), (None, '-', 329)],
        (329, 0, 329): [('E', 2, 329), ('e', 1, 329)],
        ('+', 4, 329): [(15, 5, 329)],
        ('-', 3, 329): [(15, 5, 329)],
        ('E', 2, 329): [(15, 5, 329), ('+', 4, 329), ('-', 3, 329)],
        ('e', 1, 329): [(15, 5, 329), ('+', 4, 329), ('-', 3, 329)]}],
 330: [['1', "'", ['*', 17], "'"],
       'Single: "\'" ANY * "\'"',
       (330, 0, 330),
       {(17, 2, 330): [("'", 3, 330), (17, 2, 330)],
        (330, 0, 330): [("'", 1, 330)],
        ("'", 1, 330): [("'", 3, 330), (17, 2, 330)],
        ("'", 3, 330): [(None, '-', 330)]}],
 331: [['1', '"', ['*', 17], '"'],
       'Double: \'"\' ANY * \'"\'',
       (331, 0, 331),
       {(17, 2, 331): [(17, 2, 331), ('"', 3, 331)],
        (331, 0, 331): [('"', 1, 331)],
        ('"', 1, 331): [(17, 2, 331), ('"', 3, 331)],
        ('"', 3, 331): [(None, '-', 331)]}],
 332: [['1', "'", "'", "'", ['*', 17], "'", "'", "'"],
       'Single3: "\'" "\'" "\'" ANY * "\'" "\'" "\'"',
       (332, 0, 332),
       {(17, 4, 332): [(17, 4, 332), ("'", 5, 332)],
        (332, 0, 332): [("'", 1, 332)],
        ("'", 1, 332): [("'", 2, 332)],
        ("'", 2, 332): [("'", 3, 332)],
        ("'", 3, 332): [(17, 4, 332), ("'", 5, 332)],
        ("'", 5, 332): [("'", 6, 332)],
        ("'", 6, 332): [("'", 7, 332)],
        ("'", 7, 332): [(None, '-', 332)]}],
 333: [['1', '"', '"', '"', ['*', 17], '"', '"', '"'],
       'Double3: \'"\' \'"\' \'"\' ANY * \'"\' \'"\' \'"\'',
       (333, 0, 333),
       {(17, 4, 333): [(17, 4, 333), ('"', 5, 333)],
        (333, 0, 333): [('"', 1, 333)],
        ('"', 1, 333): [('"', 2, 333)],
        ('"', 2, 333): [('"', 3, 333)],
        ('"', 3, 333): [(17, 4, 333), ('"', 5, 333)],
        ('"', 5, 333): [('"', 6, 333)],
        ('"', 6, 333): [('"', 7, 333)],
        ('"', 7, 333): [(None, '-', 333)]}],
 334: [['|',
        ['1', 'u', ['?', ['|', ['1', 'r'], ['1', 'R']]]],
        ['1', 'U', ['?', ['|', ['1', 'r'], ['1', 'R']]]],
        ['1', 'r'],
        ['1', 'R']],
       "STR_PREFIX: 'u' [ 'r' | 'R' ] | 'U' [ 'r' | 'R' ] | 'r' | 'R'",
       (334, 0, 334),
       {(334, 0, 334): [('R', 8, 334),
                        ('r', 7, 334),
                        ('U', 4, 334),
                        ('u', 1, 334)],
        ('R', 3, 334): [(None, '-', 334)],
        ('R', 6, 334): [(None, '-', 334)],
        ('R', 8, 334): [(None, '-', 334)],
        ('U', 4, 334): [(None, '-', 334), ('R', 6, 334), ('r', 5, 334)],
        ('r', 2, 334): [(None, '-', 334)],
        ('r', 5, 334): [(None, '-', 334)],
        ('r', 7, 334): [(None, '-', 334)],
        ('u', 1, 334): [('r', 2, 334), ('R', 3, 334), (None, '-', 334)]}],
 335: [['|',
        ['1',
         ['|',
          ['1', '0', ['|', ['1', 'x'], ['1', 'X']], 13, ['*', 13]],
          ['1', '0', ['*', 14]],
          ['1', 18, ['*', 15]]],
         ['?',
          ['|',
           ['1', 'l'],
           ['1', 'L'],
           ['1', 329, ['?', ['|', ['1', 'j'], ['1', 'J']]]],
           ['1', 'j'],
           ['1', 'J']]]],
        ['1',
         ['1', 15, ['*', 15], '.', ['*', 15], ['?', 329]],
         ['?', ['|', ['1', 'j'], ['1', 'J']]]]],
       "Number: ( '0' ( 'x' | 'X' ) A_HEX_DIGIT + | '0' A_OCT_DIGIT * | A_NON_NULL_DIGIT A_DIGIT * )[ 'l' | 'L' | Exponent[ 'j' | 'J' ] | 'j' | 'J' ] | ( A_DIGIT + '.' A_DIGIT * [ Exponent ])[ 'j' | 'J' ]",
       (335, 0, 335),
       {(13, 4, 335): [('J', 16, 335),
                       ('j', 15, 335),
                       (None, '-', 335),
                       ('l', 10, 335),
                       ('L', 11, 335),
                       ('E', 262, 329),
                       ('e', 261, 329),
                       ('E', 5, 335),
                       ('e', 5, 335),
                       (15, 5, 335),
                       (24, 5, 335)],
        (14, 7, 335): [('J', 16, 335),
                       (14, 7, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (None, '-', 335),
                       ('E', 262, 329),
                       ('e', 261, 329)],
        (14, 9, 335): [('J', 16, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (None, '-', 335),
                       ('E', 262, 329),
                       ('e', 261, 329),
                       (14, 9, 335),
                       (23, 9, 335)],
        (14, 18, 335): [('.', 19, 335), (14, 18, 335), (23, 18, 335)],
        (15, 5, 335): [('J', 16, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (None, '-', 335),
                       ('E', 262, 329),
                       ('e', 261, 329),
                       ('E', 5, 335),
                       ('e', 5, 335),
                       (15, 5, 335),
                       (24, 5, 335)],
        (15, 20, 335): [(15, 20, 335),
                        (329, 21, 335),
                        (None, '-', 335),
                        ('j', 22, 335),
                        ('J', 23, 335)],
        (15, 265, 329): [(15, 266, 329), (329, '.', 12, 335)],
        (15, 266, 329): [(15, 266, 329), (329, '.', 12, 335)],
        (18, 8, 335): [('J', 16, 335),
                       ('j', 15, 335),
                       (None, '-', 335),
                       ('l', 10, 335),
                       ('L', 11, 335),
                       ('E', 262, 329),
                       ('e', 261, 329),
                       (14, 9, 335),
                       (23, 9, 335)],
        (18, 17, 335): [('.', 19, 335), (14, 18, 335), (23, 18, 335)],
        (23, 9, 335): [('J', 16, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (None, '-', 335),
                       ('E', 262, 329),
                       ('e', 261, 329),
                       (14, 9, 335),
                       (23, 9, 335)],
        (23, 18, 335): [('.', 19, 335), (14, 18, 335), (23, 18, 335)],
        (24, 5, 335): [('J', 16, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (None, '-', 335),
                       ('E', 262, 329),
                       ('e', 261, 329),
                       ('E', 5, 335),
                       ('e', 5, 335),
                       (15, 5, 335),
                       (24, 5, 335)],
        (329, 21, 335): [('J', 23, 335), ('j', 22, 335), (None, '-', 335)],
        (329, '.', 12, 335): [(None, '-', 335),
                              ('J', 14, 335),
                              ('j', 13, 335)],
        (335, 0, 335): [(18, 8, 335),
                        ('0', 6, 335),
                        ('0', 1, 335),
                        (18, 17, 335),
                        ('0', 17, 335)],
        ('+', 264, 329): [(15, 265, 329)],
        ('-', 263, 329): [(15, 265, 329)],
        ('.', 19, 335): [(15, 20, 335),
                         (329, 21, 335),
                         (None, '-', 335),
                         ('j', 22, 335),
                         ('J', 23, 335)],
        ('0', 1, 335): [('x', 2, 335), ('X', 3, 335)],
        ('0', 6, 335): [('J', 16, 335),
                        (14, 7, 335),
                        ('j', 15, 335),
                        (None, '-', 335),
                        ('l', 10, 335),
                        ('L', 11, 335),
                        ('E', 262, 329),
                        ('e', 261, 329)],
        ('0', 17, 335): [('.', 19, 335), (14, 18, 335), (23, 18, 335)],
        ('E', 5, 335): [('J', 16, 335),
                        ('j', 15, 335),
                        ('L', 11, 335),
                        ('l', 10, 335),
                        (None, '-', 335),
                        ('E', 262, 329),
                        ('e', 261, 329),
                        ('E', 5, 335),
                        ('e', 5, 335),
                        (15, 5, 335),
                        (24, 5, 335)],
        ('E', 262, 329): [(15, 265, 329), ('+', 264, 329), ('-', 263, 329)],
        ('J', 14, 335): [(None, '-', 335)],
        ('J', 16, 335): [(None, '-', 335)],
        ('J', 23, 335): [(None, '-', 335)],
        ('L', 11, 335): [(None, '-', 335)],
        ('X', 3, 335): [(13, 4, 335)],
        ('e', 5, 335): [('J', 16, 335),
                        ('j', 15, 335),
                        ('L', 11, 335),
                        ('l', 10, 335),
                        (None, '-', 335),
                        ('E', 262, 329),
                        ('e', 261, 329),
                        ('E', 5, 335),
                        ('e', 5, 335),
                        (15, 5, 335),
                        (24, 5, 335)],
        ('e', 261, 329): [(15, 265, 329), ('+', 264, 329), ('-', 263, 329)],
        ('j', 13, 335): [(None, '-', 335)],
        ('j', 15, 335): [(None, '-', 335)],
        ('j', 22, 335): [(None, '-', 335)],
        ('l', 10, 335): [(None, '-', 335)],
        ('x', 2, 335): [(13, 4, 335)]}],
 336: [['1', 343],
       'OPERATOR: OPERATOR_DEF',
       (336, 0, 336),
       {(336, 0, 336): [(343, 1, 336)], (343, 1, 336): [(None, '-', 336)]}],
 337: [['1', 341],
       'RIGHT: RIGHT_DEF',
       (337, 0, 337),
       {(337, 0, 337): [(341, 1, 337)], (341, 1, 337): [(None, '-', 337)]}],
 338: [['1', 340],
       'LEFT: LEFT_DEF',
       (338, 0, 338),
       {(338, 0, 338): [(340, 1, 338)], (340, 1, 338): [(None, '-', 338)]}],
 339: [['1', 342],
       'SPECIAL: SPECIAL_DEF',
       (339, 0, 339),
       {(339, 0, 339): [(342, 1, 339)], (342, 1, 339): [(None, '-', 339)]}],
 340: [['|', ['1', 263], ['1', 265], ['1', 282]],
       'LEFT_DEF: LPAR | LSQB | LBRACE',
       (340, 0, 340),
       {(263, 1, 340): [(None, '-', 340)],
        (265, 2, 340): [(None, '-', 340)],
        (282, 3, 340): [(None, '-', 340)],
        (340, 0, 340): [(265, 2, 340), (282, 3, 340), (263, 1, 340)]}],
 341: [['|', ['1', 264], ['1', 266], ['1', 283]],
       'RIGHT_DEF: RPAR | RSQB | RBRACE',
       (341, 0, 341),
       {(264, 1, 341): [(None, '-', 341)],
        (266, 2, 341): [(None, '-', 341)],
        (283, 3, 341): [(None, '-', 341)],
        (341, 0, 341): [(264, 1, 341), (283, 3, 341), (266, 2, 341)]}],
 342: [['|', ['1', 268], ['1', 269], ['1', 281], ['1', 306]],
       'SPECIAL_DEF: COMMA | SEMI | BACKQUOTE | AT',
       (342, 0, 342),
       {(268, 1, 342): [(None, '-', 342)],
        (269, 2, 342): [(None, '-', 342)],
        (281, 3, 342): [(None, '-', 342)],
        (306, 4, 342): [(None, '-', 342)],
        (342, 0, 342): [(269, 2, 342),
                        (281, 3, 342),
                        (268, 1, 342),
                        (306, 4, 342)]}],
 343: [['|',
        ['1', 270],
        ['1', 271],
        ['1', 272],
        ['1', 273],
        ['1', 274],
        ['1', 275],
        ['1', 276],
        ['1', 277],
        ['1', 278],
        ['1', 280],
        ['1', 284],
        ['1', 285],
        ['1', 286],
        ['1', 287],
        ['1', 288],
        ['1', 289],
        ['1', 290],
        ['1', 291],
        ['1', 292],
        ['1', 293],
        ['1', 294],
        ['1', 295],
        ['1', 296],
        ['1', 297],
        ['1', 298],
        ['1', 299],
        ['1', 300],
        ['1', 301],
        ['1', 302],
        ['1', 303],
        ['1', 304],
        ['1', 305]],
       'OPERATOR_DEF: ( PLUS | MINUS | STAR | SLASH | VBAR | AMPER | LESS | GREATER | EQUAL | PERCENT | EQEQUAL | NOTEQUAL | LESSEQUAL | GREATEREQUAL | TILDE | CIRCUMFLEX | LEFTSHIFT | RIGHTSHIFT | DOUBLESTAR | PLUSEQUAL | MINEQUAL | STAREQUAL | SLASHEQUAL | PERCENTEQUAL | AMPEREQUAL | VBAREQUAL | CIRCUMFLEXEQUAL | LEFTSHIFTEQUAL | RIGHTSHIFTEQUAL | DOUBLESTAREQUAL | DOUBLESLASH | DOUBLESLASHEQUAL )',
       (343, 0, 343),
       {(270, '.', 1, 343): [(None, '-', 343)],
        (271, '.', 2, 343): [(None, '-', 343)],
        (272, '.', 3, 343): [(None, '-', 343)],
        (273, '.', 4, 343): [(None, '-', 343)],
        (274, '.', 5, 343): [(None, '-', 343)],
        (275, '.', 6, 343): [(None, '-', 343)],
        (276, '.', 7, 343): [(None, '-', 343)],
        (277, '.', 8, 343): [(None, '-', 343)],
        (278, '.', 9, 343): [(None, '-', 343)],
        (280, '.', 10, 343): [(None, '-', 343)],
        (284, '.', 11, 343): [(None, '-', 343)],
        (285, 12, 343): [(None, '-', 343)],
        (286, '.', 13, 343): [(None, '-', 343)],
        (287, '.', 14, 343): [(None, '-', 343)],
        (288, 15, 343): [(None, '-', 343)],
        (289, '.', 16, 343): [(None, '-', 343)],
        (290, '.', 17, 343): [(None, '-', 343)],
        (291, '.', 18, 343): [(None, '-', 343)],
        (292, '.', 19, 343): [(None, '-', 343)],
        (293, '.', 20, 343): [(None, '-', 343)],
        (294, '.', 21, 343): [(None, '-', 343)],
        (295, '.', 22, 343): [(None, '-', 343)],
        (296, '.', 23, 343): [(None, '-', 343)],
        (297, '.', 24, 343): [(None, '-', 343)],
        (298, '.', 25, 343): [(None, '-', 343)],
        (299, '.', 26, 343): [(None, '-', 343)],
        (300, '.', 27, 343): [(None, '-', 343)],
        (301, '.', 28, 343): [(None, '-', 343)],
        (302, '.', 29, 343): [(None, '-', 343)],
        (303, '.', 30, 343): [(None, '-', 343)],
        (304, '.', 31, 343): [(None, '-', 343)],
        (305, '.', 32, 343): [(None, '-', 343)],
        (343, 0, 343): [(285, 12, 343),
                        (288, 15, 343),
                        ('/', 271, 273),
                        ('/', 281, 305),
                        ('/', 291, 296),
                        ('/', 301, 304),
                        ('&', 311, 275),
                        ('&', 321, 298),
                        ('>', 331, 287),
                        ('>', 341, 291),
                        ('>', 351, 302),
                        ('*', 361, 295),
                        ('*', 371, 303),
                        ('%', 381, 280),
                        ('%', 391, 297),
                        ('*', 401, 292),
                        ('<', 411, 301),
                        ('<', 421, 286),
                        ('<', 431, 290),
                        ('<', 441, 276),
                        ('|', 451, 274),
                        ('|', 461, 299),
                        ('+', 471, 293),
                        ('+', 481, 270),
                        ('*', 491, 272),
                        ('>', 501, 277),
                        ('^', 511, 300),
                        ('^', 521, 289),
                        ('=', 531, 284),
                        ('=', 541, 278),
                        ('-', 551, 294),
                        ('-', 561, 271)],
        ('%', 381, 280): [(280, '.', 10, 343)],
        ('%', 391, 297): [('=', 392, 297)],
        ('&', 311, 275): [(275, '.', 6, 343)],
        ('&', 321, 298): [('=', 322, 298)],
        ('*', 361, 295): [('=', 362, 295)],
        ('*', 371, 303): [('*', 372, 303)],
        ('*', 372, 303): [('=', 373, 303)],
        ('*', 401, 292): [('*', 402, 292)],
        ('*', 402, 292): [(292, '.', 19, 343)],
        ('*', 491, 272): [(272, '.', 3, 343)],
        ('+', 471, 293): [('=', 472, 293)],
        ('+', 481, 270): [(270, '.', 1, 343)],
        ('-', 551, 294): [('=', 552, 294)],
        ('-', 561, 271): [(271, '.', 2, 343)],
        ('/', 271, 273): [(273, '.', 4, 343)],
        ('/', 281, 305): [('/', 282, 305)],
        ('/', 282, 305): [('=', 283, 305)],
        ('/', 291, 296): [('=', 292, 296)],
        ('/', 301, 304): [('/', 302, 304)],
        ('/', 302, 304): [(304, '.', 31, 343)],
        ('<', 411, 301): [('<', 412, 301)],
        ('<', 412, 301): [('=', 413, 301)],
        ('<', 421, 286): [('=', 422, 286)],
        ('<', 431, 290): [('<', 432, 290)],
        ('<', 432, 290): [(290, '.', 17, 343)],
        ('<', 441, 276): [(276, '.', 7, 343)],
        ('=', 283, 305): [(305, '.', 32, 343)],
        ('=', 292, 296): [(296, '.', 23, 343)],
        ('=', 322, 298): [(298, '.', 25, 343)],
        ('=', 332, 287): [(287, '.', 14, 343)],
        ('=', 353, 302): [(302, '.', 29, 343)],
        ('=', 362, 295): [(295, '.', 22, 343)],
        ('=', 373, 303): [(303, '.', 30, 343)],
        ('=', 392, 297): [(297, '.', 24, 343)],
        ('=', 413, 301): [(301, '.', 28, 343)],
        ('=', 422, 286): [(286, '.', 13, 343)],
        ('=', 462, 299): [(299, '.', 26, 343)],
        ('=', 472, 293): [(293, '.', 20, 343)],
        ('=', 512, 300): [(300, '.', 27, 343)],
        ('=', 531, 284): [('=', 532, 284)],
        ('=', 532, 284): [(284, '.', 11, 343)],
        ('=', 541, 278): [(278, '.', 9, 343)],
        ('=', 552, 294): [(294, '.', 21, 343)],
        ('>', 331, 287): [('=', 332, 287)],
        ('>', 341, 291): [('>', 342, 291)],
        ('>', 342, 291): [(291, '.', 18, 343)],
        ('>', 351, 302): [('>', 352, 302)],
        ('>', 352, 302): [('=', 353, 302)],
        ('>', 501, 277): [(277, '.', 8, 343)],
        ('^', 511, 300): [('=', 512, 300)],
        ('^', 521, 289): [(289, '.', 16, 343)],
        ('|', 451, 274): [(274, '.', 5, 343)],
        ('|', 461, 299): [('=', 462, 299)]}]}

# expansion targets:

expanded  = {259: [['1', ['?', 334], ['|', ['1', 330], ['1', 331], ['1', 332], ['1', 333]]],
       'STRING: [ STR_PREFIX ]( Single | Double | Single3 | Double3 )',
       (259, 0, 259),
       {(259, 0, 259): [(333, 5, 259), (334, 1, 259), (332, 4, 259), (331, 3, 259), (330, 2, 259)],
        (330, 2, 259): [(None, '-', 259)],
        (331, 3, 259): [(None, '-', 259)],
        (332, 4, 259): [(None, '-', 259)],
        (333, 5, 259): [(None, '-', 259)],
        (334, 1, 259): [(333, 5, 259), (332, 4, 259), (331, 3, 259), (330, 2, 259)]}],
 314: [['|', ['1', 259], ['1', 257]],
       'char_start: STRING | NAME',
       (314, 0, 314),
       {(257, 2, 314): [(None, '-', 314)],
        (259, 1, 314): [(None, '-', 314)],
        (314, 0, 314): [(257, 2, 314), (259, 1, 314)]}],
 321: [['|', ['1', 322], ['1', 323], ['1', 324]],
       'Intnumber: Hexnumber | Octnumber | Decnumber',
       (321, 0, 321),
       {(321, 0, 321): [(323, 2, 321), (324, 3, 321), (322, 1, 321)],
        (322, 1, 321): [(None, '-', 321)],
        (323, 2, 321): [(None, '-', 321)],
        (324, 3, 321): [(None, '-', 321)]}],
 325: [['1', ['|', ['1', 321], ['1', 326]], ['|', ['1', 'j'], ['1', 'J']]],
       "Imagnumber: ( Intnumber | Floatnumber )( 'j' | 'J' )",
       (325, 0, 325),
       {(321, 1, 325): [('J', 4, 325), ('j', 3, 325)],
        (325, 0, 325): [(326, 2, 325), (321, 1, 325)],
        (326, 2, 325): [('J', 4, 325), ('j', 3, 325)],
        ('J', 4, 325): [(None, '-', 325)],
        ('j', 3, 325): [(None, '-', 325)]}],
 326: [['|', ['1', 327], ['1', 328]],
       'Floatnumber: Pointfloat | Expfloat',
       (326, 0, 326),
       {(326, 0, 326): [(328, 2, 326), (327, 1, 326)],
        (327, 1, 326): [(None, '-', 326)],
        (328, 2, 326): [(None, '-', 326)]}],
 335: [['|',
        ['1',
         ['|',
          ['1', '0', ['|', ['1', 'x'], ['1', 'X']], 13, ['*', 13]],
          ['1', '0', ['*', 14]],
          ['1', 18, ['*', 15]]],
         ['?',
          ['|', ['1', 'l'], ['1', 'L'], ['1', 329, ['?', ['|', ['1', 'j'], ['1', 'J']]]], ['1', 'j'], ['1', 'J']]]],
        ['1', ['1', 15, ['*', 15], '.', ['*', 15], ['?', 329]], ['?', ['|', ['1', 'j'], ['1', 'J']]]]],
       "Number: ( '0' ( 'x' | 'X' ) A_HEX_DIGIT + | '0' A_OCT_DIGIT * | A_NON_NULL_DIGIT A_DIGIT * )[ 'l' | 'L' | Exponent[ 'j' | 'J' ] | 'j' | 'J' ] | ( A_DIGIT + '.' A_DIGIT * [ Exponent ])[ 'j' | 'J' ]",
       (335, 0, 335),
       {(13, 4, 335): [('J', 16, 335),
                       (13, 5, 335),
                       ('j', 15, 335),
                       (None, '-', 335),
                       ('l', 10, 335),
                       (329, 12, 335),
                       ('L', 11, 335)],
        (13, 5, 335): [('J', 16, 335),
                       (13, 5, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (329, 12, 335),
                       (None, '-', 335)],
        (14, 7, 335): [('J', 16, 335),
                       (14, 7, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (329, 12, 335),
                       (None, '-', 335)],
        (15, 9, 335): [('J', 16, 335),
                       (15, 9, 335),
                       ('j', 15, 335),
                       ('L', 11, 335),
                       ('l', 10, 335),
                       (329, 12, 335),
                       (None, '-', 335)],
        (15, 17, 335): [('.', 19, 335), (15, 18, 335)],
        (15, 18, 335): [('.', 19, 335), (15, 18, 335)],
        (15, 20, 335): [(15, 20, 335), (329, 21, 335), (None, '-', 335), ('j', 22, 335), ('J', 23, 335)],
        (18, 8, 335): [('J', 16, 335),
                       (15, 9, 335),
                       ('j', 15, 335),
                       (None, '-', 335),
                       ('l', 10, 335),
                       (329, 12, 335),
                       ('L', 11, 335)],
        (329, 12, 335): [(None, '-', 335), ('J', 14, 335), ('j', 13, 335)],
        (329, 21, 335): [('J', 23, 335), ('j', 22, 335), (None, '-', 335)],
        (335, 0, 335): [(18, 8, 335), ('0', 6, 335), ('0', 1, 335), (15, 17, 335)],
        ('.', 19, 335): [(15, 20, 335), (329, 21, 335), (None, '-', 335), ('j', 22, 335), ('J', 23, 335)],
        ('0', 1, 335): [('x', 2, 335), ('X', 3, 335)],
        ('0', 6, 335): [('J', 16, 335),
                        (14, 7, 335),
                        ('j', 15, 335),
                        (None, '-', 335),
                        ('l', 10, 335),
                        (329, 12, 335),
                        ('L', 11, 335)],
        ('J', 14, 335): [(None, '-', 335)],
        ('J', 16, 335): [(None, '-', 335)],
        ('J', 23, 335): [(None, '-', 335)],
        ('L', 11, 335): [(None, '-', 335)],
        ('X', 3, 335): [(13, 4, 335)],
        ('j', 13, 335): [(None, '-', 335)],
        ('j', 15, 335): [(None, '-', 335)],
        ('j', 22, 335): [(None, '-', 335)],
        ('l', 10, 335): [(None, '-', 335)],
        ('x', 2, 335): [(13, 4, 335)]}],
 343: [['|',
        ['1', 270],
        ['1', 271],
        ['1', 272],
        ['1', 273],
        ['1', 274],
        ['1', 275],
        ['1', 276],
        ['1', 277],
        ['1', 278],
        ['1', 280],
        ['1', 284],
        ['1', 285],
        ['1', 286],
        ['1', 287],
        ['1', 288],
        ['1', 289],
        ['1', 290],
        ['1', 291],
        ['1', 292],
        ['1', 293],
        ['1', 294],
        ['1', 295],
        ['1', 296],
        ['1', 297],
        ['1', 298],
        ['1', 299],
        ['1', 300],
        ['1', 301],
        ['1', 302],
        ['1', 303],
        ['1', 304],
        ['1', 305]],
       'OPERATOR_DEF: ( PLUS | MINUS | STAR | SLASH | VBAR | AMPER | LESS | GREATER | EQUAL | PERCENT | EQEQUAL | NOTEQUAL | LESSEQUAL | GREATEREQUAL | TILDE | CIRCUMFLEX | LEFTSHIFT | RIGHTSHIFT | DOUBLESTAR | PLUSEQUAL | MINEQUAL | STAREQUAL | SLASHEQUAL | PERCENTEQUAL | AMPEREQUAL | VBAREQUAL | CIRCUMFLEXEQUAL | LEFTSHIFTEQUAL | RIGHTSHIFTEQUAL | DOUBLESTAREQUAL | DOUBLESLASH | DOUBLESLASHEQUAL )',
       (343, 0, 343),
       {(270, 1, 343): [(None, '-', 343)],
        (271, 2, 343): [(None, '-', 343)],
        (272, 3, 343): [(None, '-', 343)],
        (273, 4, 343): [(None, '-', 343)],
        (274, 5, 343): [(None, '-', 343)],
        (275, 6, 343): [(None, '-', 343)],
        (276, 7, 343): [(None, '-', 343)],
        (277, 8, 343): [(None, '-', 343)],
        (278, 9, 343): [(None, '-', 343)],
        (280, 10, 343): [(None, '-', 343)],
        (284, 11, 343): [(None, '-', 343)],
        (285, 12, 343): [(None, '-', 343)],
        (286, 13, 343): [(None, '-', 343)],
        (287, 14, 343): [(None, '-', 343)],
        (288, 15, 343): [(None, '-', 343)],
        (289, 16, 343): [(None, '-', 343)],
        (290, 17, 343): [(None, '-', 343)],
        (291, 18, 343): [(None, '-', 343)],
        (292, 19, 343): [(None, '-', 343)],
        (293, 20, 343): [(None, '-', 343)],
        (294, 21, 343): [(None, '-', 343)],
        (295, 22, 343): [(None, '-', 343)],
        (296, 23, 343): [(None, '-', 343)],
        (297, 24, 343): [(None, '-', 343)],
        (298, 25, 343): [(None, '-', 343)],
        (299, 26, 343): [(None, '-', 343)],
        (300, 27, 343): [(None, '-', 343)],
        (301, 28, 343): [(None, '-', 343)],
        (302, 29, 343): [(None, '-', 343)],
        (303, 30, 343): [(None, '-', 343)],
        (304, 31, 343): [(None, '-', 343)],
        (305, 32, 343): [(None, '-', 343)],
        (343, 0, 343): [(304, 31, 343),
                        (293, 20, 343),
                        (298, 25, 343),
                        (278, 9, 343),
                        (294, 21, 343),
                        (286, 13, 343),
                        (275, 6, 343),
                        (296, 23, 343),
                        (272, 3, 343),
                        (292, 19, 343),
                        (285, 12, 343),
                        (277, 8, 343),
                        (270, 1, 343),
                        (280, 10, 343),
                        (288, 15, 343),
                        (289, 16, 343),
                        (303, 30, 343),
                        (297, 24, 343),
                        (301, 28, 343),
                        (273, 4, 343),
                        (284, 11, 343),
                        (271, 2, 343),
                        (287, 14, 343),
                        (305, 32, 343),
                        (276, 7, 343),
                        (299, 26, 343),
                        (302, 29, 343),
                        (291, 18, 343),
                        (295, 22, 343),
                        (274, 5, 343),
                        (290, 17, 343),
                        (300, 27, 343)]}]}

# reachables:

reachables = {256: set([1]),
 257: set([11]),
 258: set(['0', 18, 15, 335]),
 259: set(['"', "'", 330, 331, 332, 333, 334, 'R', 'u', 'U', 'r']),
 260: set([8]),
 261: set([2]),
 262: set([3]),
 263: set(['(']),
 264: set([')']),
 265: set(['[']),
 266: set([']']),
 267: set([':']),
 268: set([',']),
 269: set([';']),
 270: set(['+']),
 271: set(['-']),
 272: set(['*']),
 273: set(['/']),
 274: set(['|']),
 275: set(['&']),
 276: set(['<']),
 277: set(['>']),
 278: set(['=']),
 279: set(['.']),
 280: set(['%']),
 281: set(['`']),
 282: set(['{']),
 283: set(['}']),
 284: set(['=']),
 285: set(['!']),
 286: set(['<']),
 287: set(['>']),
 288: set(['~']),
 289: set(['^']),
 290: set(['<']),
 291: set(['>']),
 292: set(['*']),
 293: set(['+']),
 294: set(['-']),
 295: set(['*']),
 296: set(['/']),
 297: set(['%']),
 298: set(['&']),
 299: set(['|']),
 300: set(['^']),
 301: set(['<']),
 302: set(['>']),
 303: set(['*']),
 304: set(['/']),
 305: set(['/']),
 306: set(['@']),
 307: set([4]),
 308: set([5]),
 309: set(['#', 317]),
 310: set([6]),
 311: set([7]),
 312: set([256, 1, 258, '*', 260, 257, 8, 265, 266, 267, 268, 269, 270, 15, 272, 273, 18, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, '0', 306, 309, 313, 314, ':', 316, '<', 318, 319, '@', 11, 12, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 271, ',', '^', '`', 315, 259, 274, 317, 'r', '>', '|', '~', '!', '#', '%', "'", ')', '+', '-', '/', '.', ';', '=', 305, '"', 'U', '[', ']', 263, 16, '&', 'R', 'u', '(', '{', '}', 264]),
 313: set([257, 258, 299, 260, 263, 8, 265, 266, 267, 268, 269, 270, 15, 272, 273, 18, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, '*', 300, 301, 302, 303, 304, '0', 306, 309, 314, ':', 316, '<', 318, 319, '@', 11, 12, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 271, ',', '^', '`', 315, 259, 274, 317, 'r', '>', '|', '~', '!', '#', '%', "'", ')', '+', '-', '/', '.', ';', '=', 305, '"', 'U', '[', ']', 16, '&', 'R', 'u', '(', '{', '}', 264]),
 314: set([257, 259, "'", 330, 11, 332, 333, 334, 'R', '"', 'u', 'U', 331, 'r']),
 315: set(['.']),
 316: set([16]),
 317: set(['#']),
 318: set([12]),
 319: set([16, '#', 309, 12, 316, 317, 318]),
 320: set([321, 322, 323, 324, '0', 18]),
 321: set(['0', 322, 323, 324, 18]),
 322: set(['0']),
 323: set(['0']),
 324: set(['0', 18]),
 325: set([321, 322, 323, 324, 326, 327, 328, 15, 18, '.', '0']),
 326: set([321, 322, 323, 324, 327, 328, '.', '0', 18, 15]),
 327: set(['.', 15]),
 328: set([321, 322, 323, 324, '0', 18]),
 329: set(['e', 'E']),
 330: set(["'"]),
 331: set(['"']),
 332: set(["'"]),
 333: set(['"']),
 334: set(['u', 'R', 'r', 'U']),
 335: set(['0', 18, 15]),
 336: set([299, 300, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, '*', '-', 301, 302, 303, 304, 305, '=', '<', '>', '!', 343, '%', '^', '/', '&', '+', '|', '~']),
 337: set([264, 341, ')', ']', 266, 283, '}']),
 338: set([340, 263, '(', '[', '{', 265, 282]),
 339: set(['`', '@', 268, 269, ',', 306, 342, 281, ';']),
 340: set(['(', 263, '[', 265, 282, '{']),
 341: set([')', 264, '}', 266, 283, ']']),
 342: set(['`', 306, '@', 281, ';', 268, 269, ',']),
 343: set(['*', '-', 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, '=', '<', '>', '!', '%', '^', '/', '&', '|', '+', '~'])}

# terminals:

terminals  = set([1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, '!', '#', '"', '%', "'", '&', ')', '(', '+', '*', '-', ',', '/', '.', '0', ';', ':', '=', '<', '>', '@', 'E', 'J', 'L', 'R', 'U', 'X', '[', ']', '^', '`', 'e', 'j', 'l', 'r', 'u', 'x', '{', '}', '|', '~'])

# symbols of:

symbols_of  = {256: set([1]),
 257: set([11, 15]),
 258: set([335]),
 259: set([330, 331, 332, 333, 334]),
 260: set([8]),
 261: set([2]),
 262: set([3]),
 263: set(['(']),
 264: set([')']),
 265: set(['[']),
 266: set([']']),
 267: set([':']),
 268: set([',']),
 269: set([';']),
 270: set(['+']),
 271: set(['-']),
 272: set(['*']),
 273: set(['/']),
 274: set(['|']),
 275: set(['&']),
 276: set(['<']),
 277: set(['>']),
 278: set(['=']),
 279: set(['.']),
 280: set(['%']),
 281: set(['`']),
 282: set(['{']),
 283: set(['}']),
 284: set(['=']),
 285: set(['!', '=']),
 286: set(['=', '<']),
 287: set(['=', '>']),
 288: set(['~']),
 289: set(['^']),
 290: set(['<']),
 291: set(['>']),
 292: set(['*']),
 293: set(['+', '=']),
 294: set(['=', '-']),
 295: set(['*', '=']),
 296: set(['=', '/']),
 297: set(['=', '%']),
 298: set(['=', '&']),
 299: set(['=', '|']),
 300: set(['=', '^']),
 301: set(['=', '<']),
 302: set(['=', '>']),
 303: set(['*', '=']),
 304: set(['/']),
 305: set(['=', '/']),
 306: set(['@']),
 307: set([4]),
 308: set([5]),
 309: set([17, 10, 317]),
 310: set([6]),
 311: set([7]),
 312: set([256, 313]),
 313: set([336, 337, 338, 339, 260, 267, 314, 315, 258, 319]),
 314: set([257, 259]),
 315: set(['j', 15, 329, 'J', '.']),
 316: set([16, 10, 12, 309]),
 317: set(['#']),
 318: set([12]),
 319: set([316, 309, 318]),
 320: set([321, 'l', 'L']),
 321: set([322, 323, 324]),
 322: set(['0', 13, 'X', 'x']),
 323: set(['0', 14]),
 324: set(['0', 18, 15]),
 325: set([321, 'J', 326, 'j']),
 326: set([328, 327]),
 327: set([329, '.', 15]),
 328: set([321, 329]),
 329: set(['e', 'E', '+', '-', 15]),
 330: set([17, "'"]),
 331: set([17, '"']),
 332: set([17, "'"]),
 333: set([17, '"']),
 334: set(['r', 'u', 'U', 'R']),
 335: set(['J', 329, 'j', 13, 14, 15, '0', 18, 'x', 'X', '.', 'L', 'l']),
 336: set([343]),
 337: set([341]),
 338: set([340]),
 339: set([342]),
 340: set([265, 282, 263]),
 341: set([264, 266, 283]),
 342: set([281, 306, 268, 269]),
 343: set([270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305])}

# keywords:

keywords  = set(['!', '#', '"', '%', "'", '&', ')', '(', '+', '*', '-', ',', '/', '.', '0', ';', ':', '=', '<', '>', '@', 'E', 'J', 'L', 'R', 'U', 'X', '[', ']', '^', '`', 'e', 'j', 'l', 'r', 'u', 'x', '{', '}', '|', '~'])

# pseudo_token:

pseudo_token  = {10: set(['\n', '\r']),
 11: set(['A', 'C', 'B', 'E', 'D', 'G', 'F', 'I', 'H', 'K', 'J', 'M', 'L', 'O', 'N', 'Q', 'P', 'S', 'R', 'U', 'T', 'W', 'V', 'Y', 'X', 'Z', '_', 'a', 'c', 'b', 'e', 'd', 'g', 'f', 'i', 'h', 'k', 'j', 'm', 'l', 'o', 'n', 'q', 'p', 's', 'r', 'u', 't', 'w', 'v', 'y', 'x', 'z']),
 12: set([' ', '\t', '\x0b', '\n', '\r', '\x0c']),
 13: set(['1', '0', '3', '2', '5', '4', '7', '6', '9', '8', 'A', 'C', 'B', 'E', 'D', 'F', 'a', 'c', 'b', 'e', 'd', 'f']),
 14: set(['1', '0', '3', '2', '5', '4', '7', '6']),
 15: set(['1', '0', '3', '2', '5', '4', '7', '6', '9', '8']),
 16: set(['\\']),
 17: set([]),
 18: set(['1', '3', '2', '5', '4', '7', '6', '9', '8']),
 19: set(['A', 'C', 'B', 'E', 'D', 'G', 'F', 'I', 'H', 'K', 'J', 'M', 'L', 'O', 'N', 'Q', 'P', 'S', 'T', 'W', 'V', 'Y', 'X', 'Z', '_', 'a', 'c', 'b', 'e', 'd', 'g', 'f', 'i', 'h', 'k', 'j', 'm', 'l', 'o', 'n', 'q', 'p', 's', 't', 'w', 'v', 'y', 'x', 'z']),
 20: set(['A', 'C', 'B', 'E', 'D', 'G', 'F', 'I', 'H', 'K', 'J', 'M', 'L', 'O', 'N', 'Q', 'P', 'S', 'U', 'T', 'W', 'V', 'Y', 'X', 'Z', '_', 'a', 'c', 'b', 'e', 'd', 'g', 'f', 'i', 'h', 'k', 'j', 'm', 'l', 'o', 'n', 'q', 'p', 's', 'u', 't', 'w', 'v', 'y', 'x', 'z']),
 21: set(['\t', ' ', '\x0b', '\x0c']),
 22: set(['A', 'a', 'C', 'B', 'D', 'F', 'f', 'c', '1', '0', '3', '2', '5', '4', '7', '6', '9', '8', 'b', 'd']),
 23: set(['9', '8']),
 24: set(['A', 'a', 'C', 'B', 'D', 'F', 'f', 'c', 'b', 'd'])}

