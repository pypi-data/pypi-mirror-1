0.6.8
=============
	* Added config.py key use_session, to control session support. Default is False
	* Cleanup some of the default pages, remove some needless comments.

0.6.7
=============
	* Fix 'Coercing To Unicode' bug in createproject command (thanks to manatlan@gmail.com)

0.6.6
=============
	* Add config.debug as a key used to control wsgi debugging output. Default
	is False
	* Expose config.debug in config.py by default
	* Make main.py executable by default
	* Make app to still run properly in absence of config.auth_plugin setting.
	* Comment out auth_plugin by default
	* Leave only mysql based db configs in config.py

0.6.5
=============
	* fixup sys.path to properly locate the project folder (currently the pwd, latter, may be gotten via pkg_resources) whenever we do import hacks


0.6.4
=============
	* fix bad packaging in 0.6.3. meh! :(

0.6.3
=============
	* fix depedencies spelling errors in setup.py for SQLAlchemy and SQLObject

0.6.2
=============
	* Pull out transaction support from SqlObjectDB, too many issues now.  Continue with other stabilization
	* Add simpleweb-admin help and related commands (command help is gotten via doc-string)
	* pull out main.css into /static - Finally!

0.6.1 - Beginning stabilization towards version 1.0, no drastically new
features for now
=============
	* Make all plugin names in config.py reflect the fact that they're plugins (config.db_plugin, config.auth_plugin, etc)
	* Couple of small bug-fixes

0.6
=============
	* Simple Per Session User Mechanism - Provides request.session.user (also via plugin)
	* Auth Mechanism provided with default User Mechanism, complete with decorator based dispatch method protection that is user and roles aware. (@config.auth_plugin.require(users, roles))
	* Development server hosting static pages (Funky middleware using help from static.Cling), no more borrowing (ahem stealing!) from web.py :)
	* When hosted, /static/ can/should be managed by http server (preferred method for now).
	* Change from MemorySessionStore() to DiskSessionStore(), was breaking when not on development server.
	* Start easy integration for transaction support in SqlObjectDB plugin.
	* register with PyPI


0.5
=============
	* A simpleway of specifying how app will run: method run(method='fcgi|cgi|None') #other methods coming
	* Simple lighttpd(fcgi) deployment
 	* Sessions (request.session) using flup.middleware.session.SessionMiddleware
	* Stole webpy's internal webserver for serving up our static pages in our
	development server. request.redirect() not working :(

0.4
==============
	* Change from ROUTES dispatch to Selector
	* Add yaro wrapper for simplifying handlers

0.3
==============
	* config.py for settings
	* urls.py for urls
	* models.py
	* A module based HTTP methods dispatcher (like web.py only using modules not classes)
	* A template plugin system (Cheetah [default] working right now)
	* An ORM plugin system (sqlalchemy & sqlobject[default])
	* A simple admin tool with an extensible plugin system 
		commands supported :
			- run
			- createtables [need support for createtable <tablename>, droptable <tablename>]
			- droptables
			- createproject

