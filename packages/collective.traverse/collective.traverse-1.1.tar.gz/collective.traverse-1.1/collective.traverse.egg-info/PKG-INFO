Metadata-Version: 1.0
Name: collective.traverse
Version: 1.1
Summary: Traverse to Object by Interface
Home-page: http://www.brainson.de/
Author: Brainson New Media GmbH, D9T GmbH
Author-email: info@brainson.de
License: GPL
Description: =================================================
        collective.traverser - object lookup by interface
        =================================================
        
        ------------
        Introduction
        ------------
        
        This product provides a utility that returns a object which provides
        a given interface. The returned object could be the given object or
        any object down the path towards the root.
        
        >>> from collective.traverse.interfaces import ITraverse
        >>> from somewhere import IMyInterface
        >>> root_traverser = getUtility(ITraverse, name="rootTraverser")
        >>> myType = root_traverser(self.context, IMyInterface)
        
        
        ------------
        Installation
        ------------
        
        Add this to your buildout:
        
        [buildout]
        eggs = collective.traverse
        
        [instance]
        zcml = collective.traverse
        
        And then run buildout.
        
        
        
        Changelog
        =========
        
        collective.traverse - 1.1 [20090605]
        
        - Fixed a recursion bug when using portal_setup. There, somehow parent == context ;) [Daniel Kraft]
        
        collective.traverse - 1.0 Unreleased
        
        - Initial package structure.
        [zopeskel]
        
        
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
