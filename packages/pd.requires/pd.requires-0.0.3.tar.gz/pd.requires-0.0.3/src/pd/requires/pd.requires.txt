Краткое описание пакета
=======================

Пакет разработан для анализа зависимостей в модулях на питоне. Помимо библиотеки,
предоставляет три утилиты:

    find_requires 
        находит все зависимости, требуемые питоновским пакетом.
        Зависимости распечатываются (пока) в формате
        "python<X>.<Y>(<DEPENDENCE>)", где X,Y - номера версии питона, а
        DEPENDENCE -- путь к модулю так, как он указывается в операторе
        import. Для каждой зависимости указывается в каком файле она
        возникла.
        
        Формат вызова::

            find_requires <FULL MODULE PATH> [<FULL MODULE PATH>]

        Ключи:

            "-f (RPM|PYPI)"
                Различный формат вывода списка зависимостей,
                по умолчанию PYPI; 
                
            "-r"
                Выводить файл из которого возникла данная зависимость;
            
    find_provides
        находит все     зависимости, требуемые питоновским
        пакетом.  Зависимости распечатываются (пока) в формате
        "python<X>.<Y>(<DEPENDENCE>)".
        
        Формат вызова::
    
            find_provides <FULL MODULE PATH> [<FULL MODULE PATH>]

        Ключи:
        
            "-f (RPM|PYPI)"
                Различный формат вывода списка зависимостей,
                по умолчанию PYPI; 
            

    imalyzer
        утилита анализатор зависимостей между файлами модулей питона,
        файлы передаются в утилиту единым списком, и утилита составляет отчет
        об их использовании.
        
        Предполагаемое назначение - первичный анализ модулей на разбивку
        на пакеты и субпакеты. В настоящее время в этом качестве
        не пригодна. Рекомендуемый формат запуска::
    
            imalyzer $(find $PWD -name "*.py")    
            
Предполагается что все пакеты запускается из того каталога, в который
установлены анализируемые модули, это не очень удобно, но такого решения
требует унаследованный код. Упомянутый выше FULL MODULE PATH -- это путь к
модулю, включающий в себя все каталоги.

    