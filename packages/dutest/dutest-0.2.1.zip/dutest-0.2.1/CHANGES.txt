
What's new in version 0.2.0:
----------------------------

- PackageTestLoader class added to dutest module. It loads
  all the tests found throughout a package hierarchy using another
  loader. The later is used for retrieving the tests contained inside
  every module matching a specified pattern.

- DocTestLoader class in oop.utils.dutest does not raise ValueError
  exception if no doctests are found in a module. This is doctest
  behavior. It was assumed up to this point, but now it has proven to
  be a headache when these loaders are used together with instances of
  PackageTestLoader in order to retrieve all the tests defined across
  a package hierarchy.


What's new in version 0.1.2:
----------------------------

- Bug found... DocTestCase instances could not be instantiated because
  ``None`` was supplied in to the initializer as the test method
  name. This bug remained hidden somehow while executing the test
  using oop.test.check_oopdbc(), and even when importing
  oop.utils.dutest (which is actually the same implementation).

- Bug found... There was a missing backslash (\) at the end of line 32
  in oop.utils.testing.

Both problems have been repaired now.


What's new in version 0.1.1:
----------------------------

- The class oop.utils.testing.VerboseTestProgram has been moved onto 
  dutest module. Release 0.1.0 did not include it. Thanks to Michal
  Kwiatkowski for notifying me so [1].

- Default test loader and runner have been added to this module as 
  well. The default loader is an instance of MultiTestLoader that
  combines the suites loaded by unittest.TestLoader and
  dutest.DocTestLoader.

- dutest.main is an alias for dutest.VerboseTestProgram. This class
  fixes a minor bug (... IMO) I found while specifying different
  verbosity levels from the command line to unittest.TestProgram. It
  also employs by default dutest.defaultTestLoader instead of
  unittest.defaultTestLoader.

[1] [TIP] Fwd: An OO API for doctest / unittest integration...
    (http://lists.idyll.org/pipermail/testing-in-python/2008-August/000918.html)


What's new in version 0.1.0:
----------------------------

    doctest extensions:
    -->    A whole new unittest API to integrate doctest tests.
    -->    It allows to acquire the individual results of each 
        and every DocTest instances' example.
    -->    You do not need to use DocTestRunner output streams
        to collect test results.
    -->    Gathering individual examples' results.
    -->    Failures and errors are collected individually into
        TestResults, making easier the automation of
        post-testing analysis.
    -->    A new hierarchy of doctest TestCases is now 
        possible so for example, setUp and tearDown may
        be redefined across a hierarchy of TestCases 
        instead of providing this methods as parameters to
        a function (breaking OOP philosophy and logic); or
        maybe even to represent failures and errors in a
        custom way.
    -->    A new doctest TestLoader now allows to load doctest
        TestCases using unittest-style, provides integration
        with TestProgram, supports building complex TestSuites
        in a more natural way, and eases the use of specialized 
        instances of TestCases built out of doctest examples.
    -->    Allows to perform regression testing over tests written
        using doctest.

