Installation on Windows
-----------------------

You best start with the standard Python installation on windows. It
should have all you need.

You still install additional modules:

- fpconst 0.7.0
- SOAPpy 0.11.6
- medusa 0.5.4
- TooFPy in the latest version

There are optional packages you can install:

- logging 0.4.9.5 (if you use Python 2.2)
- pycrypto 2.0 (without it you can't use RSA authentication)
- wsgiref 0.0.1 (without it you can't run the WSGI gateway)

You should follow the installation instructions in the INSTALL-FROM-SOURCE
file for these modules. Mostly it's just

python setup.py install

time. One noteable exception is the pycrypto module. This needs a C compiler
to get up and running. You might want to use the binary distribution you can
find in the Twisted contrib repository at the following URL instead:

http://twisted.sourceforge.net/contrib/

If you neither like the prebuilt binary nor want to compile C code, just don't
install it - all you currently lose is RSA authentication (and that's a non
standard feature anyway - if you don't use TooFPy both on the client and the
server, you won't have any use of it, anyway!)

Your Python installation includes a Scripts directory where the
two needed scripts are located. These scripts are:

- tsctl: starts the actual toolserver. Needed for debugging and initialization.
- tsctl-win32.py: the service script, needed to set up TooFPy as a service.

After installing all packages, you should become the user who should run the
toolserver and run the tsctl script with the "init" parameter to create the
.Toolserver directory. It is created in your %USERPROFILE% path.

You may want to edit your toolserver config. It is located at:

%USERPROFILE%/.Toolserver/etc/ToolserverConfig.py

After editing the config, you need to become the Administrator. Now run
the tsctl-win32.py script with the "install" parameter. This creates a
service that manages the toolserver itself.

After installing the service, you can use

net start TooFPy

to start the service and

net stop TooFPy

to stop the service. Now start writing some tools, put them into

%USERPROFILE%/.Toolserver/tools/

and stop and start your toolserver again to make them available. Keep on
hacking.

The sample tools usually are for Linux, so most of them won't work on Windows.
Just don't install them - you don't need them to run TooFPy.

