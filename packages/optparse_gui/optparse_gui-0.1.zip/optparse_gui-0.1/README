Welcome to optparse_gui!
 
= What is *_optparse_gui_*? = 

In a single sentence: import *_optparse_gui_* as _optparse_

_optparse_ is a great built-in python module for parsing command line arguments.
see http://docs.python.org/lib/module-optparse.html for more info.

*_optparse_gui_* is a drop-in replacement for _optparse_.
It allows entering command line arguments in a dynamically generated wx-based dialog.
*_optparse_gui_* generates the dialog depending on the provided _optparse_ options:
 * CheckBox for boolean options
 * ComboBox for "choice" options
 * TextCtrl for all other options
 * An extra TextCtrl for entering non-option command line arguments
Also, the dialog contains context-sensitive help for every control.

Ever wanted to transparently add a GUI to your command-line driven python scripts? 
This is the module for you.

= Installing =

In order to install, simply run "setup.py install" from the command line.
On windows - you can also use the provided installer.

= Using =

Like the title says - simply "import *_optparse_gui_* as _optparse_"

A more elaborate use case might be to use *_optparse_gui_* when the application
is ran with no command line arguments ( i.e. a double-click on the module's icon ),
but use the original _optparse_ to handle the command line arguments if they are
given.
That way, a user can drive your app using a GUI, and yet - the app can
be automated by passing command line arguments.
A sample for this might be as follows ( also included in test\test.py ):

{{{
import sys
import optparse
import optparse_gui

def main():
	if 1 == len( sys.argv ):
		optparser_class = optparse.OptionParser
	else:
		optparser_class = optparse_gui.OptionParser

	parser = optparser_class.OptionParser()
	parser.add_option( ... )
	parser.add_option( ... )
	parser.add_option( ... )

	option, args = parser.parse_args()

	do_usefull_stuff( options, args )
}}}

