<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>met -- Multinomial Exact Tests</title>
<style type="text/css">
html, body {
	padding: 0;
	margin: 0;
	font-family: Arial, Helvetica, sans-serif;
	color: black;
	/*background-color: #FFEBCD;*/
	background-color: rgb(242, 236, 209);
}
div#topheader {
	position: absolute;
	top: 0; left: 10%; width: 65%;
	background-color: #FFE4B5;
	background-color: rgb(228, 215, 152);
	border-bottom: 4px solid #814324;
	border-left: 4px solid #814324;
	border-right: 4px solid #814324;
	height: 6em;
	}
div#title {
	position: relative;
	top: 0.5em; left: 5%; width: 75%;
	padding: 0.5em 3em 0.5em 0em;
	text-align: center;
	font-family: Arial, Helvetica, sans-serif;
	font-size: 1.5em;
	font-weight: bold;
	word-spacing: 0.05em;
	color: #814324;
	background-color: rgb(250, 250, 210);
	border: 1px solid #814324;
	filter: alpha(opacity=80);
	opacity: 0.8;
	}
div#subtitle {
	position: absolute;
	bottom: 0.5em; width: 100%;
	text-align: center;
	font-family: Arial, Helvetica, sans-serif;
	font-size: 0.8em;
	font-weight: bold;
	color: #814324;
	}
#content {
	margin: 5.5em 20px 0 20px;
	}
p {
	text-indent: 0;
	margin: 0 0;
	word-spacing: 0.05em;
	max-width: 55em;
	}
p + p {
	text-indent: 2em;
	margin: 0.2em 0 0 0;
	}
li {
	max-width: 50em;
	margin-top: 0.3em;
	}
table {
	margin: 1em 40px;
	}
td, th {
	padding: 0 10px;
	}
div.code {
	margin: 0.5em 2em;
	padding: 0.25em 0.25em;
	border: 1px dotted rgb(123, 108, 34);
	font-family: "Courier New", Courier, fixed;
	font-size: 0.9em;
	/*background-color: rgb(250, 250, 210);*/
	background-color: rgb(252, 252, 226);
	/*color: rgb(129, 113, 36);*/
	color: rgb(123, 108, 34);
	white-space: pre;
	}
span.code {
	font-family: "Courier New", Courier, fixed;
	}
span.module, span.function, span.class, span.exception {
	font-family: "Courier New", Courier, fixed;
	font-weight: bold;
	}
span.arg {
	font-family: Arial, Helvetica, sans-serif;
	font-style: italic;
	}
dl {
	margin-left: 2em;
	}
dl.contents dt {
	margin-top: 1em;
	}
dl.args {
	margin-left: 2em;
	}
dl.args dt {
	margin-top: 0;
	font-style: italic;
	}
</style>
</head>
<body>
<div id="topheader"><div id="subtitle">Multinomial Exact Tests</div></div>
<div id="title">met.py</div>
<div id="content">
<p><span class="module">met.py</span> is a Python module that allows you to 
define a pair of multinomial distributions (conceptually 'control' and 'test' distributions)
 and then compute one- and two-sided <i>p</i> values
to test whether the 'test' distribution is equivalent to the 'control' distribution.
The likelihood of all possible 'control' distributions can be evaluated and the distribution of
p values can be expressed in terms of the likelihood of the observed 'control' distribution.</p>

<h2>Module Contents</h2>

<h3>Functions</h3>

<p>The <span class="module">met</span> module defines the following functions:</p>

<dl class="contents">
<dt><span class="code">met.</span><span class="function">fact</span>(<span class="arg">n</span>)</dt>
<dd>Return the factorial of the argument <span class="arg">n</span>.</dd>

<dt><span class="code">met.</span><span class="function">fillzeroes</span>(<span class="arg">case, factor</span>)</dt>
<dd>The 'case' argument is a list of counts; if there are any zero counts
in the case, the non-zero counts are multiplied by 'factor' and the zero counts
are replaced with 1.  This function is used to adjust zero counts (and hence probabilities)
among the 'control' sample.</dd>

<dt><span class="code">met.</span><span class="function">listprod</span>(<span class="arg">list</span>)</dt>
<dd>Return the product of all elements of the list, or 1 if the list is empty.</dd>

<dt><span class="code">met.</span><span class="function">all_multinom_cases</span>(<span class="arg">categories, items</span>)</dt>
<dd>Return a list of all multinomial combinations (each a list) of 'items' items distributed
in all possible ways over 'categories' categories.</dd>

<dt><span class="code">met.</span><span class="function">obs_to_probs</span>(<span class="arg">obs</span>)</dt>
<dd>Standardize the list of observations to be a sequence of probabilities that sum to 1.0.</dd>

<dt><span class="code">met.</span><span class="function">onesided_exact_likelihood</span>(<span class="arg">ref_obs, site_obs <strong>[</strong>, ref_samples=None<strong>] [</strong>, fill_zeroes=False <strong>] [</strong>, fill_factor=10<strong>]</strong></span>)</dt>
<dd>Calculate the distribution of one-sided exact test probabilities based on the likelihood
	of observing the given distribution of reference area samples.  Return a list of tuples,
	where each tuple represents one of the possible distributions of reference area samples, and
	each tuple contains: 1) the distribution of reference area samples being evaluated; 2) the
	likelihood of that being the true reference area distribution given the observed
	distribution of reference area data; 3) the raw p value for the one-sided exact test
	for that reference area distribution; 4) the normalized likelihood for the case (normalized to
	the maximum likelihood), and 5) the final p value for the one-sided exact test,
	after the raw p value has been multiplied by the normalized likelihood.
		<dl class="args"><dt>ref_obs</dt><dd>A list of reference category counts, ordered from 'best' to 'worst'.</dd>
		<dt>site_obs</dt><dd>A list of site category counts, ordered from 'best' to 'worst'.</dd>
		<dt>ref_samples</dt><dd>The number of reference area samples to use to compute the cases
						that will be used for the multinomial probabilities that will be
						used to calculate likelihood of different reference probabilities.
						If None, sum(ref_obs) will be used instead.</dd>
		<dt>fill_zeroes</dt><dd>Boolean indicating whether or not zeroes should be filled before
						probabilities are calculated.</dd>
		<dt>fill_factor</dt><dd>The factor to be used in conjunction with fill_zeroes.</dd></dl>
	</dd>

<dt><span class="code">met.</span><span class="function">twosided_exact_likelihood</span>(<span class="arg">ref_obs, site_obs <strong>[</strong>, ref_samples=None<strong>] [</strong>, fill_zeroes=False <strong>] [</strong>, fill_factor=10<strong>]</strong></span>)</dt>
<dd>Calculate the distribution of two-sided exact test probabilities based on the likelihood
	of observing the given distribution of reference area samples.  Return a list of tuples,
	where each tuple represents one of the possible distributions of reference area samples, and
	each tuple contains: 1) the distribution of reference area samples being evaluated; 2) the
	likelihood of that being the true reference area distribution given the observed
	distribution of reference area data; 3) the raw p value for the two-sided exact test
	for that reference area distribution; 4) the normalized likelihood for the case (normalized to
	the maximum likelihood), and 5) the final p value for the two-sided exact test,
	after the raw p value has been multiplied by the normalized likelihood.
		<dl class="args"><dt>ref_obs</dt><dd>A list of reference category counts, ordered from 'best' to 'worst'.</dd>
		<dt>site_obs</dt><dd>A list of site category counts, ordered from 'best' to 'worst'.</dd>
		<dt>ref_samples</dt><dd>The number of reference area samples to use to compute the cases
						that will be used for the multinomial probabilities that will be
						used to calculate likelihood of different reference probabilities.
						If None, sum(ref_obs) will be used instead.</dd>
		<dt>fill_zeroes</dt><dd>Boolean indicating whether or not zeroes should be filled before
						probabilities are calculated.</dd>
		<dt>fill_factor</dt><dd>The factor to be used in conjunction with fill_zeroes.</dd></dl>
	</dd>
</dl>

<h3>Classes</h3>

<p>The <span class="module">met</span> module defines the following class:</p>

<dl class="contents">
<dt>class <span class="code">met.</span><span class="class">Multinom</span>(<span class="arg">ref_obs, site_obs</span>)</dt>
<dd>Arguments are lists.  Each list contains the number (count) of observations
in different cagegories.  If one-sided tests will be done, the categories should be listed
in order from 'best' to 'worst' (implying that any alternative distribution with one or more counts
moved from an earlier category to a later category represents a 'worse' condition).  Both lists should
be the same length, and corresponding elements in the two lists should represent the same category.</dd>
</dl>

<h3>Exceptions</h3>

<p>The <span class="module">met</span> module defines the following exception:</p>

<dl class="contents">
<dt>exception <span class="code">met.</span><span class="exception">Multinom_Error</span></dt>
<dd>An exception class for all errors in the <span class="code">met</span> module.</dd>
</dl>

<h2>Multinom Objects</h2>

<p>A <span class="code">Multinom</span> object must be instantiated so that its methods can
be called to perform exact tests.  Objects of the <span class="code">Multinom</span> class
also contain attributes that (can) store results of the exact tests in addition to the <i>p</i>
values that are returned by those methods.

<p><span class="code">Multinom</span> objects have the following public methods:</p>

<dl class="contents">
<dt><span class="code">Multinom.</span><span class="function">new_site_obs</span>(<span class="arg">obs</span>)</dt>
<dd>Use different site (test) data with the same reference (control) data that were originally used
to define the object.</dd>

<dt><span class="code">Multinom.</span><span class="function">onesided_exact_test</span>(<span class="arg"><strong>[</strong>fill_zeroes=False<strong>] [</strong>, fill_factor=10<strong>] [</strong>, save_cases=False<strong>]</strong></span>)</dt>
<dd>Compute, return, and store the p value for a one-sided
exact multinomial test of the distribution of site observations
against reference observations.
		<dl class="args"><dt>fill_zeroes</dt><dd>Boolean: adjust zero counts (probabilities) in the reference data.  The adjustment is made
				by multiplying non-zero counts by <span class="arg">fill_factor</span> and setting zero counts to 1.</dd>
		<dt>fill_factor</dt><dd>The factor by which to multiply non-zero reference counts if 
				<span class="arg">fill_zeroes</span> is true.  Defaults to 10.</dd>
		<dt>save_cases</dt><dd>Boolean: save a list of all 'more extreme' cases found during the test.</dd></dl>
</dd>

<dt><span class="code">Multinom.</span><span class="function">twosided_exact_test</span>(<span class="arg"><strong>[</strong>fill_zeroes=False<strong>] [</strong>, fill_factor=10<strong>] [</strong>, save_cases=False<strong>]</strong></span>)</dt>
<dd>Compute, return, and store the p value for a two-sided
exact multinomial test of the distribution of site observations
against reference observations.
		<dl class="args"><dt>fill_zeroes</dt><dd>Boolean: adjust zero counts (probabilities) in the reference data.  The adjustment is made
				by multiplying non-zero counts by <span class="arg">fill_factor</span> and setting zero counts to 1.</dd>
		<dt>fill_factor</dt><dd>The factor by which to multiply non-zero reference counts if 
				<span class="arg">fill_zeroes</span> is true.  Defaults to 10.</dd>
		<dt>save_cases</dt><dd>Boolean: save a list of all 'more extreme' cases found during the test.</dd></dl>
</dd>
</dl>

<p><span class="code">Multinom</span> objects have the following public attributes:

<dl class="contents">
<dt><span class="code">Multinom.</span><span class="function">cases</span></dt>
<dd>A list of the 'more extreme' arrangements of site data evaluated by the latest test.  Valid
only if the <span class="arg">save_cases</span> argument was used with the latest test.</dd>

<dt><span class="code">Multinom.</span><span class="function">n_extreme_cases</span></dt>
<dd>The number of 'more extreme' arrangements of site data evaluated by the latest test.</dd>

<dt><span class="code">Multinom.</span><span class="function">p_value</span></dt>
<dd>The <i>p</i> value returned by the latest test.</dd>

<dt><span class="code">Multinom.</span><span class="function">ref_obs</span></dt>
<dd>The list of reference area observations (counts).</dd>

<dt><span class="code">Multinom.</span><span class="function">ref_probs</span></dt>
<dd>The list of reference area probabilities corresponding to <span class="function">ref_obs</span>.</dd>

<dt><span class="code">Multinom.</span><span class="function">site_obs</span></dt>
<dd>The list of site observations (counts).</dd>

</dl>

<h2>Copyright and License</h2>
<p>Copyright (c) 2009, R.Dreas Nielsen</p>
<p>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
The GNU General Public License is available at 
<a href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</a>.</p>
</ol>
</div>
</body>
</html>
