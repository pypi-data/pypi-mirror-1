"""
constants - pyvb module that holds constants used throughout the pyvb package.
"""
import re
from pyvb import command
from pyvb import exception
VB_COMMAND='vboxmanage'
try:
	command.VBCommand(command=VB_COMMAND).run()
except exception.vbCommandError:
	VB_COMMAND='VBoxManage'
VB_COMMAND_LIST_VMS='%s list vms'%(VB_COMMAND)
VB_COMMAND_LIST_OSTYPES='%s list ostypes'%(VB_COMMAND)
VB_COMMAND_LIST_HOSTDVDS='%s list hostdvds'%(VB_COMMAND)
VB_COMMAND_LIST_DVDS='%s list dvds'%(VB_COMMAND)
VB_COMMAND_LIST_HDDS='%s list hdds'%(VB_COMMAND)
VB_COMMAND_SHOWVMINFO='%s showvminfo'%(VB_COMMAND)
VB_COMMAND_SHOWVDIINFO='%s showvdiinfo'%(VB_COMMAND)
VB_COMMAND_STARTVM='%s startvm'%(VB_COMMAND)
VB_COMMAND_CONTROLVM='%s controlvm'%(VB_COMMAND)
VB_COMMAND_CREATEVM='%s createvm'%(VB_COMMAND)
VB_COMMAND_CREATEVDI='%s createvdi'%(VB_COMMAND)
VB_COMMAND_MODIFYVM='%s modifyvm'%(VB_COMMAND)
VB_COMMAND_REGISTERIMAGE='%s registerimage'%(VB_COMMAND)
VB_COMMAND_CLONEVDI='%s clonevdi'%(VB_COMMAND)

VB_RE_NAME=re.compile('(Name: *)(.*)')
VB_RE_GUESTOS=re.compile('(Guest OS: *)(.*)')
VB_RE_UUID=re.compile('(UUID: *)(.*)')
VB_RE_UUID2=re.compile('.*(UUID: *)(.*)\)')
VB_RE_UUID3=re.compile('(Disk image created. UUID: *)(.*)')
VB_RE_CONFIGFILE=re.compile('(Config file: *)(.*)')
VB_RE_MEMORYSIZE=re.compile('(Memory size: *)(.*)')
VB_RE_VRAMSIZE=re.compile('(VRAM size: *)(.*)')
VB_RE_BOOTMENUMODE=re.compile('(Boot menu mode: *)(.*)')
VB_RE_ACPI=re.compile('(ACPI: *)(.*)')
VB_RE_IOACPI=re.compile('(IOAPIC: *)(.*)')
VB_RE_TIMEOFFSET=re.compile('(Time offset: *)(.*)')
VB_RE_VIRTEXT=re.compile('(Hardw. virt.ext: *)(.*)')
VB_RE_STATE=re.compile('(State: *)(.*)')
VB_RE_STATE2=re.compile('(.*) \(since (.*)\)')
VB_RE_MONITORCOUNT=re.compile('(Monitor count: *)(.*)')
VB_RE_FLOPPY=re.compile('(Floppy: *)(.*)')
VB_RE_PRIMARYMASTER=re.compile('(Primary master: *)(.*)')
VB_RE_DVD=re.compile('(DVD: *)(.*)')
VB_RE_NIC1=re.compile('(NIC 1: *)(.*)')
VB_RE_NIC2=re.compile('(NIC 2: *)(.*)')
VB_RE_NIC3=re.compile('(NIC 3: *)(.*)')
VB_RE_NIC4=re.compile('(NIC 4: *)(.*)')
VB_RE_UART1=re.compile('(UART 1: *)(.*)')
VB_RE_UART2=re.compile('(UART 2: *)(.*)')
VB_RE_AUDIO=re.compile('(Audio: *)(.*)')
VB_RE_CLIPBOARDMODE=re.compile('(Clipboard Mode: *)(.*)')
VB_RE_SHAREDFOLDERS=re.compile('(Shared folders: *)(.*)')
VB_RE_ID=re.compile('(ID: *)(.*)')
VB_RE_DESCRIPTION=re.compile('(Description: *)(.*)')
VB_RE_PATH=re.compile('(Path: *)(.*)')
VB_RE_ACCESSIBLE=re.compile('(Accessible: *)(.*)')
VB_RE_STORAGETYPE=re.compile('(Storage type: *)(.*)')
VB_RE_USAGE=re.compile('(Usage: *)(.*)')
VB_RE_SHAREDFOLDER_NAME=re.compile('(\')(.*)\',')
VB_RE_SHAREDFOLDER_PATH=re.compile('.*(Host path: )\'(.*)\'')
VB_RE_STATE_NAME=re.compile('( )(.*) \(')
VB_RE_STATE_DATE=re.compile('(.*) \(since (.*)\)')
VB_RE_REGISTERED=re.compile('(Registered: *)(.*)')
VB_RE_SIZE=re.compile('(Size: *)(.*)')
VB_RE_CURRENT_DISK_SIZE=re.compile('(Current size on disk: *)(.*)')
