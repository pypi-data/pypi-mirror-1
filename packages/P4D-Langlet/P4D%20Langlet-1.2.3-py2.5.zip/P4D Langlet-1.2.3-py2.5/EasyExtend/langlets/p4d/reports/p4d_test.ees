__________________________________________________________________________________

 p4d

 On Python 2.5.1 (r251:54863, Apr 18 2007, 08:51:08) [MSC v.1310 32 bit (Intel)]

 Reuses session report p4d_test.ees

__________________________________________________________________________________

p4d> a:
.... 	b
....
P4D<a>
p4d>
p4d> elm a:
.... 	b
....
p4d> assert a.b
p4d> assert a.b.text() == ''
p4d> assert a.b.comment() == ''
p4d> assert a.b.attributes() == {}
p4d> assert a.first_child().tag == 'b'
p4d> assert a.child("b").tag == 'b'
p4d> assert a.namespace().uri == None
p4d> assert a.namespace().prefix == None
p4d> elm a:
.... 	b(x = "io")
.... 	b(y = "oi")
....
p4d> assert len(a.b) == 2
p4d> assert raises(AttributeError, lambda: a.b.@x)
p4d> assert a.(@x == 'io').@x == 'io'
p4d> elm a:
.... 	b(x = "io")
.... 	b(y = "oi")
.... 	b(x = "joy", bar = 9)
....
p4d> assert a.(@x == 'joy').@bar == '9'
p4d>
p4d> elm a:
.... 	b(x = "io" y = "ja"): "bla"
.... 	b(x = "io"): "blub"
.... 	c(x = "io" y = "jo"): "blub"
....
p4d> a
P4D<a>
p4d> a.(_ == "bla")
[]
p4d> elm X:
.... 	&a
.... 	b:
.... 		&a
....
p4d>
p4d> X.a
[P4D<a>]
p4d> X.a.b
[P4D<b>, P4D<b>]
p4d> for b in X.a.b:
.... 	b.@x
....
'io'
'io'                                                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~
p4d> [b.@x for b in X.b.a.b]
['io', 'io']
p4d> assert ['io', 'io'] == [b.@x for b in X.b.a.b]
p4d> elm X:
.... 	k: (1,2,3)
....
p4d> [int(k.text()) for k in X.k]
[1, 2, 3]
p4d> assert [1,2,3] == [int(k.text()) for k in X.k]
p4d> X._tree
['X', {}, [['k', {}, [], '1'], ['k', {}, [], '2'], ['k', {}, [], '3']], '']
p4d>
p4d>
p4d> elm Y:
.... 	k: (1,2)
....
p4d> Y._tree
['Y', {}, [['k', {}, [], '1'], ['k', {}, [], '2']], '']
p4d> quit

--------------------.
Recorded assertions |
--------------------------------------------------------------------------------------------------
Status |ees ln |repl ln| Assertion
-------+-------+-------+--------------------------------------------------------------------------
OK     | 19    | 19    | assert a.b
OK     | 20    | 20    | assert a.b.text() == ''
OK     | 21    | 21    | assert a.b.comment() == ''
OK     | 22    | 22    | assert a.b.attributes() == {}
OK     | 23    | 23    | assert a.first_child().tag == 'b'
OK     | 24    | 24    | assert a.child("b").tag == 'b'
OK     | 25    | 25    | assert a.namespace().uri == None
OK     | 26    | 26    | assert a.namespace().prefix == None
OK     | 31    | 31    | assert len(a.b) == 2
OK     | 32    | 32    | assert raises(AttributeError, lambda: a.b.@x)
OK     | 33    | 33    | assert a.(@x == 'io').@x == 'io'
OK     | 39    | 39    | assert a.(@x == 'joy').@bar == '9'
ERROR  | 52    | 52    | assert a.(_ == "bla").@y == "ja"
OK     | 74    | 76    | assert ['io','io'] == [b.@x for b in X.a.b]
OK     | 75    | 77    | assert ['io, 'io'] == [b.@x for b in X.b.a.b]
OK     | 84    | 86    | assert ['io', 'io'] == [b.@x for b in X.b.a.b]
OK     | 90    | 92    | assert [1,2,3] == [int(k.text()) for k in X.k]
-------+-------+-------+--------------------------------------------------------------------------
__________________________________________________________________________________

