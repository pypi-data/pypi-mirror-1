Content manager
===============

For this section we need a content class.

  >>> from vudo.cmf.interfaces import IModel
  >>> class Model(object):
  ...     interface.implements(IModel)
  ...     title = None

  >>> model = Model()

Content objects must have a special name attribute; this is usually
managed by the traverser.

  >>> model.__name__ = "test"
  
  >>> from repoze.bfg.testing import DummyRequest
  >>> request = DummyRequest()
  
A default content manager is included.

  >>> from vudo.cmf.manager import DefaultContentManager
  >>> manager = DefaultContentManager(model)

The ``type_id`` is equal to the Python object id.
  
  >>> manager.type_id == id(Model)
  True

  >>> manager.get_url(request)
  'http://example.com/test/'

  >>> manager.get_actions(request)
  [<Action name="@@edit" url="http://example.com/test/@@edit">]

We can generate and id from our model.
  
  >>> manager.auto_generate_id()
  'id-...'

If a `title` is set, the id will be created by normalization.

  >>> model.title = u"Hello, world"
  >>> manager.auto_generate_id()
  u'hello-world'
