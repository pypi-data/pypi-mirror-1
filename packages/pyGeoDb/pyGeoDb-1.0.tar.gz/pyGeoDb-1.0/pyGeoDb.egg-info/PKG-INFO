Metadata-Version: 1.0
Name: pyGeoDb
Version: 1.0
Summary: distance calculation based on ZIP codes and map generation
Home-page: http://github.com/mdornseif/pyGeoDb
Author: Maximillian Dornseif
Author-email: md@hudora.de
License: UNKNOWN
Description: PyGeoDb - an Interfact op OpenGeoDb
        ===================================
        
        PyGoeDb is an Python Interface to OpenGeoDb_. It is all about Austrian, German
        and Swiss Postcodes and City location. The rest of this documentation is in
        german Language.
        
        Die ist ein Python Interface zu OpenGeoDb. "Im Mittelpunkt des Projektes
        OpenGeoDB steht der Aufbau einer m+APY-glichst vollst+AOQ-ndigen Datenbank mit
        Geokoordinaten zu allen Orten und Postleitzahlen (bisher: A,B,CH,D und FL)."
        (OpenGeoDB Wiki) Die Datenbank wird +APw-berwiegend zur Umkreissuche_ oder zur
        (groben) Geocodierung verwendet. In der PHP-Welt wird es fast ausschliesslich
        mit GeoClassPHP_ verwendet. F+APw-r Python gibt es bisher keine weit verbreitete
        L+APY-sung.
        
        Zus+AOQ-tzlich hilft PyGeoDb bei der Erstellung zon Postleitzahlen Karten. Dazu
        werden neben den OpenGeoDb Daten auch Informationen aus Openstreetmap
        herangezogen.
        
        .. _OpenGeoDb: http:+AC8ALw-opengeodb.giswiki.org+AC8
        .. _Umkreissuche: http:+AC8ALw-de.wikipedia.org+AC8-wiki+AC8-Umkreissuche
        .. _GeoClassPHP: http:+AC8ALw-sourceforge.net+AC8-projects+AC8-geoclassphp+AC8
        
        
        Nutzung
        -------
        
        
        Entfernungsberechnung
        +AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+
        
        PyGeoDb kann die Entfernung in Metern zwischen zwei Postleitzahlenbereichen
        berechnen. Dazu kann direkt eine Postleitzahl als String, ein dict, oder ein
        Objekt, dass dem AddressProtocol_ entspricht, +APw-bergeben werden::
        
        >>> import pygeodb
        >>> pygeodb.distance("42897", "50933") # Strings
        38131
        
        >>> pygeodb.distance({'plz': "42897"}, {'plz': "48143"}) # dicts
        90478
        
        >>> class LocationObject(object): pass
        >>> loc = LocationObject()
        >>> loc.plz = "50933"
        >>> pygeodb.distance(loc, "48143") # Objekte
        124737
        
        
        Sortieren nach Entfernung
        +AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4
        
        pyGeoDb kann eine Liste von Postleitzahlen nach der Entfernung zu einer
        bestimmten Postleitzahl sortieren. Dabei k+APY-nnen, Strings sowie Dicts und
        Objekte nach dem AddressProtocol gemischt werden::
        
        >>> pygeodb.nearest("42897", ["42477", "48143", {'plz': "45149"}, loc]) #doctest: +-ELLIPSIS
        ['42477', {'plz': '45149'}, <__main__.LocationObject object ...>, '48143']
        
        Wenn es relevant ist, wie weit die verschiedenen Postleitzahlen entfernt sind,
        kann auch dies mit zur+APw-ck gegeben werden::
        
        >>> pygeodb.distances("42897", ["50933", "42477", "48143", "45149", "42897"])
        [(0, '42897'), (7200, '42477'), (34466, '45149'), (38131, '50933'), (90478, '48143')]
        
        .. _AddressProtocol: http:+AC8ALw-github.com+AC8-hudora+AC8-huTools+AC8-blob+AC8-master+AC8-doc+AC8-standards+AC8-address_protocol.markdown
        
        
        Fehlerbehandlung
        +AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4
        
        Wenn eine Postleitzahl unbekannt ist, wird eine ValueError() Exception
        ausgel+APYA3w-t::
        
        >>> pygeodb.distance("42897", "99999") # Strings
        Traceback (most recent call last):
        File "<stdin>", line 1, in ?
        ValueError: Unknown PLZ: DE-99999
        
        
        Kartengeneriertung
        +AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+AH4AfgB+
        
        pyGeoDb kann Postleitzhalenkarten generieren. Dazu kommt die Graphikbibliothek
        Pycairo_ zum Einsatz, die nat+APw-rlich vorher installiert sein muss. Karten
        k+APY-nnen im PDF_, PNG_, EPS_ und SVG_ Format erstellt werden.
        
        Es gibt keine freie Datenquelle zu Gr+APY-sse und Form der einzelnen
        Postleitzahlenbereiche. Jedoch kann man sich der Form der
        Postleitzahlenbereiche ann+AOQ-hern, indem man ein `Voronoi-Diagramm`_ erzeugt.
        Dies weicht im Detail zwar deutlich von den realen Postleitzahlenbereichen ab,
        reicht aber f+APw-r Visualisierungsaufgaben aus. Zur Erzeugung des Graphen, der
        die Postleitzahlenbereiche unterteilt, wird der "Fortune Algorithmus"
        werwendet.
        
        Rufen Sie `.+AC8-plz_draw --help` auf, um die Aufrufparameter angezeigt zu
        bekommen. Beispieldateien kann man durch das Kommando `make maps` erstellen -
        die entsprechenden kommandos finden sich in der Datei Makefile unten.
        
        .. _Pycairo: http:+AC8ALw-cairographics.org+AC8-pycairo+AC8
        .. _PDF: https:+AC8ALw-github.com+AC8-mdornseif+AC8-pyGeoDb+AC8-raw+AC8-master+AC8-maps+AC8-deutschland_gebiete.pdf
        .. _PNG: https:+AC8ALw-github.com+AC8-mdornseif+AC8-pyGeoDb+AC8-raw+AC8-master+AC8-maps+AC8-deutschland_gebiete.png
        .. _EPS: https:+AC8ALw-github.com+AC8-mdornseif+AC8-pyGeoDb+AC8-raw+AC8-master+AC8-maps+AC8-deutschland_gebiete.svgz
        .. _SVG: https:+AC8ALw-github.com+AC8-mdornseif+AC8-pyGeoDb+AC8-raw+AC8-master+AC8-maps+AC8-deutschland_gebiete.eps.gz
        .. _`Voronoi-Diagramm`: http:+AC8ALw-de.wikipedia.org+AC8-wiki+AC8-Voronoi-Diagramm
        .. _voronoiexample1: http:+AC8ALw-www.raymondhill.net+AC8-voronoi+AC8-voronoi.php
        .. _voronoiexample2: http:+AC8ALw-www.diku.dk+AC8-hjemmesider+AC8-studerende+AC8-duff+AC8-Fortune+AC8
        
        Autoren
        -------
        
        Der urspr+APw-ngliche Entfernungsberechnungscode wurde in 2007 von Christian N
        Klein entwickelt. Die Voronoi Berechnung basiert auf Code von Steve Fortune,
        der von Shane O'Sullivan in C+-+- und dann von Bill Simons in Python konvertiert
        wurde.
        
        Die Datengrundlage f+APw-r die Polstleitzahlebereiche stammt vom `OpenGeoDb
        Projekt`_. Die Deutschen grenzen stammen aus `Openstreetmap Project Germany`_.
        
        Die Kartengenerierung stammt von Maximillian Dornseif und basiert auf seinem
        Projekt `zipdecode.de`, dass auf Code aus Ben Frys Buch `Visualizing Data`_
        beruht.
        
        .. _`OpenGeoDb Projekt`: http:+AC8ALw-www.opengeodb.de
        .. _`Openstreetmap Project Germany`: http:+AC8ALw-wiki.openstreetmap.org+AC8-wiki+AC8-WikiProject_Germany+AC8-Grenzen#Deutschland
        .. _`zipdecode.de`: http:+AC8ALw-md.hudora.de+AC8-c0de+AC8-zipdecodeDE+AC8
        .. _`Visualizing Data`: http:+AC8ALw-www.librarything.com+AC8-work+AC8-4108432+AC8-book+AC8-37543244
        
        
        Alternativen & Quellen
        ----------------------
        
        `d9t.gis`_ ist ein sehr Zope-Lastiges Python Projekt zur Entfernugnsberechnung
        mit OpenGeoDb Daten.
        
        Es gibt jede Menge Online-Distanzberechnungsdienste, z.B:
        
        * http:+AC8ALw-www.edith-distance.de+AC8-pdf+AC8-doku.pdf
        * http:+AC8ALw-www.ebaas.de+AC8-ebaas-distance-faq+AC8
        * http:+AC8ALw-www.internet-marketing-service.eu+AC8?id=20
        * http:+AC8ALw-www.mprobst.de+AC8-OpenGeoNearestNeighbours+AC8-website+AC8-index.html
        
        Umfangreiche Informationen zum deutschen Postleitzahlensystem inklusive freier
        Rasterkarten gibt es bei Wikipedia_.
        
        .. _`d9t.gis`: http:+AC8ALw-pypi.python.org+AC8-pypi+AC8-d9t.gis
        .. _Wikipedia: http:+AC8ALw-de.wikipedia.org+AC8-wiki+AC8-Postleitzahl_(Deutschland)
        
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
